{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./assets/icons.ts","webpack:///./components/LeftSideBar/ContactInformation/index.tsx","webpack:///./components/LeftSideBar/ContactInformation/style.ts","webpack:///./components/LeftSideBar/PetInformation/index.tsx","webpack:///./components/LeftSideBar/PetInformation/style.ts","webpack:///./components/LeftSideBar/PhotoInformation/index.tsx","webpack:///./components/LeftSideBar/PhotoInformation/style.ts","webpack:///./components/LeftSideBar/SubmitButton/index.tsx","webpack:///./components/LeftSideBar/SubmitButton/style.ts","webpack:///./components/LeftSideBar/index.tsx","webpack:///./components/LeftSideBar/styles.ts","webpack:///./components/Nav/index.tsx","webpack:///./components/Nav/styles.ts","webpack:///./components/canvas/BackgroundImage/index.tsx","webpack:///./components/canvas/CharacteristicsLayer/index.tsx","webpack:///./components/canvas/ContactLayer/index.tsx","webpack:///./components/canvas/index.tsx","webpack:///./pages/index.tsx","webpack:///./pages/styles.ts","webpack:///external \"@blueprintjs/core\"","webpack:///external \"@emotion/core\"","webpack:///external \"react\"","webpack:///external \"react-konva\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export interface IIcon {\n  path: string;\n  w: number;\n  h: number;\n}\n\nexport const band_aid : IIcon = {\n  path: '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"band-aid\" class=\"svg-inline--fa fa-band-aid fa-w-20\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M0 160v192c0 35.3 28.7 64 64 64h96V96H64c-35.3 0-64 28.7-64 64zm576-64h-96v320h96c35.3 0 64-28.7 64-64V160c0-35.3-28.7-64-64-64zM192 416h256V96H192v320zm176-232c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-96-96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24z\"></path></svg>',\n  w: 640,\n  h: 512\n}\n\nexport const birthday_cake : IIcon = {\n  path: '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"birthday-cake\" class=\"svg-inline--fa fa-birthday-cake fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M448 384c-28.02 0-31.26-32-74.5-32-43.43 0-46.825 32-74.75 32-27.695 0-31.454-32-74.75-32-42.842 0-47.218 32-74.5 32-28.148 0-31.202-32-74.75-32-43.547 0-46.653 32-74.75 32v-80c0-26.5 21.5-48 48-48h16V112h64v144h64V112h64v144h64V112h64v144h16c26.5 0 48 21.5 48 48v80zm0 128H0v-96c43.356 0 46.767-32 74.75-32 27.951 0 31.253 32 74.75 32 42.843 0 47.217-32 74.5-32 28.148 0 31.201 32 74.75 32 43.357 0 46.767-32 74.75-32 27.488 0 31.252 32 74.5 32v96zM96 96c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40z\"></path></svg>',\n  w: 448,\n  h: 512\n}\n\nexport const dog : IIcon = {\n  path: '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"dog\" class=\"svg-inline--fa fa-dog fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\" d=\"M298.06,224,448,277.55V496a16,16,0,0,1-16,16H368a16,16,0,0,1-16-16V384H192V496a16,16,0,0,1-16,16H112a16,16,0,0,1-16-16V282.09C58.84,268.84,32,233.66,32,192a32,32,0,0,1,64,0,32.06,32.06,0,0,0,32,32ZM544,112v32a64,64,0,0,1-64,64H448v35.58L320,197.87V48c0-14.25,17.22-21.39,27.31-11.31L374.59,64h53.63c10.91,0,23.75,7.92,28.62,17.69L464,96h64A16,16,0,0,1,544,112Zm-112,0a16,16,0,1,0-16,16A16,16,0,0,0,432,112Z\"></path></svg>',\n  w: 576,\n  h: 512\n}\n\nexport const mars : IIcon = {\n  path: '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"mars\" class=\"svg-inline--fa fa-mars fa-w-12\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path fill=\"currentColor\" d=\"M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c0-6.6-5.4-12-12-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"></path></svg>',\n  w: 384,\n  h: 512\n}\n\nexport const paw : IIcon = {\n  path: '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"paw\" class=\"svg-inline--fa fa-paw fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M256 224c-79.41 0-192 122.76-192 200.25 0 34.9 26.81 55.75 71.74 55.75 48.84 0 81.09-25.08 120.26-25.08 39.51 0 71.85 25.08 120.26 25.08 44.93 0 71.74-20.85 71.74-55.75C448 346.76 335.41 224 256 224zm-147.28-12.61c-10.4-34.65-42.44-57.09-71.56-50.13-29.12 6.96-44.29 40.69-33.89 75.34 10.4 34.65 42.44 57.09 71.56 50.13 29.12-6.96 44.29-40.69 33.89-75.34zm84.72-20.78c30.94-8.14 46.42-49.94 34.58-93.36s-46.52-72.01-77.46-63.87-46.42 49.94-34.58 93.36c11.84 43.42 46.53 72.02 77.46 63.87zm281.39-29.34c-29.12-6.96-61.15 15.48-71.56 50.13-10.4 34.65 4.77 68.38 33.89 75.34 29.12 6.96 61.15-15.48 71.56-50.13 10.4-34.65-4.77-68.38-33.89-75.34zm-156.27 29.34c30.94 8.14 65.62-20.45 77.46-63.87 11.84-43.42-3.64-85.21-34.58-93.36s-65.62 20.45-77.46 63.87c-11.84 43.42 3.64 85.22 34.58 93.36z\"></path></svg>',\n  w: 512,\n  h: 512\n}\n\nexport const syringe : IIcon = {\n  path: '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"syringe\" class=\"svg-inline--fa fa-syringe fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M201.5 174.8l55.7 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-55.7-55.8-45.3 45.3 55.8 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L111 265.2l-26.4 26.4c-17.3 17.3-25.6 41.1-23 65.4l7.1 63.6L2.3 487c-3.1 3.1-3.1 8.2 0 11.3l11.3 11.3c3.1 3.1 8.2 3.1 11.3 0l66.3-66.3 63.6 7.1c23.9 2.6 47.9-5.4 65.4-23l181.9-181.9-135.7-135.7-64.9 65zm308.2-93.3L430.5 2.3c-3.1-3.1-8.2-3.1-11.3 0l-11.3 11.3c-3.1 3.1-3.1 8.2 0 11.3l28.3 28.3-45.3 45.3-56.6-56.6-17-17c-3.1-3.1-8.2-3.1-11.3 0l-33.9 33.9c-3.1 3.1-3.1 8.2 0 11.3l17 17L424.8 223l17 17c3.1 3.1 8.2 3.1 11.3 0l33.9-34c3.1-3.1 3.1-8.2 0-11.3l-73.5-73.5 45.3-45.3 28.3 28.3c3.1 3.1 8.2 3.1 11.3 0l11.3-11.3c3.1-3.2 3.1-8.2 0-11.4z\"></path></svg>',\n  w: 512,\n  h: 512\n}\n\nexport const venus : IIcon = {\n  path: '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"venus\" class=\"svg-inline--fa fa-venus fa-w-9\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 288 512\"><path fill=\"currentColor\" d=\"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z\"></path></svg>',\n  w: 288,\n  h: 512\n}\n","/** @jsx jsx */\nimport { Card, Elevation, FormGroup, H4, InputGroup, NumericInput, Tag, Icon } from '@blueprintjs/core';\nimport { jsx } from '@emotion/core';\nimport React, { FormEvent, ChangeEvent } from 'react';\nimport { IAdoptionForm } from '../../../pages';\nimport { sidebarContainerStyle } from './style';\n\nexport interface IContactInformationProps {\n  onChange: (key: keyof IAdoptionForm, value: any) => void;\n  formValues: IAdoptionForm;\n}\n\nexport default class ContactInformation extends React.Component<\n  IContactInformationProps,\n  any\n> {\n  render() {\n    const { onChange, formValues } = this.props;\n    return (\n      <Card elevation={Elevation.ONE} css={sidebarContainerStyle}>\n        <H4>Datos de contacto</H4>\n        <div>\n          <FormGroup label=\"Nombre *\">\n            <InputGroup\n              placeholder=\"Nombre\"\n              name=\"contact-name\"\n              required\n              value={formValues['contact-name']}\n              onChange={ (e: FormEvent<HTMLInputElement>) : void => {\n                onChange('contact-name', e.currentTarget.value);\n              }}\n              leftIcon='person'\n            />\n          </FormGroup>\n        </div>\n        <div>\n          <FormGroup label=\"Teléfono *\">\n            <InputGroup\n              placeholder=\"Teléfono\"\n              name=\"contact-phone\"\n              value={formValues['contact-phone']}\n              onChange={(e: ChangeEvent<HTMLInputElement>) : void => {\n                onChange('contact-phone', e.currentTarget.value);\n              }}\n              leftIcon='mobile-phone'\n              required\n            />\n          </FormGroup>\n        </div>\n        <div>\n          <FormGroup label=\"Email *\">\n            <InputGroup\n              name=\"Email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={formValues['contact-email']}\n              onChange={(e: FormEvent<HTMLInputElement>) : void => {\n                onChange('contact-email', e.currentTarget.value);\n              }}\n              leftIcon='inbox'\n            />\n          </FormGroup>\n        </div>\n        <div>\n          <FormGroup label=\"Ciudad *\">\n            <InputGroup\n              placeholder=\"Ciudad\"\n              name=\"contact-city\"\n              value={formValues['contact-city']}\n              onChange={(e: FormEvent<HTMLInputElement>) : void => {\n                onChange('contact-city', e.currentTarget.value);\n              }}\n              leftIcon='home'\n            />\n          </FormGroup>\n        </div>\n      </Card>\n    );\n  }\n}\n","import { css } from '@emotion/core';\n\nexport const sidebarContainerStyle = css`\n  margin: 1rem;\n  min-width: 300px;\n  width: 300px;\n`;\n","/** @jsx jsx*/\nimport {\n  Card,\n  Checkbox,\n  Elevation,\n  FormGroup,\n  H4,\n  InputGroup,\n  Radio,\n  Button,\n  Tag,\n  RadioGroup\n} from '@blueprintjs/core';\nimport { jsx } from '@emotion/core';\nimport React, { FormEvent, createRef } from 'react';\nimport { IAdoptionForm, ITextBlockElement } from '../../../pages';\nimport { fakeRadioGroupStyle, sidebarContainerStyle, fileUpload } from './style';\nimport {faDog} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nexport interface IPetInformationProps {\n  onChange: (key: keyof IAdoptionForm, value: any) => void;\n  addText: (textBlock: ITextBlockElement) => void;\n  onImageUploaded: (prop1: HTMLImageElement) => void;\n  changeDimensions: (imageFormat: string) => void;\n  formValues: IAdoptionForm;\n}\n\nexport default class PetInformation extends React.Component<\n  IPetInformationProps,\n  any\n> {\n  state = {\n    size: 'm',\n    caseOption: '1',\n    sex: 'm',\n    inputFileRef: createRef<HTMLInputElement>(),\n    imageFormat: 'cuadrada'\n  };\n\n  onSizeChanged = (e: FormEvent<HTMLInputElement>) => {\n    const { onChange } = this.props;\n    const size = e.currentTarget.value;\n    this.setState({ size });\n    onChange('pet-size', size);\n  };\n\n  onCaseChanged = (e: FormEvent<HTMLInputElement>) => {\n    const { onChange } = this.props;\n    const caseOption = e.currentTarget.value;\n    this.setState({ caseOption });\n    onChange('caso-mascota', caseOption);\n  };\n\n  onSexChanged = (e: FormEvent<HTMLInputElement>) => {\n    const { onChange } = this.props;\n    const sex = e.currentTarget.value;\n    this.setState({ sex });\n    onChange('caso-mascota', sex);\n  };\n\n  openFile = () => {\n    this.state.inputFileRef.current!.click();\n  };\n\n  loadImageOntoReader = (event: ProgressEvent<FileReader>) => {\n    const img = new Image();\n    img.src = event.target!.result as string;\n    img.addEventListener('load', () => {\n      this.props.onImageUploaded(img);\n    });\n  };\n\n  onFileUploaded = (e: FormEvent<HTMLInputElement>) => {\n    const reader = new FileReader();\n    reader.onload = this.loadImageOntoReader;\n    const file : File = e.currentTarget.files![0];\n    if (!file) {\n      console.error('!file', file, e);\n    }\n    reader.readAsDataURL(e.currentTarget.files![0]);\n  };\n\n  onChangeDimensions = (e : FormEvent<HTMLInputElement>) => {\n    const {changeDimensions} = this.props;\n    const newImageFormat = e.currentTarget.value;\n    this.setState({\n      imageFormat: newImageFormat\n    });\n    changeDimensions(newImageFormat);\n  }\n\n  render() {\n    const { onChange, formValues, addText, changeDimensions } = this.props;\n    const { size, caseOption, sex, inputFileRef, imageFormat } = this.state;\n    const yearTag = <Tag>años</Tag>\n    const monthTag = <Tag>meses</Tag>\n    return (\n      <Card elevation={Elevation.ONE} css={sidebarContainerStyle}>\n        <H4>Información</H4>\n        <div>\n          <FormGroup label={'Nombre'}>\n            <InputGroup\n              name=\"nombre-mascota\"\n              placeholder=\"Nombre\"\n              intent=\"primary\"\n              value={formValues['nombre-mascota']}\n              onChange={(e: FormEvent<HTMLInputElement>) : void => {\n                onChange('nombre-mascota', e.currentTarget.value);\n              }}\n              required\n            />\n          </FormGroup>\n        </div>\n        <div>\n          <FormGroup label=\"Situación*\">\n            <Radio\n              name=\"caso\"\n              value={caseOption}\n              onChange={e => onChange('caso-mascota', caseOption)}\n              checked={Boolean(caseOption)}\n              required\n              css={fakeRadioGroupStyle}\n            />\n            <Radio\n              onChange={this.onCaseChanged}\n              checked={caseOption === '1'}\n              label=\"En adopción\"\n              value=\"1\"\n              inline\n            />\n            <Radio\n              onChange={this.onCaseChanged}\n              checked={caseOption === '2'}\n              label=\"Perdida\"\n              value=\"2\"\n              inline\n            />\n          </FormGroup>\n        </div>\n        <div>\n          <FormGroup label=\"Edad aproximada*\">\n            <div style={{display: 'flex', width: '100%'}}>\n            <div style={{width: '50%', margin: '2px'}} >\n            <InputGroup\n              name=\"edad-mascota\"\n              value={formValues['age-pet']}\n              placeholder=\"Años\"\n              rightElement={yearTag}\n              onChange={(e: FormEvent<HTMLInputElement>) : void => {onChange('age-pet', e.currentTarget.value)}}\n              max={20}\n              min={0}\n              required\n            />\n            </div>\n            <div style={{width: '50%', margin: '2px'}} >\n            <InputGroup\n              name=\"edad-mascota\"\n              value={formValues['month-age-pet']}\n              placeholder=\"Meses\"\n              rightElement={monthTag}\n              onChange={(e: FormEvent<HTMLInputElement>) : void => {onChange('month-age-pet', e.currentTarget.value)}}\n              max={11}\n              min={0}\n              required\n            />\n            </div>\n            </div>\n          </FormGroup>\n        </div>\n        <div>\n          <FormGroup label=\"Sexo*\">\n            <Radio\n              name=\"pet-gender\"\n              value={formValues['pet-gender']}\n              onChange={e => onChange('pet-gender', Boolean(sex))}\n              checked={Boolean(formValues['pet-gender'])}\n              required\n              inline\n              css={fakeRadioGroupStyle}\n            />\n            <Radio\n              onChange={e => onChange('pet-gender', '1')}\n              checked={formValues['pet-gender'] === '1'}\n              label=\"Macho\"\n              value=\"1\"\n              inline\n            />\n            <Radio\n              onChange={e => onChange('pet-gender', '2')}\n              checked={formValues['pet-gender'] === '2'}\n              label=\"Hembra\"\n              value=\"2\"\n              inline\n            />\n          </FormGroup>\n        </div>\n        <div>\n          <FormGroup label=\"Tamaño*\">\n            <Radio\n              name=\"pet-size\"\n              value={formValues[\"pet-size\"]}\n              onChange={e => onChange('pet-size', Boolean(size))}\n              checked={Boolean(formValues[\"pet-size\"])}\n              required\n              css={fakeRadioGroupStyle}\n            />\n            <Radio\n              onChange={e => onChange('pet-size', 's')}\n              checked={formValues[\"pet-size\"] === 's'}\n              label=\"Pequeño\"\n              value=\"s\"\n            />\n            <Radio\n              onChange={e => onChange('pet-size', 'm')}\n              checked={formValues[\"pet-size\"] === 'm'}\n              label=\"Mediano\"\n              value=\"m\"\n            />\n            <Radio\n              onChange={e => onChange('pet-size', 'l')}\n              checked={formValues[\"pet-size\"] === 'l'}\n              label=\"Grande\"\n              value=\"l\"\n            />\n          </FormGroup>\n        </div>\n        <div>\n          <Checkbox\n            name=\"Esterilizado\"\n            label=\"¿Está esterilizado?\"\n            checked={formValues.sterilized}\n            onChange={e => {\n              onChange('sterilized', !formValues.sterilized);\n            }}\n          />\n          <Checkbox\n            name=\"chip\"\n            label=\"¿Tiene chip?\"\n            checked={formValues.chip}\n            onChange={e => {\n              onChange('chip', !formValues.chip);\n            }}\n          />\n          <Checkbox\n            name=\"Vacunas\"\n            label=\"¿Tiene las vacunas al día?\"\n            checked={formValues.vaccines}\n            onChange={e => {\n              onChange('vaccines', !formValues.vaccines);\n            }}\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n","import { css } from '@emotion/core';\n\nexport const sidebarContainerStyle = css`\n  margin: 1rem;\n  min-width: 300px;\n  width: 300px;\n`;\n\nexport const fakeRadioGroupStyle = css`\n  opacity: 0;\n  height: 1;\n  position: absolute;\n`;\n\nexport const fileUpload = css`\n  display: none;\n`;\n\nexport const containerStyle = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nexport const ageInputStyle = css`\n  width:\n`\n","/** @jsx jsx*/\nimport {\n  Card,\n  Checkbox,\n  Elevation,\n  FormGroup,\n  H4,\n  InputGroup,\n  Radio,\n  Button,\n  Tag,\n  RadioGroup\n} from '@blueprintjs/core';\nimport { jsx } from '@emotion/core';\nimport React, { FormEvent, createRef } from 'react';\nimport { IAdoptionForm, ITextBlockElement } from '../../../pages';\nimport { fakeRadioGroupStyle, sidebarContainerStyle, fileUpload } from './style';\nimport {faDog} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\nexport interface IPhotoInformationProps {\n  onChange: (key: keyof IAdoptionForm, value: any) => void;\n  addText: (textBlock: ITextBlockElement) => void;\n  onImageUploaded: (prop1: HTMLImageElement) => void;\n  changeDimensions: (imageFormat: string) => void;\n  formValues: IAdoptionForm;\n}\n\nexport default class PhotoInformation extends React.Component<\n  IPhotoInformationProps,\n  any\n> {\n  state = {\n    size: 'm',\n    caseOption: '1',\n    sex: 'm',\n    inputFileRef: createRef<HTMLInputElement>(),\n    imageFormat: 'cuadrada'\n  };\n\n  onSizeChanged = (e: FormEvent<HTMLInputElement>) => {\n    const { onChange } = this.props;\n    const size = e.currentTarget.value;\n    this.setState({ size });\n    onChange('pet-size', size);\n  };\n\n  onCaseChanged = (e: FormEvent<HTMLInputElement>) => {\n    const { onChange } = this.props;\n    const caseOption = e.currentTarget.value;\n    this.setState({ caseOption });\n    onChange('caso-mascota', caseOption);\n  };\n\n  onSexChanged = (e: FormEvent<HTMLInputElement>) => {\n    const { onChange } = this.props;\n    const sex = e.currentTarget.value;\n    this.setState({ sex });\n    onChange('caso-mascota', sex);\n  };\n\n  openFile = () => {\n    this.state.inputFileRef.current!.click();\n  };\n\n  loadImageOntoReader = (event: ProgressEvent<FileReader>) => {\n    const img = new Image();\n    img.src = event.target!.result as string;\n    img.addEventListener('load', () => {\n      this.props.onImageUploaded(img);\n    });\n  };\n\n  onFileUploaded = (e: FormEvent<HTMLInputElement>) => {\n    const reader = new FileReader();\n    reader.onload = this.loadImageOntoReader;\n    const file : File = e.currentTarget.files![0];\n    if (!file) {\n      console.error('!file', file, e);\n    }\n    reader.readAsDataURL(e.currentTarget.files![0]);\n  };\n\n  onChangeDimensions = (e : FormEvent<HTMLInputElement>) => {\n    const {changeDimensions} = this.props;\n    const newImageFormat = e.currentTarget.value;\n    this.setState({\n      imageFormat: newImageFormat\n    });\n    changeDimensions(newImageFormat);\n  }\n\n  render() {\n    const { onChange, formValues, addText, changeDimensions } = this.props;\n    const { size, caseOption, sex, inputFileRef, imageFormat } = this.state;\n    const yearTag = <Tag>años</Tag>\n    const monthTag = <Tag>meses</Tag>\n    return (\n      <Card elevation={Elevation.ONE} css={sidebarContainerStyle}>\n        <H4>Fotografía</H4>\n        <div>\n          <FormGroup label=\"Imagen*\">\n            <Button\n              intent=\"primary\"\n              rightIcon=\"upload\"\n              text=\"Subir Imagen\"\n              onClick={this.openFile}\n            />\n            <input\n              ref={inputFileRef}\n              onChange={this.onFileUploaded}\n              type=\"file\"\n              css={fileUpload}\n            />\n          </FormGroup>\n        </div>\n        <div>\n          <RadioGroup\n            label='Formato*'\n            onChange={this.onChangeDimensions}\n            selectedValue={imageFormat} >\n              <Radio label='Cuadrada' value='cuadrada' />\n              <Radio label='Vertical' value='vertical' />\n              <Radio label='Horizontal' value='horizontal' />\n            </RadioGroup>\n        </div>\n      </Card>\n    );\n  }\n}\n","import { css } from '@emotion/core';\n\nexport const sidebarContainerStyle = css`\n  margin: 1rem;\n  min-width: 300px;\n  width: 300px;\n`;\n\nexport const fakeRadioGroupStyle = css`\n  opacity: 0;\n  height: 1;\n  position: absolute;\n`;\n\nexport const fileUpload = css`\n  display: none;\n`;\n\nexport const containerStyle = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nexport const ageInputStyle = css`\n  width:\n`\n","/** @jsx jsx */\nimport { Button } from '@blueprintjs/core';\nimport { jsx } from '@emotion/core';\nimport React from 'react';\nimport { sidebarContainerStyle } from './style';\n\nclass SubmitButton extends React.Component {\n  render() {\n    return (\n      <div css={sidebarContainerStyle}>\n        <Button type=\"submit\" intent=\"none\" rightIcon=\"floppy-disk\">\n          Crear Imagen\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;\n","import { css } from '@emotion/core';\n\nexport const sidebarContainerStyle = css`\n  margin: 1rem;\n  display: flex;\n  justify-content: flex-end;\n`;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport React, { Component, FormEvent, RefObject } from 'react';\nimport ReactGA from 'react-ga';\n\nimport { IAdoptionForm, ITextBlockElement } from '../../pages';\nimport ContactInformation from './ContactInformation';\nimport PhotoInformation from './PhotoInformation';\nimport PetInformation from './PetInformation';\nimport SubmitButton from './SubmitButton';\nimport TextBlocksCreator from './TextBlocksCreator';\nimport { ITextBlocksConfigPanelState } from './TextBlocksCreator/panel';\nimport { containerStyle } from './styles'\nimport { Stage } from 'konva/types/Stage';\n\nexport interface ILeftSidebarProps {\n  canvasRef: RefObject<Stage>;\n  formValues: IAdoptionForm;\n  selectedTextBlock: string;\n  textBlocks: {\n    [id: string]: ITextBlockElement;\n  };\n  //addTextBlock: () => void;\n  addTextBlockWithData: (textBlock: ITextBlockElement) => void;\n  onInputChanged: (key: keyof IAdoptionForm, value: any) => void;\n  onTextBlockInteracted: (key: string) => void;\n  onTextChanged: (key: string, value: string, id: string) => void;\n  onImageUploaded: (prop1: HTMLImageElement) => void;\n  changeDimensions: (imageFormat: string) => void;\n}\n\nexport interface ILeftSidebarState {\n  isFormValid: boolean;\n}\n\nexport default class LeftSidebar extends Component<\n  ILeftSidebarProps,\n  ILeftSidebarState\n> {\n  state = {\n    isFormValid: false\n  };\n\n  getDataByKey = (form: IAdoptionForm, key: keyof IAdoptionForm) => {\n    return form[key]!.toString();\n  }\n\n  getFormData = (): { formData: FormData; formJson: object } => {\n    const formData = new FormData();\n    const { formValues } = this.props;\n    for (const key in formValues) {\n      if (formValues.hasOwnProperty(key)) {\n        const element: string = this.getDataByKey(formValues, key as keyof IAdoptionForm);\n        formData.append(key, element);\n      }\n    }\n    const imageBlob = this.onExportImageClicked();\n    formData.append('image', imageBlob);\n    return {\n      formData,\n      formJson: formValues\n    };\n  };\n\n  dataURItoBlob = (dataURI: String) => {\n    let byteString;\n    let mimestring;\n\n    if (dataURI.split(',')[0].indexOf('base64') !== -1) {\n      byteString = atob(dataURI.split(',')[1]);\n    } else {\n      byteString = decodeURI(dataURI.split(',')[1]);\n    }\n    mimestring = dataURI\n      .split(',')[0]\n      .split(':')[1]\n      .split(';')[0];\n    const content = new Array();\n    for (let i = 0; i < byteString.length; i++) {\n      content[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([new Uint8Array(content)], { type: mimestring });\n  };\n\n  onExportImageClicked = () => {\n    const imgB64 = this.props.canvasRef.current!.toDataURL({ pixelRatio: 2 });\n    const blob = this.dataURItoBlob(imgB64);\n    return blob;\n  };\n\n  onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    const imgB64 = this.props.canvasRef.current!.getStage().toDataURL({ pixelRatio: 3, quality:1, mimeType: 'image/png', width: 500, height: 750 });\n    let link = document.createElement('a');\n    link.download = \"Test\";\n    link.href = imgB64;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    /*const { formData, formJson } = this.getFormData();\n    const response = await fetch('/api/image', {\n      body: formData,\n      method: 'POST'\n    }).then(r => r.json());\n\n    ReactGA.event({\n      action: 'adoption-created',\n      category: 'User',\n      value: 1,\n      ...formJson\n    });*/\n  };\n\n  onFormChange = (e: FormEvent<HTMLFormElement>) => {\n    const isFormValid = e.currentTarget.checkValidity();\n    this.setState({\n      isFormValid\n    });\n  };\n\n  render() {\n    const {\n      onTextChanged,\n      formValues,\n      onInputChanged,\n      onTextBlockInteracted,\n      selectedTextBlock,\n      textBlocks,\n      addTextBlockWithData,\n      onImageUploaded,\n      changeDimensions\n    } = this.props;\n    return (\n      <form onSubmit={this.onSubmit} onChange={this.onFormChange} css={containerStyle} method=\"post\">\n        <div>\n        <PhotoInformation onChange={onInputChanged} formValues={formValues} addText={addTextBlockWithData} onImageUploaded={onImageUploaded} changeDimensions={changeDimensions}/>\n        <ContactInformation onChange={onInputChanged} formValues={formValues} />\n        </div>\n        <div>\n        <PetInformation onChange={onInputChanged} formValues={formValues} addText={addTextBlockWithData} onImageUploaded={onImageUploaded} changeDimensions={changeDimensions}/>\n          <SubmitButton />\n        </div>\n      </form>\n    );\n  }\n}\n","import { css } from '@emotion/core';\n\nexport const containerStyle = css`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n`;\n","/** @jsx jsx */\nimport { Alignment, Button, Navbar } from '@blueprintjs/core';\nimport { jsx } from '@emotion/core';\nimport React, { Component, createRef, ChangeEvent, FormEvent } from 'react';\nimport { fileUpload, navContainerStyle } from './styles';\n\nclass Nav extends Component {\n\n  render() {\n    return (\n      <Navbar css={navContainerStyle}>\n        <Navbar.Group align={Alignment.LEFT}>\n          <Navbar.Heading>Quiltro</Navbar.Heading>\n          <Navbar.Divider />\n        </Navbar.Group>\n      </Navbar>\n    );\n  }\n}\n\nexport default Nav;\n","import { css } from '@emotion/core';\n\nexport const navContainerStyle = css``;\n\nexport const ulStyle = css`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const fileUpload = css`\n  display: none;\n`;\n\nexport const buttonStyle = css`\n  display: flex;\n`;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport React from 'react';\n\nimport { Image as KonvaImage, Layer } from 'react-konva';\n\nexport interface IBackgroundImageProps {\n  backgroundImage: HTMLImageElement | null;\n  canvasHeight: number;\n  canvasWidth: number;\n  imageFormat: string;\n}\n\nexport default class BackgroundImage extends React.Component<\n  IBackgroundImageProps,\n  any > {\n\n  transformWidth = (oldHeight: number, oldWidth: number, newHeight: number) => {\n    return (newHeight*oldWidth)/oldHeight;\n  }\n\n  transformHeight = (oldHeight: number, oldWidth: number, newWidth: number) => {\n    return (oldHeight*newWidth)/oldWidth;\n  }\n\n  render() {\n    const { backgroundImage, canvasHeight, canvasWidth, imageFormat } = this.props;\n    if (!backgroundImage) {\n      return null;\n    }\n    const { height, width } = backgroundImage;\n    const imageProportion = 0.4;\n    let x = 0;\n    let y = 0;\n    let imageWidth = width;\n    let imageHeight = height;\n\n    if (imageFormat === 'vertical') {\n      if (width < canvasWidth && height < canvasHeight*imageProportion) {\n        const yOffset = (canvasHeight*imageProportion - height)/2;\n        x = (canvasWidth - width)/2;\n        y = canvasHeight*imageProportion + yOffset;\n      }\n      else if (height < canvasHeight*imageProportion) {\n        imageWidth = canvasWidth;\n        imageHeight = this.transformHeight(height, width, imageWidth);\n        const yOffset = (imageHeight*imageProportion)/2 - imageHeight/2;\n        y = canvasHeight*0.3 + yOffset;\n      }\n      else {\n        imageHeight = canvasHeight*imageProportion;\n        imageWidth = this.transformWidth(height, width, imageHeight);\n        if (imageWidth <= canvasWidth) {\n          x = (canvasWidth - imageWidth)/2;\n          y = canvasHeight*0.3\n        }\n        else {\n          imageWidth = canvasWidth;\n          imageHeight = this.transformHeight(height, width, imageWidth);\n          const yOffset = (imageHeight*imageProportion)/2 - imageHeight/2;\n          y = canvasHeight*0.3 + yOffset;\n        }\n      }\n    }\n    else if (imageFormat === 'cuadrada') {\n      imageWidth = canvasWidth;\n      imageHeight = this.transformHeight(height, width, imageWidth);\n    }\n    else if (imageFormat === 'horizontal') {\n      imageHeight = canvasHeight;\n      imageWidth = this.transformWidth(height, width, imageHeight);\n    }\n\n    return (\n      <Layer>\n        {backgroundImage && (\n          <KonvaImage\n            image={backgroundImage}\n            x={x}\n            y={y}\n            width={imageWidth}\n            height={imageHeight}\n            draggable\n          />\n        )}\n      </Layer>\n    );\n  }\n}\n","/** @jsx jsx */\n\nimport React, { Component, createRef, RefObject } from 'react';\nimport { jsx } from '@emotion/core';\nimport { Text, Path, Group, Label, Tag } from 'react-konva';\nimport { IIcon } from '../../../assets/icons'\n\nexport interface ICharacteristicElement {\n  priority: string;\n  icon: IIcon;\n  text: string;\n  scale: number;\n}\n\ninterface ICharacteristicsProps {\n  canvasWidth: number;\n  canvasHeight: number;\n  characteristics: {\n    [priority: string] : ICharacteristicElement\n  };\n  color: string;\n  textColor: string;\n}\n\nclass CharacteristicsLayer extends Component<ICharacteristicsProps, any> {\n\n  render() {\n    const {canvasHeight, canvasWidth, characteristics, color, textColor} = this.props;\n    const layerWidth = canvasWidth*0.7;\n    const layerHeigth = canvasHeight*0.1;\n    console.log(characteristics);\n    const keys = Object.keys(characteristics);\n    console.log(characteristics[keys[0]]);\n    const offsetDelta = 0.08;\n    const xOffset = layerWidth*offsetDelta*(6-keys.length);\n    return (\n      <Group\n      x={canvasWidth*0.05}\n      y={canvasHeight*0.75}\n      height={layerHeigth}\n      width={layerWidth}\n      visible={true}\n      draggable>\n        <Group\n        height={layerHeigth*0.3}\n        width={layerWidth} >\n          <Label>\n            <Tag fill={color} />\n            <Text\n              fill={textColor}\n              text='Características'\n              fontSize={20}\n              fontStyle='bold'\n              width={layerWidth}\n              align='center' />\n          </Label>\n        </Group>\n        {Object.keys(characteristics).sort().map((charKey, index) => {\n          const characteristic = characteristics[charKey];\n          const groupWidth = layerWidth*0.16;\n          const xGroup = xOffset + index*layerWidth*0.16;\n          const yGroup = layerHeigth*0.3;\n          const xIcon = (groupWidth/2) - ((characteristic.icon.w*characteristic.scale)/2)\n          return (\n            <Group\n            width={groupWidth}\n            height={layerHeigth}\n            x={xGroup}\n            y={yGroup} >\n              <Path\n              data={characteristic.icon.path}\n              fill={'white'}\n              scaleX={characteristic.scale}\n              scaleY={characteristic.scale}\n              x={xIcon}\n              y={10} />\n              <Label y={layerHeigth - 12}>\n                <Tag fill={color} />\n                <Text\n                fill={textColor}\n                width={layerWidth*0.16}\n                text={characteristic.text}\n                fontSize={10}\n                align={'center'} />\n              </Label>\n            </Group>\n          )\n        }\n        )}\n      </Group>\n    )\n  }\n\n}\n\nexport default CharacteristicsLayer;\n","/** @jsx jsx */\n\nimport React, { Component, createRef, RefObject } from 'react';\nimport { jsx } from '@emotion/core';\nimport { Text, Path, Group, Label, Tag } from 'react-konva';\nimport {IAdoptionForm} from '../../../pages'\n\n\ninterface IContactProps {\n  canvasWidth: number;\n  canvasHeight: number;\n  formData: IAdoptionForm;\n  color: string;\n  textColor: string;\n}\n\nclass ContactLayer extends Component<IContactProps, any> {\n\n  render() {\n    const {canvasHeight, canvasWidth, formData, color, textColor} = this.props;\n    const layerWidth = canvasWidth*0.2;\n    return (\n      <Group\n      x={canvasWidth*0.75}\n      y={canvasHeight*0.75}\n      width={layerWidth}\n      visible={true}\n      draggable>\n        <Group\n        width={layerWidth} >\n          <Label>\n            <Tag fill={color} />\n            <Text\n              fill={textColor}\n              text='Contacto'\n              fontSize={14}\n              fontStyle='bold'\n              width={layerWidth}\n              align='center' />\n          </Label>\n          {formData['contact-name'] !== '' &&\n            <Label y={20} >\n              <Tag fill={color} />\n              <Text\n              fill={textColor}\n              text={formData['contact-name']}\n              fontSize={11}\n              />\n            </Label>}\n            {formData['contact-phone'] !== '+56 ' &&\n            <Label y={40}  >\n            <Tag fill={color} />\n            <Text\n            fill={textColor}\n            text={formData['contact-phone']}\n            fontSize={11}\n            />\n          </Label>}\n            {formData['contact-email'] !== '' &&\n            <Label y={60} >\n            <Tag fill={color} />\n            <Text\n            fill={textColor}\n            text={formData['contact-email']}\n            fontSize={11}\n             />\n          </Label>}\n            {formData['contact-city'] !== '' &&\n            <Label y={80} >\n            <Tag fill={color} />\n            <Text\n            fill={textColor}\n            text={formData['contact-city']}\n            fontSize={11}\n             />\n          </Label>}\n        </Group>\n      </Group>\n    )\n  }\n\n}\n\nexport default ContactLayer;\n","/** @jsx jsx */\nimport { Card, Elevation } from '@blueprintjs/core';\nimport { jsx } from '@emotion/core';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport Konva from 'konva'\nimport React, { Component, createRef, RefObject } from 'react';\nimport { Layer, Stage, Text, Label, Tag, Rect } from 'react-konva';\nimport { css } from '@emotion/core';\n\nimport { ICanvasTexts, ITextBlockElement, IAdoptionForm } from '../../pages';\nimport BackgroundImage from './BackgroundImage';\nimport EditTextArea from './TextArea';\nimport CanvasText from './Text';\nimport TransformerComponent from './Transformer';\nimport CharacteristicsLayer, { ICharacteristicElement } from './CharacteristicsLayer';\nimport ContactLayer from './ContactLayer';\n\ninterface IAppProps {\n  onRef: RefObject<any>;\n  canvasRef: RefObject<any>;\n  onTextBlockSelected: (arg1: string) => void;\n  image: HTMLImageElement | null;\n  canvasTexts: ICanvasTexts;\n  onTextChanged: (arg1: string, arg2: string) => void;\n  currentCanvasText: ITextBlockElement;\n  canvasHeight: number;\n  canvasWidth: number;\n  characteristics: {\n    [priority: string] : ICharacteristicElement\n  },\n  formData: IAdoptionForm;\n  imageFormat: string;\n  color: string;\n  secundaryColor: string;\n  textColor: string;\n}\n\ninterface IAppState {\n  showEditTextArea: boolean;\n  backgroundImage: HTMLImageElement | null;\n  editTextAreaProps: any;\n  onTextAreaClosed: () => void;\n  targetToRestore: any[];\n  editTextAreaValue: string;\n}\nclass Canvas extends Component<IAppProps, IAppState> {\n  state = {\n    backgroundImage: null,\n    editTextAreaProps: {},\n    editTextAreaValue: '',\n    onTextAreaClosed: () => null,\n    showEditTextArea: false,\n    targetToRestore: []\n  };\n\n  transformerRef = createRef<any>();\n\n  resizeImageHeight = (img: HTMLImageElement, newHeight: number, newWidth: number): Promise<HTMLImageElement> => {\n    const canvas = document.createElement('canvas');\n    canvas.height = newHeight;\n    canvas.width = newWidth;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      return Promise.resolve(img);\n    }\n    return new Promise((resolve, reject) => {\n      ctx.drawImage(img, 0, 0);\n      ctx.drawImage(img, 0, 0, newWidth, newHeight);\n      const dataurl = canvas.toDataURL('image/png');\n\n      const newImage = new Image();\n      newImage.src = dataurl;\n      newImage.addEventListener('load', () => {\n        resolve(newImage);\n      });\n      newImage.addEventListener('error', () => {\n        reject(img);\n      });\n    });\n  };\n\n  getResizedImage = (image: HTMLImageElement) => {\n    const { height, width } = image;\n    const { canvasHeight, canvasWidth } = this.props;\n    let imageHeight = height;\n    let imageWidth = width;\n    // Resize to go over the canvas height\n    imageWidth = imageWidth * (canvasHeight / imageHeight);\n    imageHeight = canvasHeight;\n\n    // Resize to go over the canvas width\n    if (canvasWidth > imageWidth) {\n      imageHeight = imageHeight * (canvasWidth / imageWidth);\n      imageWidth = canvasWidth;\n    }\n    return this.resizeImageHeight(image, imageHeight, imageWidth);\n  };\n\n  async componentDidUpdate(prevProps: any) {\n    const { image } = this.props;\n    if (image && image !== prevProps.image) {\n      const backgroundImage = await this.getResizedImage(image);\n      this.setState({ backgroundImage });\n    }\n  }\n\n  onTextClick = (e:Konva.KonvaEventObject<MouseEvent>): void => {\n    e.cancelBubble = true;\n    const selectedTextBlock = e.target.name();\n    this.props.onTextBlockSelected(selectedTextBlock);\n  };\n\n  handleStageMouseDown = (e: Konva.KonvaEventObject<MouseEvent>) => {\n    const showEditTextArea = false;\n    let selectedTextBlock = '';\n    const { currentTarget } = e;\n    const { targetToRestore } = this.state;\n    const { onTextBlockSelected } = this.props;\n    /*const clickedOnStage = target === currentTarget.getStage();\n    //const clickedOnTransformer =\n    //  target.getParent() && target.getParent().className === 'Transformer';\n    //const hasNoName = Boolean(target.name()); // If the thing we are clicking has no name\n    const isTextNode = typeof e.currentTarget.stat === 'function'; // TODO: maybe remove this?\n    if (isTextNode) {\n      selectedTextBlock = e.target.name;\n    }*/\n\n    if (targetToRestore) {\n      targetToRestore.forEach((el: any) => {\n        const canvasRef = this.props.canvasRef.current!;\n        el.show();\n        canvasRef.draw();\n      });\n    }\n\n    this.setState(\n      {\n        showEditTextArea\n      },\n      () => onTextBlockSelected(selectedTextBlock)\n    );\n  };\n\n  showElements = (currentTarget: any) => () => {\n    this.setState(\n      {\n        showEditTextArea: false\n      },\n      () => {\n        currentTarget.hide();\n        const transformerRef = this.transformerRef.current!;\n        const canvasRef = this.props.canvasRef.current!;\n        currentTarget.show();\n        transformerRef.show();\n        canvasRef.draw();\n      }\n    );\n  };\n\n  hideElements = (currentTarget: any) => {\n    currentTarget.hide();\n    const transformerRef = this.transformerRef.current!;\n    const canvasRef = this.props.canvasRef.current!;\n    currentTarget.hide();\n    transformerRef.hide();\n    canvasRef.draw();\n  };\n\n  onMouseDown = (evt: KonvaEventObject<MouseEvent>): void => {\n    const { onTextBlockSelected } = this.props;\n    evt.cancelBubble = true;\n    const currentTarget: any = evt.target;\n    const { id } = currentTarget.attrs;\n    onTextBlockSelected(id);\n  };\n\n  onDoubleClick = (evt: KonvaEventObject<MouseEvent>): void => {\n    const currentTarget: any = evt.currentTarget;\n    const transformerRef = this.transformerRef.current!;\n    const canvasRef = this.props.canvasRef.current!;\n    this.hideElements(currentTarget);\n\n    // We will create a textarea absolutely positioned over the canvas\n    // And we will render it on a portal\n    // first we need to find position for textarea\n\n    // At first lets find position of text node relative to the stage:\n    const { x, y } = currentTarget.absolutePosition();\n    const { left, top } = canvasRef.container().getBoundingClientRect();\n\n    // so position of textarea will be the sum of positions above:\n    const areaPosition = {\n      x: left + x,\n      y: top + y\n    };\n\n    // Create textarea styles to match text on canvas as close as possible\n    // (Text rendering on canvas and on the textarea can be different\n    // and sometimes it is hard to make it 100% the same)\n    const targetToRestore = [currentTarget, transformerRef];\n    const showEditTextArea = true;\n    const editTextAreaValue = currentTarget.text();\n    const editTextAreaProps = {\n      color: currentTarget.fill() + '',\n      fontFamily: currentTarget.fontFamily() + '',\n      fontSize: currentTarget.fontSize() + 'px',\n      height: currentTarget.height() + 'px',\n      left: areaPosition.x + 'px',\n      lineHeight: currentTarget.lineHeight() + '',\n      padding: currentTarget.padding() + 'px',\n      textAlign: currentTarget.align() + '',\n      top: areaPosition.y + 'px',\n      transformOrigin: 'left top',\n      width: currentTarget.width() + 5 + 'px'\n    };\n\n    const onTextAreaClosed = this.showElements(currentTarget);\n\n    this.setState({\n      editTextAreaProps,\n      editTextAreaValue,\n      onTextAreaClosed,\n      showEditTextArea,\n      targetToRestore\n    });\n  };\n\n  onMount = (ref : RefObject<any>) => {\n    this.transformerRef = ref;\n  };\n\n  render() {\n    const {\n      backgroundImage,\n      showEditTextArea,\n      editTextAreaProps,\n      onTextAreaClosed\n    } = this.state;\n    const { canvasTexts, onRef, onTextChanged, canvasHeight, canvasWidth, characteristics, formData, imageFormat, color, secundaryColor, textColor } = this.props;\n    const { textBlocks, selectedTextBlock } = canvasTexts;\n    const canvasStyle = css`\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      margin: 1rem;\n      justify-content: center;\n      & .konvajs-content {\n        background-color: ${color};\n        border: solid 1px lightgray;\n      }\n    `;\n    return (\n      <Card elevation={Elevation.ONE} css={canvasStyle}>\n        {process.browser && (\n          <Stage\n            ref={onRef}\n            width={canvasWidth}\n            height={canvasHeight}\n            onClick={this.handleStageMouseDown}\n          >\n            <Layer>\n              <Rect width={canvasWidth} height={canvasHeight} fill={color} />\n            </Layer>\n            <BackgroundImage backgroundImage={backgroundImage} canvasHeight={canvasHeight} canvasWidth={canvasWidth} imageFormat={imageFormat} />\n            <Layer  >\n\n            <Label\n              x={0}\n              y={canvasHeight*0.1}\n              >\n              <Tag fill={color} />\n              <Text\n              fill={textColor}\n              padding={10}\n              fontSize={35}\n              text={formData['nombre-mascota'] !== '' ? formData['nombre-mascota'] : 'Nombre mascota'}\n              align={'center'}\n              width={canvasWidth}\n              fontStyle={'bold'}\n              // _useStrictMode\n              />\n            </Label>\n            <Label\n              x={0}\n              y={canvasHeight*0.2}\n              >\n              <Tag fill={color} />\n              <Text\n              fill={textColor}\n              padding={10}\n              fontSize={22}\n              text={formData['caso-mascota'] !== '' ? (formData['caso-mascota'] === '1' ? \"En adopción\" : 'Perdido') : 'Caso mascota'}\n              align={'center'}\n              width={canvasWidth}\n              // _useStrictMode\n              />\n            </Label>\n\n              <CharacteristicsLayer canvasHeight={canvasHeight} canvasWidth={canvasWidth} characteristics={characteristics} color={color} textColor={textColor} />\n\n              <ContactLayer canvasHeight={canvasHeight} canvasWidth={canvasWidth} formData={formData} color={color} textColor={textColor} />\n\n              <Label\n              y={canvasHeight*0.95} >\n                <Tag fill={secundaryColor} />\n                <Text\n                fill={textColor}\n                  padding={10}\n                  width={canvasWidth}\n                  text='difunde.quiltroschile.cl'\n                  fontSize={12}\n                  align='center' />\n              </Label>\n\n              {/*<TransformerComponent\n                resizeEnabled\n                rotateEnabled={true}\n                borderEnabled\n                onMount={this.onMount}\n                selectedShapeName={selectedTextBlock}\n              />*/}\n            </Layer>\n          </Stage>\n        )}\n        {/*showEditTextArea && textBlocks[selectedTextBlock].text && (\n          <EditTextArea\n            onTextAreaClosed={onTextAreaClosed}\n            onTextAreaChanged={onTextChanged}\n            selectedtextblockid={selectedTextBlock}\n            value={textBlocks[selectedTextBlock].text}\n            style={editTextAreaProps}\n            maxWidth={canvasWidth}\n            maxHeight={canvasHeight}\n          />\n        )*/}\n      </Card>\n    );\n  }\n}\n\nexport default Canvas;\n","/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport nanoid from 'nanoid';\nimport React, { Component, createRef } from 'react';\nimport Canvas from '../components/canvas';\nimport LeftSidebar from '../components/LeftSideBar';\nimport { ICharacteristicElement } from '../components/canvas/CharacteristicsLayer';\nimport Nav from '../components/Nav';\nimport { containerStyle, pageStyle } from './styles';\nimport * as icons from '../assets/icons';\nimport Konva from 'konva'\nimport axios from 'axios';\n\ninterface IHomeState {\n  canvasImage: HTMLImageElement | null;\n  canvasTexts: ICanvasTexts;\n  formValues: IAdoptionForm;\n  characteristics: ICharacteristics;\n  canvasHeight: number;\n  canvasWidth: number;\n  imageFormat: string;\n  color: string;\n  secundaryColor: string;\n  textColor: string;\n}\n\nexport interface ICanvasTexts {\n  selectedTextBlock: string; // TODO: Change this for a string union type\n  textBlocks: ITextBlocks\n}\n\ninterface ICharacteristics {\n  [priority: string] : ICharacteristicElement;\n}\n\ninterface ITextBlocks {\n    // TODO: Change keys on this objects also for a string uniion type.\n    // (Based on the types of TextBlocksCreator.buttonsKeys )\n    [s: string]: ITextBlockElement;\n}\n\nexport interface ITextBlockElement {\n  id: string;\n  text: string;\n  fontSize: 'small' | 'medium' | 'large';\n  color: 'black' | 'red' | 'green' | 'purple' | 'yellow' | 'white';\n  position: {\n    x: number;\n    y: number;\n  };\n  width?: number;\n  align?: 'left' | 'center' | 'right';\n  style?: 'normal' | 'bold' |  'italic';\n}\n\nexport interface IAdoptionForm {\n  'nombre-mascota': string;\n  'contact-name': string;\n  'contact-phone': string;\n  'whatsapp-contacto': string;\n  'contact-email': string;\n  'sterilized': boolean;\n  'chip': boolean;\n  'vaccines': boolean;\n  'edad-mascota': string;\n  'informacion-extra-mascota'?: string;\n  'pet-size': string;\n  'caso-mascota': string;\n  'contact-city': string;\n  'pet-gender': string;\n  'age-pet': string;\n  'month-age-pet': string;\n}\n\nclass Home extends Component<any, IHomeState> {\n  state = {\n    canvasImage: null,\n    canvasTexts: {\n      selectedTextBlock : '',\n      textBlocks: {} as ITextBlocks\n    },\n    formValues: {\n      chip: false,\n      'edad-mascota': '',\n      'contact-email': '',\n      sterilized: false,\n      'informacion-extra-mascota': '',\n      'contact-name': '',\n      'nombre-mascota': '',\n      'pet-size': '',\n      'contact-phone': '+56 ',\n      vaccines: false,\n      'whatsapp-contacto': '',\n      'caso-mascota': '',\n      'contact-city': '',\n      'pet-gender': '',\n      'age-pet': '',\n      'month-age-pet': ''\n    },\n    characteristics: {},\n    canvasHeight: 540,\n    canvasWidth: 540,\n    imageFormat: 'cuadrada',\n    color: '#62bfa2',\n    secundaryColor: '#51947f',\n    textColor: '#ffffff'\n  };\n\n  stageRef = createRef<any>();\n\n  componentDidMount() {\n    //this.addTextBlock();\n    /*console.log(window.devicePixelRatio);\n    const exios = axios.create({\n      baseURL: 'https://api.twitter.com/',\n    })\n    axios.get('https://api.twitter.com/oauth/authorize').then(r => {\n      console.log(r);\n    }).catch(error => {\n      console.error(error);\n    })*/\n  }\n\n  changeDimensions = (imageFormat : string) => {\n    switch (imageFormat) {\n      case 'vertical' :\n        this.setState({\n          canvasWidth: 540,\n          canvasHeight: 675,\n          imageFormat: imageFormat\n        });\n        break;\n      case 'cuadrada' :\n        this.setState({\n          canvasWidth: 540,\n          canvasHeight: 540,\n          imageFormat: imageFormat\n        });\n        break;\n      case 'horizontal' :\n        this.setState({\n          canvasWidth: 1080,\n          canvasHeight: 576,\n          imageFormat: imageFormat\n        });\n        break;\n    }\n  }\n\n  setSelectedTextBlock = (selectedTextBlock: string) => {\n    const { canvasTexts } = this.state;\n    this.setState({\n      canvasTexts: {\n        ...canvasTexts,\n        selectedTextBlock\n      }\n    });\n  };\n\n  setCanvasImage = (image: HTMLImageElement) => {\n    this.setState({\n      canvasImage: image\n    });\n  };\n\n  onTextChanged = (key: string, value: string, id: string) => {\n    const { canvasTexts } = this.state;\n    const { textBlocks } = canvasTexts;\n    this.setState({\n      canvasTexts: {\n        ...canvasTexts,\n        textBlocks: {\n          ...textBlocks,\n          [id]: {\n            ...textBlocks[id],\n            [key]: value\n          }\n        }\n      }\n    });\n  };\n\n  onTextBlockChanged = (id: string, text: string) => {\n    const { canvasTexts } = this.state;\n    const { textBlocks } = canvasTexts;\n    this.setState(\n      {\n        canvasTexts: {\n          ...canvasTexts,\n          textBlocks: {\n            ...textBlocks,\n            [id]: {\n              ...textBlocks[id],\n              text\n            }\n          }\n        }\n      },\n      () => {\n        console.log(this.state);\n      }\n    );\n  };\n\n  setAdoptionFormField = (key: keyof IAdoptionForm, value: any) => {\n    const { canvasTexts, canvasHeight, canvasWidth, characteristics, formValues } = this.state;\n    const { textBlocks } = canvasTexts;\n    const actualCharacteristics: ICharacteristics = characteristics;\n    let size = 'Pequeño';\n    let newTextBlock: ITextBlockElement = {\n      id: key,\n      color: 'black',\n      text: value,\n      fontSize: 'medium',\n      position: {x: 0, y: 0}\n    }\n    let characteristic: ICharacteristicElement = {\n      priority: '',\n      text: '',\n      icon: {path: '', w: -1, h:-1},\n      scale: -1\n    }\n    let validator: '' | 'textBlock' | 'characteristic' | 'deletedCharacteristic'= '';\n    switch (key) {\n      case 'nombre-mascota' :\n        newTextBlock.align = 'center';\n        newTextBlock.width = canvasWidth;\n        newTextBlock.position.y = canvasHeight*0.1;\n        newTextBlock.style = 'bold';\n        newTextBlock.fontSize = 'large';\n        validator = 'textBlock';\n        break;\n      case 'caso-mascota' :\n        newTextBlock.align = 'center';\n        newTextBlock.width = canvasWidth;\n        newTextBlock.position.y = canvasHeight*0.2;\n        newTextBlock.text = value === '1' ? \"En adopción\" : 'Perdido';\n        validator = 'textBlock';\n        break;\n      case 'age-pet' :\n        if (isNaN(value) && value !== '0') {\n          value = formValues['age-pet'];\n        }\n        else {\n          const months = formValues['month-age-pet'];\n          let ageString = '';\n          let yearTextAux = '';\n          let monthTextAux = '';\n          if (value !== '' && months !== '' && value !== '0' && months !== '0') {\n            yearTextAux = parseInt(value, 10) > 1 ? ' años ' : ' año ';\n            monthTextAux = parseInt(months, 10) > 1 ? ' meses ' : ' mes ';\n            ageString = value + yearTextAux + '\\n' + months + monthTextAux;\n          }\n          else if (value !== '' && value !== '0') {\n            yearTextAux = parseInt(value, 10) > 1 ? ' años' : ' año';\n            ageString = value + yearTextAux;\n          }\n          else if (months !== '' && months !== '0') {\n            monthTextAux = parseInt(months, 10) > 1 ? ' meses' : ' mes';\n            ageString = months + monthTextAux;\n          }\n          characteristic = {\n            priority: '0',\n            icon: icons.birthday_cake,\n            text: ageString,\n            scale: 0.05\n          }\n          validator = 'characteristic';\n        }\n        break;\n      case 'month-age-pet' :\n        if (isNaN(value) && value !== '0') {\n          value = formValues['month-age-pet'];\n        }\n        else {\n          const year = formValues['age-pet'];\n          let ageString2 = ''\n          let yearTextAux = '';\n          let monthTextAux = '';\n          if (value !== '' && year !== '' && value !== '0' && year !== '0') {\n            yearTextAux = parseInt(year, 10) > 1 ? ' años ' : ' año ';\n            monthTextAux = parseInt(value, 10) > 1 ? ' meses ' : ' mes ';\n            ageString2 = year + yearTextAux + '\\n' + value + monthTextAux;\n          }\n          else if (value !== '' && value !== '0') {\n            monthTextAux = parseInt(value, 10) > 1 ? ' meses' : ' mes';\n            ageString2 = value + monthTextAux;\n          }\n          else if (year !== '' && year !== '0') {\n            yearTextAux = parseInt(year, 10) > 1 ? ' años' : ' año';\n            ageString2 = year + yearTextAux;\n          }\n          characteristic = {\n            priority: '0',\n            icon: icons.birthday_cake,\n            text: ageString2,\n            scale: 0.08\n          }\n          validator = 'characteristic';\n        }\n        break;\n      case 'pet-gender' :\n        characteristic = {\n          priority: '1',\n          icon: value === '1' ? icons.mars : icons.venus,\n          text: value === '1' ? 'Macho' : 'Hembra',\n          scale: 0.08\n        }\n        validator = 'characteristic';\n        break;\n      case 'pet-size' :\n        size = 'Pequeño';\n        if( value === 'm' ) size = 'Mediano';\n        if( value !== 'm' &&  value !== 's' ) size = 'Grande';\n        characteristic = {\n          priority: '3',\n          icon: icons.dog,\n          text: size,\n          scale:  value === 's' ? 0.04 : value === 'm' ? 0.06 : 0.08\n        }\n        validator = 'characteristic';\n        break;\n      case 'sterilized' :\n        if(value) {\n          characteristic = {\n            priority: '4',\n            icon: icons.band_aid,\n            text: 'sterilized',\n            scale: 0.08\n          }\n          validator = 'characteristic';\n        }\n        else {\n          delete actualCharacteristics['4'];\n          validator = 'deletedCharacteristic';\n        }\n        break;\n      case 'chip' :\n        if(value) {\n          characteristic = {\n            priority: '5',\n            icon: icons.paw,\n            text: 'Con chip',\n            scale: 0.08\n          }\n          validator = 'characteristic';\n        }\n        else {\n          delete actualCharacteristics['5'];\n          validator = 'deletedCharacteristic';\n        }\n        break;\n      case 'vaccines' :\n        if(value) {\n          characteristic = {\n            priority: '6',\n            icon: icons.syringe,\n            text: 'Al día',\n            scale: 0.08\n          }\n          validator = 'characteristic';\n        }\n        else {\n          delete actualCharacteristics['6'];\n          validator = 'deletedCharacteristic';\n        }\n        break;\n      case 'contact-phone':\n        if (value.length < 4) {\n          value = '+56 ';\n        }\n        else if (isNaN(value.slice(4).trim())) {\n          value = formValues['contact-phone'];\n        }\n        break;\n      /*case 'contact-name':\n        newTextBlock.fontSize = 'small';\n        newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7};\n        validator = 'textBlock';\n        break;\n      case 'contact-phone':\n        if (value.length < 4) {\n          value = '+56 ';\n        }\n        newTextBlock.fontSize = 'small';\n        newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7 + 30};\n        validator = 'textBlock';\n        break;\n        case 'contact-email':\n          newTextBlock.fontSize = 'small';\n          newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7 + 60};\n          validator = 'textBlock';\n          break;\n        case 'contact-city':\n          newTextBlock.fontSize = 'small';\n          newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7 + 90};\n          validator = 'textBlock';\n          break;\n      */\n        default:\n\n    }\n    if(validator === 'textBlock') {\n      this.setState({\n        formValues: {\n          ...this.state.formValues,\n          [key]: value\n        },\n        canvasTexts: {\n          ...canvasTexts,\n          textBlocks: {\n            ...textBlocks,\n            [key]: newTextBlock\n          }\n        }\n      });\n    }\n    else if (validator === 'characteristic') {\n      this.setState({\n        formValues: {\n          ...this.state.formValues,\n          [key]: value\n        },\n        characteristics: {\n          ...characteristics,\n          [characteristic.priority]: characteristic\n        }\n      });\n    }\n    else if (validator = 'deletedCharacteristic') {\n      this.setState({\n        formValues: {\n          ...this.state.formValues,\n          [key]: value\n        },\n        characteristics: actualCharacteristics\n      });\n    }\n  };\n\n  deleteCharacteristic = (characPriority: string) => {\n    const { characteristics } = this.state;\n    const actualCharacteristics: ICharacteristics = characteristics;\n    const updatePriority: ICharacteristics = {};\n    Object.keys(characteristics).forEach(priority => {\n      if (priority !== characPriority) {\n        updatePriority[priority] = actualCharacteristics[priority];\n      }\n    })\n  }\n\n  /*addTextBlock = () => {\n    const { canvasTexts } = this.state;\n    const { textBlocks } = canvasTexts;\n\n    const id = nanoid();\n    const newTextblock: ITextBlockElement = {\n      color: 'black',\n      fontSize: 'medium',\n      id,\n      text: ''\n    };\n\n    this.setState({\n      canvasTexts: {\n        ...canvasTexts,\n        textBlocks: {\n          ...textBlocks,\n          [id]: newTextblock\n        }\n      }\n    });\n  };*/\n\n  addTextBlockWithData = (newTextblock: ITextBlockElement) => {\n    const { canvasTexts } = this.state;\n    const { textBlocks } = canvasTexts;\n    const id = newTextblock.id;\n    this.setState({\n      canvasTexts: {\n        ...canvasTexts,\n        textBlocks: {\n          ...textBlocks,\n          [id]: newTextblock\n        }\n      }\n    });\n  };\n\n  render() {\n    const { canvasImage, canvasTexts, formValues, canvasHeight, canvasWidth, characteristics, imageFormat, color, secundaryColor, textColor } = this.state;\n    const { selectedTextBlock, textBlocks } = canvasTexts;\n    return (\n      <div css={pageStyle}>\n        <Nav />\n        <section data-name=\"bodycontainer\" css={containerStyle}>\n          <LeftSidebar\n            canvasRef={this.stageRef}\n            formValues={formValues}\n            onTextBlockInteracted={this.setSelectedTextBlock}\n            selectedTextBlock={selectedTextBlock}\n            textBlocks={textBlocks}\n            onInputChanged={this.setAdoptionFormField}\n            onTextChanged={this.onTextChanged}\n            addTextBlockWithData={this.addTextBlockWithData}\n            onImageUploaded={this.setCanvasImage}\n            changeDimensions={this.changeDimensions}\n          />\n          <Canvas\n            canvasRef={this.stageRef}\n            canvasTexts={canvasTexts}\n            currentCanvasText={textBlocks[selectedTextBlock]}\n            image={canvasImage}\n            onRef={this.stageRef}\n            onTextChanged={this.onTextBlockChanged}\n            onTextBlockSelected={this.setSelectedTextBlock}\n            canvasHeight={canvasHeight}\n            canvasWidth={canvasWidth}\n            characteristics={characteristics}\n            formData={formValues}\n            imageFormat={imageFormat}\n            color={color}\n            secundaryColor={secundaryColor}\n            textColor={textColor}\n          />\n\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n\n","import { css } from '@emotion/core';\n\nexport const containerStyle = css`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding-top: 1rem;\n  padding-bottom: 4rem;\n  width: 900px;\n`;\n\nexport const pageStyle = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n","module.exports = require(\"@blueprintjs/core\");","module.exports = require(\"@emotion/core\");","module.exports = require(\"react\");","module.exports = require(\"react-konva\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AAEA;AAOA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;A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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1HA;AA4HA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAlIA;AAoIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AArLA;AAuLA;AACA;AAxLA;AACA;AAoDA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA8HA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;AAOA;;;AAPA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAqDA;AAgCA;AACA;AArSA;AACA;AAsSA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpVA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAgEA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AACA;AAFA;AACA;AADA;AAkDA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AArBA;AAuBA;AACA;AA1EA;AA4EA;AAAA;AAAA;AACA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AApFA;AAsFA;AACA;AADA;AAGA;AACA;AA1FA;AA4FA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AAFA;AAFA;AAFA;AADA;AAYA;AACA;AA3GA;AA6GA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AAEA;AAFA;AAFA;AAFA;AADA;AAaA;AACA;AAEA;AACA;AAjIA;AAmIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AAhLA;AACA;AAkLA;AACA;AACA;AAEA;AAFA;AAIA;AAEA;AAEA;AAFA;AAFA;AALA;AAaA;AAEA;AACA;AAEA;AAFA;AAIA;AAEA;AAFA;AALA;AAUA;AAEA;AACA;AAEA;AAFA;AAIA;AALA;AAOA;AACA;AACA;AA7WA;AA+WA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxXA;AAiZA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AADA;AASA;AA7ZA;AACA;AAmCA;AACA;AACA;;;;;;;;;AASA;AACA;AA+WA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AAxcA;AACA;AAycA;;;;;;;;;;;;ACphBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;AAAA;AASA;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACXA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}