{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./assets/icons.ts","webpack:///./components/LeftSideBar/ContactInformation/index.tsx","webpack:///./components/LeftSideBar/ContactInformation/style.ts","webpack:///./components/LeftSideBar/PetInformation/index.tsx","webpack:///./components/LeftSideBar/PetInformation/style.ts","webpack:///./components/LeftSideBar/SubmitButton/index.tsx","webpack:///./components/LeftSideBar/SubmitButton/style.ts","webpack:///./components/LeftSideBar/index.tsx","webpack:///./components/LeftSideBar/styles.ts","webpack:///./components/Nav/index.tsx","webpack:///./components/Nav/styles.ts","webpack:///./components/canvas/BackgroundImage/index.tsx","webpack:///./components/canvas/CharacteristicsLayer/index.tsx","webpack:///./components/canvas/ContactLayer/index.tsx","webpack:///./components/canvas/Text/index.tsx","webpack:///./components/canvas/index.tsx","webpack:///./components/canvas/style.ts","webpack:///./pages/index.tsx","webpack:///./pages/styles.ts","webpack:///external \"@blueprintjs/core\"","webpack:///external \"@emotion/core\"","webpack:///external \"react\"","webpack:///external \"react-konva\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export const band_aid = '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"band-aid\" class=\"svg-inline--fa fa-band-aid fa-w-20\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M0 160v192c0 35.3 28.7 64 64 64h96V96H64c-35.3 0-64 28.7-64 64zm576-64h-96v320h96c35.3 0 64-28.7 64-64V160c0-35.3-28.7-64-64-64zM192 416h256V96H192v320zm176-232c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-96-96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24z\"></path></svg>';\r\n\r\nexport const birthday_cake = '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"birthday-cake\" class=\"svg-inline--fa fa-birthday-cake fa-w-14\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M448 384c-28.02 0-31.26-32-74.5-32-43.43 0-46.825 32-74.75 32-27.695 0-31.454-32-74.75-32-42.842 0-47.218 32-74.5 32-28.148 0-31.202-32-74.75-32-43.547 0-46.653 32-74.75 32v-80c0-26.5 21.5-48 48-48h16V112h64v144h64V112h64v144h64V112h64v144h16c26.5 0 48 21.5 48 48v80zm0 128H0v-96c43.356 0 46.767-32 74.75-32 27.951 0 31.253 32 74.75 32 42.843 0 47.217-32 74.5-32 28.148 0 31.201 32 74.75 32 43.357 0 46.767-32 74.75-32 27.488 0 31.252 32 74.5 32v96zM96 96c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40z\"></path></svg>';\r\n\r\nexport const dog = '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"dog\" class=\"svg-inline--fa fa-dog fa-w-18\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\" d=\"M298.06,224,448,277.55V496a16,16,0,0,1-16,16H368a16,16,0,0,1-16-16V384H192V496a16,16,0,0,1-16,16H112a16,16,0,0,1-16-16V282.09C58.84,268.84,32,233.66,32,192a32,32,0,0,1,64,0,32.06,32.06,0,0,0,32,32ZM544,112v32a64,64,0,0,1-64,64H448v35.58L320,197.87V48c0-14.25,17.22-21.39,27.31-11.31L374.59,64h53.63c10.91,0,23.75,7.92,28.62,17.69L464,96h64A16,16,0,0,1,544,112Zm-112,0a16,16,0,1,0-16,16A16,16,0,0,0,432,112Z\"></path></svg>';\r\n\r\nexport const mars = '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"mars\" class=\"svg-inline--fa fa-mars fa-w-12\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path fill=\"currentColor\" d=\"M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c0-6.6-5.4-12-12-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"></path></svg>';\r\n\r\nexport const paw = '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"paw\" class=\"svg-inline--fa fa-paw fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M256 224c-79.41 0-192 122.76-192 200.25 0 34.9 26.81 55.75 71.74 55.75 48.84 0 81.09-25.08 120.26-25.08 39.51 0 71.85 25.08 120.26 25.08 44.93 0 71.74-20.85 71.74-55.75C448 346.76 335.41 224 256 224zm-147.28-12.61c-10.4-34.65-42.44-57.09-71.56-50.13-29.12 6.96-44.29 40.69-33.89 75.34 10.4 34.65 42.44 57.09 71.56 50.13 29.12-6.96 44.29-40.69 33.89-75.34zm84.72-20.78c30.94-8.14 46.42-49.94 34.58-93.36s-46.52-72.01-77.46-63.87-46.42 49.94-34.58 93.36c11.84 43.42 46.53 72.02 77.46 63.87zm281.39-29.34c-29.12-6.96-61.15 15.48-71.56 50.13-10.4 34.65 4.77 68.38 33.89 75.34 29.12 6.96 61.15-15.48 71.56-50.13 10.4-34.65-4.77-68.38-33.89-75.34zm-156.27 29.34c30.94 8.14 65.62-20.45 77.46-63.87 11.84-43.42-3.64-85.21-34.58-93.36s-65.62 20.45-77.46 63.87c-11.84 43.42 3.64 85.22 34.58 93.36z\"></path></svg>';\r\n\r\nexport const syringe = '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"syringe\" class=\"svg-inline--fa fa-syringe fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M201.5 174.8l55.7 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-55.7-55.8-45.3 45.3 55.8 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L111 265.2l-26.4 26.4c-17.3 17.3-25.6 41.1-23 65.4l7.1 63.6L2.3 487c-3.1 3.1-3.1 8.2 0 11.3l11.3 11.3c3.1 3.1 8.2 3.1 11.3 0l66.3-66.3 63.6 7.1c23.9 2.6 47.9-5.4 65.4-23l181.9-181.9-135.7-135.7-64.9 65zm308.2-93.3L430.5 2.3c-3.1-3.1-8.2-3.1-11.3 0l-11.3 11.3c-3.1 3.1-3.1 8.2 0 11.3l28.3 28.3-45.3 45.3-56.6-56.6-17-17c-3.1-3.1-8.2-3.1-11.3 0l-33.9 33.9c-3.1 3.1-3.1 8.2 0 11.3l17 17L424.8 223l17 17c3.1 3.1 8.2 3.1 11.3 0l33.9-34c3.1-3.1 3.1-8.2 0-11.3l-73.5-73.5 45.3-45.3 28.3 28.3c3.1 3.1 8.2 3.1 11.3 0l11.3-11.3c3.1-3.2 3.1-8.2 0-11.4z\"></path></svg>';\r\n\r\nexport const venus = '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"venus\" class=\"svg-inline--fa fa-venus fa-w-9\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 288 512\"><path fill=\"currentColor\" d=\"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z\"></path></svg>';\r\n","/** @jsx jsx */\r\nimport { Card, Elevation, FormGroup, H4, InputGroup, NumericInput, Tag, Icon } from '@blueprintjs/core';\r\nimport { jsx } from '@emotion/core';\r\nimport React, { FormEvent, ChangeEvent } from 'react';\r\nimport { IAdoptionForm } from '../../../pages';\r\nimport { sidebarContainerStyle } from './style';\r\n\r\nexport interface IContactInformationProps {\r\n  onChange: (key: keyof IAdoptionForm, value: any) => void;\r\n  formValues: IAdoptionForm;\r\n}\r\n\r\nexport default class ContactInformation extends React.Component<\r\n  IContactInformationProps,\r\n  any\r\n> {\r\n  render() {\r\n    const { onChange, formValues } = this.props;\r\n    return (\r\n      <Card elevation={Elevation.ONE} css={sidebarContainerStyle}>\r\n        <H4>Datos de contacto</H4>\r\n        <div>\r\n          <FormGroup label=\"Nombre *\">\r\n            <InputGroup\r\n              placeholder=\"Nombre\"\r\n              name=\"nombre-contacto\"\r\n              required\r\n              value={formValues['nombre-contacto']}\r\n              onChange={ (e: FormEvent<HTMLInputElement>) : void => {\r\n                onChange('nombre-contacto', e.currentTarget.value);\r\n              }}\r\n              leftIcon='person'\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <FormGroup label=\"Teléfono *\">\r\n            <InputGroup\r\n              placeholder=\"Teléfono\"\r\n              name=\"telefono-contacto\"\r\n              value={formValues['telefono-contacto']}\r\n              onChange={(e: ChangeEvent<HTMLInputElement>) : void => {\r\n                onChange('telefono-contacto', e.currentTarget.value);\r\n              }}\r\n              leftIcon='mobile-phone'\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <FormGroup label=\"Email *\">\r\n            <InputGroup\r\n              name=\"Email\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={formValues['email-contacto']}\r\n              onChange={(e: FormEvent<HTMLInputElement>) : void => {\r\n                onChange('email-contacto', e.currentTarget.value);\r\n              }}\r\n              leftIcon='inbox'\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <FormGroup label=\"Ciudad *\">\r\n            <InputGroup\r\n              placeholder=\"Ciudad\"\r\n              name=\"ciudad-contacto\"\r\n              value={formValues['ciudad-contacto']}\r\n              onChange={(e: FormEvent<HTMLInputElement>) : void => {\r\n                onChange('ciudad-contacto', e.currentTarget.value);\r\n              }}\r\n              leftIcon='home'\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import { css } from '@emotion/core';\r\n\r\nexport const sidebarContainerStyle = css`\r\n  margin: 1rem;\r\n  min-width: 300px;\r\n  width: 300px;\r\n`;\r\n","/** @jsx jsx */\r\nimport {\r\n  Card,\r\n  Checkbox,\r\n  Elevation,\r\n  FormGroup,\r\n  H4,\r\n  InputGroup,\r\n  Radio,\r\n  TextArea,\r\n  Button,\r\n  NumericInput,\r\n  Tag\r\n} from '@blueprintjs/core';\r\nimport { jsx } from '@emotion/core';\r\nimport React, { FormEvent, createRef } from 'react';\r\nimport { IAdoptionForm, ITextBlockElement } from '../../../pages';\r\nimport { fakeRadioGroupStyle, sidebarContainerStyle, fileUpload, containerStyle } from './style';\r\nimport {faDog} from '@fortawesome/free-solid-svg-icons';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nexport interface IPetInformationProps {\r\n  onChange: (key: keyof IAdoptionForm, value: any) => void;\r\n  addText: (textBlock: ITextBlockElement) => void;\r\n  onImageUploaded: (prop1: HTMLImageElement) => void;\r\n  formValues: IAdoptionForm;\r\n}\r\n\r\nexport default class PetInformation extends React.Component<\r\n  IPetInformationProps,\r\n  any\r\n> {\r\n  state = {\r\n    size: '',\r\n    caseOption: '',\r\n    sex: '',\r\n    inputFileRef: createRef<HTMLInputElement>()\r\n  };\r\n\r\n  onSizeChanged = (e: FormEvent<HTMLInputElement>) => {\r\n    const { onChange } = this.props;\r\n    const size = e.currentTarget.value;\r\n    this.setState({ size });\r\n    onChange('tamaño-mascota', size);\r\n  };\r\n\r\n  onCaseChanged = (e: FormEvent<HTMLInputElement>) => {\r\n    const { onChange } = this.props;\r\n    const caseOption = e.currentTarget.value;\r\n    this.setState({ caseOption });\r\n    onChange('caso-mascota', caseOption);\r\n  };\r\n\r\n  onSexChanged = (e: FormEvent<HTMLInputElement>) => {\r\n    const { onChange } = this.props;\r\n    const sex = e.currentTarget.value;\r\n    this.setState({ sex });\r\n    onChange('caso-mascota', sex);\r\n  };\r\n\r\n  openFile = () => {\r\n    this.state.inputFileRef.current!.click();\r\n  };\r\n\r\n  loadImageOntoReader = (event: ProgressEvent<FileReader>) => {\r\n    const img = new Image();\r\n    img.src = event.target!.result as string;\r\n    img.addEventListener('load', () => {\r\n      this.props.onImageUploaded(img);\r\n    });\r\n  };\r\n\r\n  onFileUploaded = (e: FormEvent<HTMLInputElement>) => {\r\n    const reader = new FileReader();\r\n    reader.onload = this.loadImageOntoReader;\r\n    const file : File = e.currentTarget.files![0];\r\n    if (!file) {\r\n      console.error('!file', file, e);\r\n    }\r\n    reader.readAsDataURL(e.currentTarget.files![0]);\r\n  };\r\n\r\n  render() {\r\n    const { onChange, formValues, addText } = this.props;\r\n    const { size, caseOption, sex, inputFileRef } = this.state;\r\n    const añosTag = <Tag>Años</Tag>\r\n    const mesesTag = <Tag>Meses</Tag>\r\n    return (\r\n      <Card elevation={Elevation.ONE} css={sidebarContainerStyle}>\r\n        <H4>Información</H4>\r\n        <div>\r\n          <FormGroup label=\"Imagen *\">\r\n            <Button\r\n              intent=\"primary\"\r\n              rightIcon=\"upload\"\r\n              text=\"Subir Imagen\"\r\n              onClick={this.openFile}\r\n            />\r\n            <input\r\n              ref={inputFileRef}\r\n              onChange={this.onFileUploaded}\r\n              type=\"file\"\r\n              css={fileUpload}\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <FormGroup label={'Nombre'}>\r\n            <InputGroup\r\n              name=\"nombre-mascota\"\r\n              placeholder=\"Nombre\"\r\n              intent=\"primary\"\r\n              value={formValues['nombre-mascota']}\r\n              onChange={(e: FormEvent<HTMLInputElement>) : void => {\r\n                onChange('nombre-mascota', e.currentTarget.value);\r\n              }}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <FormGroup label=\"Caso *\">\r\n            <Radio\r\n              name=\"caso\"\r\n              value={caseOption}\r\n              onChange={e => onChange('caso-mascota', caseOption)}\r\n              checked={Boolean(caseOption)}\r\n              required\r\n              css={fakeRadioGroupStyle}\r\n            />\r\n            <Radio\r\n              onChange={this.onCaseChanged}\r\n              checked={caseOption === '1'}\r\n              label=\"Mascota en adopción\"\r\n              value=\"1\"\r\n            />\r\n            <Radio\r\n              onChange={this.onCaseChanged}\r\n              checked={caseOption === '2'}\r\n              label=\"Mascota perdida\"\r\n              value=\"2\"\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <FormGroup label=\"Edad aproximada *\">\r\n            <div style={{display: 'flex', width: '100%'}}>\r\n            <div style={{width: '50%', margin: '2px'}} >\r\n            <InputGroup\r\n              name=\"edad-mascota\"\r\n              value={formValues['años-mascota']}\r\n              placeholder=\"Años\"\r\n              rightElement={añosTag}\r\n              onChange={(e: FormEvent<HTMLInputElement>) : void => {onChange('años-mascota', e.currentTarget.value)}}\r\n              max={20}\r\n              min={0}\r\n              required\r\n            />\r\n            </div>\r\n            <div style={{width: '50%', margin: '2px'}} >\r\n            <InputGroup\r\n              name=\"edad-mascota\"\r\n              value={formValues['meses-mascota']}\r\n              placeholder=\"Meses\"\r\n              rightElement={mesesTag}\r\n              onChange={(e: FormEvent<HTMLInputElement>) : void => {onChange('meses-mascota', e.currentTarget.value)}}\r\n              max={11}\r\n              min={0}\r\n              required\r\n            />\r\n            </div>\r\n            </div>\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <FormGroup label=\"Sexo *\">\r\n            <Radio\r\n              name=\"sexo-mascota\"\r\n              value={formValues['sexo-mascota']}\r\n              onChange={e => onChange('sexo-mascota', Boolean(sex))}\r\n              checked={Boolean(formValues['sexo-mascota'])}\r\n              required\r\n              css={fakeRadioGroupStyle}\r\n            />\r\n            <Radio\r\n              onChange={e => onChange('sexo-mascota', '1')}\r\n              checked={formValues['sexo-mascota'] === '1'}\r\n              label=\"Macho\"\r\n              value=\"1\"\r\n            />\r\n            <Radio\r\n              onChange={e => onChange('sexo-mascota', '2')}\r\n              checked={formValues['sexo-mascota'] === '2'}\r\n              label=\"Hembra\"\r\n              value=\"2\"\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <FormGroup label=\"Tamaño *\">\r\n            <Radio\r\n              name=\"tamaño-mascota\"\r\n              value={formValues[\"tamaño-mascota\"]}\r\n              onChange={e => onChange('tamaño-mascota', Boolean(size))}\r\n              checked={Boolean(formValues[\"tamaño-mascota\"])}\r\n              required\r\n              css={fakeRadioGroupStyle}\r\n            />\r\n            <Radio\r\n              onChange={e => onChange('tamaño-mascota', 's')}\r\n              checked={formValues[\"tamaño-mascota\"] === 's'}\r\n              label=\"Pequeño\"\r\n              value=\"s\"\r\n            />\r\n            <Radio\r\n              onChange={e => onChange('tamaño-mascota', 'm')}\r\n              checked={formValues[\"tamaño-mascota\"] === 'm'}\r\n              label=\"Mediano\"\r\n              value=\"m\"\r\n            />\r\n            <Radio\r\n              onChange={e => onChange('tamaño-mascota', 'l')}\r\n              checked={formValues[\"tamaño-mascota\"] === 'l'}\r\n              label=\"Grande\"\r\n              value=\"l\"\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div>\r\n          <Checkbox\r\n            name=\"esterilizado\"\r\n            label=\"¿Está esterilizado?\"\r\n            checked={formValues.esterilizado}\r\n            onChange={e => {\r\n              onChange('esterilizado', !formValues.esterilizado);\r\n            }}\r\n          />\r\n          <Checkbox\r\n            name=\"chip\"\r\n            label=\"¿Tiene chip?\"\r\n            checked={formValues.chip}\r\n            onChange={e => {\r\n              onChange('chip', !formValues.chip);\r\n            }}\r\n          />\r\n          <Checkbox\r\n            name=\"vacunas\"\r\n            label=\"¿Tiene las vacunas al día?\"\r\n            checked={formValues.vacunas}\r\n            onChange={e => {\r\n              onChange('vacunas', !formValues.vacunas);\r\n            }}\r\n          />\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import { css } from '@emotion/core';\r\n\r\nexport const sidebarContainerStyle = css`\r\n  margin: 1rem;\r\n  min-width: 300px;\r\n  width: 300px;\r\n`;\r\n\r\nexport const fakeRadioGroupStyle = css`\r\n  opacity: 0;\r\n  height: 1;\r\n  position: absolute;\r\n`;\r\n\r\nexport const fileUpload = css`\r\n  display: none;\r\n`;\r\n\r\nexport const containerStyle = css`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const ageInputStyle = css`\r\n  width:\r\n`\r\n","/** @jsx jsx */\r\nimport { Button } from '@blueprintjs/core';\r\nimport { jsx } from '@emotion/core';\r\nimport React from 'react';\r\nimport { sidebarContainerStyle } from './style';\r\n\r\nclass SubmitButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div css={sidebarContainerStyle}>\r\n        <Button type=\"submit\" intent=\"none\" rightIcon=\"floppy-disk\">\r\n          Crear Imagen\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import { css } from '@emotion/core';\r\n\r\nexport const sidebarContainerStyle = css`\r\n  margin: 1rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport React, { Component, FormEvent, RefObject } from 'react';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport { IAdoptionForm, ITextBlockElement } from '../../pages';\r\nimport ContactInformation from './ContactInformation';\r\nimport PetInformation from './PetInformation';\r\nimport SubmitButton from './SubmitButton';\r\nimport TextBlocksCreator from './TextBlocksCreator';\r\nimport { ITextBlocksConfigPanelState } from './TextBlocksCreator/panel';\r\nimport { containerStyle } from './styles'\r\nimport { Stage } from 'konva/types/Stage';\r\n\r\nexport interface ILeftSidebarProps {\r\n  canvasRef: RefObject<Stage>;\r\n  formValues: IAdoptionForm;\r\n  selectedTextBlock: string;\r\n  textBlocks: {\r\n    [id: string]: ITextBlockElement;\r\n  };\r\n  //addTextBlock: () => void;\r\n  addTextBlockWithData: (textBlock: ITextBlockElement) => void;\r\n  onInputChanged: (key: keyof IAdoptionForm, value: any) => void;\r\n  onTextBlockInteracted: (key: string) => void;\r\n  onTextChanged: (key: string, value: string, id: string) => void;\r\n  onImageUploaded: (prop1: HTMLImageElement) => void;\r\n}\r\n\r\nexport interface ILeftSidebarState {\r\n  isFormValid: boolean;\r\n}\r\n\r\nexport default class LeftSidebar extends Component<\r\n  ILeftSidebarProps,\r\n  ILeftSidebarState\r\n> {\r\n  state = {\r\n    isFormValid: false\r\n  };\r\n\r\n  getDataByKey = (form: IAdoptionForm, key: keyof IAdoptionForm) => {\r\n    return form[key]!.toString();\r\n  }\r\n\r\n  getFormData = (): { formData: FormData; formJson: object } => {\r\n    const formData = new FormData();\r\n    const { formValues } = this.props;\r\n    for (const key in formValues) {\r\n      if (formValues.hasOwnProperty(key)) {\r\n        const element: string = this.getDataByKey(formValues, key as keyof IAdoptionForm);\r\n        formData.append(key, element);\r\n      }\r\n    }\r\n    const imageBlob = this.onExportImageClicked();\r\n    formData.append('image', imageBlob);\r\n    return {\r\n      formData,\r\n      formJson: formValues\r\n    };\r\n  };\r\n\r\n  dataURItoBlob = (dataURI: String) => {\r\n    let byteString;\r\n    let mimestring;\r\n\r\n    if (dataURI.split(',')[0].indexOf('base64') !== -1) {\r\n      byteString = atob(dataURI.split(',')[1]);\r\n    } else {\r\n      byteString = decodeURI(dataURI.split(',')[1]);\r\n    }\r\n    mimestring = dataURI\r\n      .split(',')[0]\r\n      .split(':')[1]\r\n      .split(';')[0];\r\n    const content = new Array();\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      content[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([new Uint8Array(content)], { type: mimestring });\r\n  };\r\n\r\n  onExportImageClicked = () => {\r\n    const imgB64 = this.props.canvasRef.current!.toDataURL({ pixelRatio: 2 });\r\n    const blob = this.dataURItoBlob(imgB64);\r\n    return blob;\r\n  };\r\n\r\n  onSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const imgB64 = this.props.canvasRef.current!.getStage().toDataURL({ pixelRatio: 3, quality:1, mimeType: 'image/png', width: 500, height: 750 });\r\n    let link = document.createElement('a');\r\n    link.download = \"Test\";\r\n    link.href = imgB64;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    /*const { formData, formJson } = this.getFormData();\r\n    const response = await fetch('/api/image', {\r\n      body: formData,\r\n      method: 'POST'\r\n    }).then(r => r.json());\r\n\r\n    ReactGA.event({\r\n      action: 'adoption-created',\r\n      category: 'User',\r\n      value: 1,\r\n      ...formJson\r\n    });*/\r\n  };\r\n\r\n  onFormChange = (e: FormEvent<HTMLFormElement>) => {\r\n    const isFormValid = e.currentTarget.checkValidity();\r\n    this.setState({\r\n      isFormValid\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onTextChanged,\r\n      formValues,\r\n      onInputChanged,\r\n      onTextBlockInteracted,\r\n      selectedTextBlock,\r\n      textBlocks,\r\n      addTextBlockWithData,\r\n      onImageUploaded\r\n    } = this.props;\r\n    return (\r\n      <form onSubmit={this.onSubmit} onChange={this.onFormChange} css={containerStyle} method=\"post\">\r\n        <PetInformation onChange={onInputChanged} formValues={formValues} addText={addTextBlockWithData} onImageUploaded={onImageUploaded}/>\r\n        <div>\r\n          <ContactInformation onChange={onInputChanged} formValues={formValues} />\r\n          <SubmitButton />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { css } from '@emotion/core';\r\n\r\nexport const containerStyle = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n","/** @jsx jsx */\r\nimport { Alignment, Button, Navbar } from '@blueprintjs/core';\r\nimport { jsx } from '@emotion/core';\r\nimport React, { Component, createRef, ChangeEvent, FormEvent } from 'react';\r\nimport { fileUpload, navContainerStyle } from './styles';\r\n\r\nclass Nav extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Navbar css={navContainerStyle}>\r\n        <Navbar.Group align={Alignment.LEFT}>\r\n          <Navbar.Heading>Quiltro</Navbar.Heading>\r\n          <Navbar.Divider />\r\n        </Navbar.Group>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import { css } from '@emotion/core';\r\n\r\nexport const navContainerStyle = css``;\r\n\r\nexport const ulStyle = css`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const fileUpload = css`\r\n  display: none;\r\n`;\r\n\r\nexport const buttonStyle = css`\r\n  display: flex;\r\n`;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport React from 'react';\r\n\r\nimport { Image as KonvaImage, Layer } from 'react-konva';\r\n\r\nexport interface IBackgroundImageProps {\r\n  backgroundImage: HTMLImageElement | null;\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n}\r\n\r\nexport default class BackgroundImage extends React.Component<\r\n  IBackgroundImageProps,\r\n  any\r\n> {\r\n  render() {\r\n    const { backgroundImage, canvasHeight, canvasWidth } = this.props;\r\n    if (!backgroundImage) {\r\n      return null;\r\n    }\r\n    const { height, width } = backgroundImage;\r\n    const medianWidth = -((width/2) - canvasWidth) / 2;\r\n    const medianHeight = -((height/2) - canvasHeight) / 2;\r\n\r\n    return (\r\n      <Layer>\r\n        {backgroundImage && (\r\n          <KonvaImage\r\n            image={backgroundImage}\r\n            x={medianWidth}\r\n            y={medianHeight}\r\n            scaleX={0.5}\r\n            scaleY={0.5}\r\n            draggable\r\n          />\r\n        )}\r\n      </Layer>\r\n    );\r\n  }\r\n}\r\n","/** @jsx jsx */\r\n\r\nimport React, { Component, createRef, RefObject } from 'react';\r\nimport { jsx } from '@emotion/core';\r\nimport { Text, Path, Group, Label, Tag } from 'react-konva';\r\n\r\nexport interface ICharacteristicElement {\r\n  priority: string;\r\n  icon: string;\r\n  text: string;\r\n  scale: number;\r\n}\r\n\r\ninterface ICharacteristicsProps {\r\n  canvasWidth: number;\r\n  canvasHeight: number;\r\n  characteristics: {\r\n    [priority: string] : ICharacteristicElement\r\n  };\r\n}\r\n\r\nclass CharacteristicsLayer extends Component<ICharacteristicsProps, any> {\r\n\r\n  render() {\r\n    const {canvasHeight, canvasWidth, characteristics} = this.props;\r\n    const layerWidth = canvasWidth*0.7;\r\n    const layerHeigth = canvasHeight*0.1;\r\n    console.log(characteristics);\r\n    const keys = Object.keys(characteristics);\r\n    console.log(characteristics[keys[0]]);\r\n    const offsetDelta = 0.08;\r\n    const xOffset = layerWidth*offsetDelta*(6-keys.length);\r\n    return (\r\n      <Group\r\n      x={canvasWidth*0.05}\r\n      y={canvasHeight*0.75}\r\n      height={layerHeigth}\r\n      width={layerWidth}\r\n      visible={true}\r\n      draggable>\r\n        <Group\r\n        height={layerHeigth*0.3}\r\n        width={layerWidth} >\r\n          <Label>\r\n            <Tag fill='#fff' />\r\n            <Text\r\n              text='Características'\r\n              fontSize={20}\r\n              fontStyle='bold'\r\n              width={layerWidth}\r\n              align='center' />\r\n          </Label>\r\n        </Group>\r\n        {Object.keys(characteristics).sort().map((charKey, index) => (\r\n            <Group\r\n            width={layerWidth*0.16}\r\n            height={layerHeigth}\r\n            x={xOffset + index*layerWidth*0.16}\r\n            y={layerHeigth*0.3} >\r\n              <Path\r\n              data={characteristics[charKey].icon}\r\n              fill={'red'}\r\n              scaleX={characteristics[charKey].scale}\r\n              scaleY={characteristics[charKey].scale} />\r\n              <Label y={layerHeigth - 12}>\r\n                <Tag fill='#fff' />\r\n                <Text\r\n                width={layerWidth*0.16}\r\n                text={characteristics[charKey].text}\r\n                fontSize={10}\r\n                align={'center'} />\r\n              </Label>\r\n            </Group>\r\n        ))}\r\n      </Group>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default CharacteristicsLayer;\r\n","/** @jsx jsx */\r\n\r\nimport React, { Component, createRef, RefObject } from 'react';\r\nimport { jsx } from '@emotion/core';\r\nimport { Text, Path, Group, Label, Tag } from 'react-konva';\r\nimport {IAdoptionForm} from '../../../pages'\r\n\r\n\r\ninterface IContactProps {\r\n  canvasWidth: number;\r\n  canvasHeight: number;\r\n  formData: IAdoptionForm;\r\n}\r\n\r\nclass ContactLayer extends Component<IContactProps, any> {\r\n\r\n  render() {\r\n    const {canvasHeight, canvasWidth, formData} = this.props;\r\n    const layerWidth = canvasWidth*0.2;\r\n    return (\r\n      <Group\r\n      x={canvasWidth*0.75}\r\n      y={canvasHeight*0.75}\r\n      width={layerWidth}\r\n      visible={true}\r\n      draggable>\r\n        <Group\r\n        width={layerWidth} >\r\n          <Label>\r\n            <Tag fill='#fff' />\r\n            <Text\r\n              text='Contacto'\r\n              fontSize={14}\r\n              fontStyle='bold'\r\n              width={layerWidth}\r\n              align='center' />\r\n          </Label>\r\n          {formData['nombre-contacto'] !== '' &&\r\n            <Label y={20} >\r\n              <Tag fill='#fff' />\r\n              <Text\r\n              text={formData['nombre-contacto']}\r\n              fontSize={14}\r\n              />\r\n            </Label>}\r\n            {formData['telefono-contacto'] !== '+56 ' &&\r\n            <Label y={40}  >\r\n            <Tag fill='#fff' />\r\n            <Text\r\n            text={formData['telefono-contacto']}\r\n            fontSize={14}\r\n            />\r\n          </Label>}\r\n            {formData['email-contacto'] !== '' &&\r\n            <Label y={60} >\r\n            <Tag fill='#fff' />\r\n            <Text\r\n            text={formData['email-contacto']}\r\n            fontSize={14}\r\n             />\r\n          </Label>}\r\n            {formData['ciudad-contacto'] !== '' &&\r\n            <Label y={80} >\r\n            <Tag fill='#fff' />\r\n            <Text\r\n            text={formData['ciudad-contacto']}\r\n            fontSize={14}\r\n             />\r\n          </Label>}\r\n        </Group>\r\n      </Group>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default ContactLayer;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { KonvaEventObject } from 'konva/types/Node';\r\nimport React, { createRef } from 'react';\r\nimport { Text, Label, Tag, Group } from 'react-konva';\r\nimport { ITextBlocksConfigPanelState } from '../../LeftSideBar/TextBlocksCreator/panel';\r\nimport { ITextBlockElement } from '../../../pages'\r\n\r\ninterface ICanvasText extends ITextBlockElement {\r\n  maxWidth: number;\r\n  maxHeight: number;\r\n  // width: number;\r\n  // height: number;\r\n  onDoubleClick: (evt: KonvaEventObject<MouseEvent>) => void;\r\n  onClick: (evt: KonvaEventObject<MouseEvent>) => void;\r\n  onMouseDown: (evt: KonvaEventObject<MouseEvent>) => void;\r\n  id: string;\r\n}\r\n\r\nclass CanvasText extends React.Component<ICanvasText, any> {\r\n  static getDerivedStateFromProps(props: any) {\r\n    let stateFontSize = 10;\r\n    const { fontSize } = props;\r\n    if (fontSize === 'small') {\r\n      stateFontSize = 14;\r\n    }\r\n    if (fontSize === 'medium') {\r\n      stateFontSize = 21;\r\n    }\r\n    if (fontSize === 'large') {\r\n      stateFontSize = 35;\r\n    }\r\n    console.log();\r\n    return {\r\n      fontSize: stateFontSize\r\n    };\r\n  }\r\n\r\n  state = {\r\n    fontSize: 10\r\n  };\r\n\r\n  transformerRef = createRef<any>();\r\n\r\n  getNewPosition = (pos: {x: number, y: number}) => {\r\n    const { maxWidth, maxHeight } = this.props;\r\n    const ref = this.transformerRef.current!;\r\n\r\n    const topBorder = pos.y;\r\n    const bottomBorder = pos.y + ref.height();\r\n    const leftBorder = pos.x;\r\n    const rightBorder = pos.x + ref.width();\r\n\r\n    let x = pos.x;\r\n    let y = pos.y;\r\n    if (topBorder < 0) {\r\n      y = 0;\r\n    } else if (bottomBorder > maxHeight) {\r\n      y = maxHeight - ref.height();\r\n    }\r\n\r\n    if (leftBorder < 0) {\r\n      x = 0;\r\n    } else if (rightBorder > maxWidth) {\r\n      x = maxWidth - ref.width();\r\n    }\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  };\r\n\r\n  onTransform = () => {\r\n    const ref = this.transformerRef.current!;\r\n    ref.setAttrs({\r\n      scaleX: 1,\r\n      width: ref.width() * ref.scaleX()\r\n    });\r\n  };\r\n\r\n  onDrag = (pos: {x: number, y: number}) => {\r\n    return this.getNewPosition(pos);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      text,\r\n      color,\r\n      onDoubleClick,\r\n      onClick,\r\n      onMouseDown,\r\n      position,\r\n      align,\r\n      width,\r\n      style\r\n    } = this.props;\r\n    const { fontSize } = this.state;\r\n    return (\r\n      <Group draggable>\r\n      <Label\r\n        x={position.x}\r\n        y={position.y}\r\n        >\r\n        <Tag fill='#fff'/>\r\n        <Text\r\n        padding={10}\r\n        fontSize={fontSize}\r\n        ref={this.transformerRef}\r\n        name={id}\r\n        id={id}\r\n        fill={color}\r\n        text={text}\r\n        transformsEnabled=\"position\"\r\n        dragBoundFunc={this.onDrag}\r\n        onTransform={this.onTransform}\r\n        onClick={onClick}\r\n        onDblClick={onDoubleClick}\r\n        onMouseDown={onMouseDown}\r\n        align={align}\r\n        width={width}\r\n        fontStyle={style}\r\n        // _useStrictMode\r\n        />\r\n      </Label>\r\n      </Group>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CanvasText;\r\n","/** @jsx jsx */\r\nimport { Card, Elevation } from '@blueprintjs/core';\r\nimport { jsx } from '@emotion/core';\r\nimport { KonvaEventObject } from 'konva/types/Node';\r\nimport Konva from 'konva'\r\nimport React, { Component, createRef, RefObject } from 'react';\r\nimport { Layer, Stage, Text, Group } from 'react-konva';\r\nimport { Image as ImageKonva } from 'react-konva';\r\n\r\nimport { ICanvasTexts, ITextBlockElement, IAdoptionForm } from '../../pages';\r\nimport BackgroundImage from './BackgroundImage';\r\nimport EditTextArea from './TextArea';\r\nimport { canvasStyle, testStyle } from './style';\r\nimport CanvasText from './Text';\r\nimport TransformerComponent from './Transformer';\r\nimport CharacteristicsLayer, { ICharacteristicElement } from './CharacteristicsLayer';\r\nimport ContactLayer from './ContactLayer';\r\n\r\ninterface IAppProps {\r\n  onRef: RefObject<any>;\r\n  canvasRef: RefObject<any>;\r\n  onTextBlockSelected: (arg1: string) => void;\r\n  image: HTMLImageElement | null;\r\n  canvasTexts: ICanvasTexts;\r\n  onTextChanged: (arg1: string, arg2: string) => void;\r\n  currentCanvasText: ITextBlockElement;\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n  characteristics: {\r\n    [priority: string] : ICharacteristicElement\r\n  },\r\n  formData: IAdoptionForm;\r\n}\r\n\r\ninterface IAppState {\r\n  showEditTextArea: boolean;\r\n  backgroundImage: HTMLImageElement | null;\r\n  editTextAreaProps: any;\r\n  onTextAreaClosed: () => void;\r\n  targetToRestore: any[];\r\n  editTextAreaValue: string;\r\n}\r\nclass Canvas extends Component<IAppProps, IAppState> {\r\n  state = {\r\n    backgroundImage: null,\r\n    editTextAreaProps: {},\r\n    editTextAreaValue: '',\r\n    onTextAreaClosed: () => null,\r\n    showEditTextArea: false,\r\n    targetToRestore: []\r\n  };\r\n\r\n  transformerRef = createRef<any>();\r\n\r\n  resizeImageHeight = (img: HTMLImageElement, newHeight: number, newWidth: number): Promise<HTMLImageElement> => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.height = newHeight;\r\n    canvas.width = newWidth;\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) {\r\n      return Promise.resolve(img);\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      ctx.drawImage(img, 0, 0);\r\n      ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n      const dataurl = canvas.toDataURL('image/png');\r\n\r\n      const newImage = new Image();\r\n      newImage.src = dataurl;\r\n      newImage.addEventListener('load', () => {\r\n        resolve(newImage);\r\n      });\r\n      newImage.addEventListener('error', () => {\r\n        reject(img);\r\n      });\r\n    });\r\n  };\r\n\r\n  getResizedImage = (image: HTMLImageElement) => {\r\n    const { height, width } = image;\r\n    const { canvasHeight, canvasWidth } = this.props;\r\n    let imageHeight = height;\r\n    let imageWidth = width;\r\n    // Resize to go over the canvas height\r\n    imageWidth = imageWidth * (canvasHeight / imageHeight);\r\n    imageHeight = canvasHeight;\r\n\r\n    // Resize to go over the canvas width\r\n    if (canvasWidth > imageWidth) {\r\n      imageHeight = imageHeight * (canvasWidth / imageWidth);\r\n      imageWidth = canvasWidth;\r\n    }\r\n    return this.resizeImageHeight(image, imageHeight, imageWidth);\r\n  };\r\n\r\n  async componentDidUpdate(prevProps: any) {\r\n    const { image } = this.props;\r\n    if (image && image !== prevProps.image) {\r\n      const backgroundImage = await this.getResizedImage(image);\r\n      this.setState({ backgroundImage });\r\n    }\r\n  }\r\n\r\n  onTextClick = (e:Konva.KonvaEventObject<MouseEvent>): void => {\r\n    e.cancelBubble = true;\r\n    const selectedTextBlock = e.target.name();\r\n    this.props.onTextBlockSelected(selectedTextBlock);\r\n  };\r\n\r\n  handleStageMouseDown = (e: Konva.KonvaEventObject<MouseEvent>) => {\r\n    const showEditTextArea = false;\r\n    let selectedTextBlock = '';\r\n    const { currentTarget } = e;\r\n    const { targetToRestore } = this.state;\r\n    const { onTextBlockSelected } = this.props;\r\n    /*const clickedOnStage = target === currentTarget.getStage();\r\n    //const clickedOnTransformer =\r\n    //  target.getParent() && target.getParent().className === 'Transformer';\r\n    //const hasNoName = Boolean(target.name()); // If the thing we are clicking has no name\r\n    const isTextNode = typeof e.currentTarget.stat === 'function'; // TODO: maybe remove this?\r\n    if (isTextNode) {\r\n      selectedTextBlock = e.target.name;\r\n    }*/\r\n\r\n    if (targetToRestore) {\r\n      targetToRestore.forEach((el: any) => {\r\n        const canvasRef = this.props.canvasRef.current!;\r\n        el.show();\r\n        canvasRef.draw();\r\n      });\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        showEditTextArea\r\n      },\r\n      () => onTextBlockSelected(selectedTextBlock)\r\n    );\r\n  };\r\n\r\n  showElements = (currentTarget: any) => () => {\r\n    this.setState(\r\n      {\r\n        showEditTextArea: false\r\n      },\r\n      () => {\r\n        currentTarget.hide();\r\n        const transformerRef = this.transformerRef.current!;\r\n        const canvasRef = this.props.canvasRef.current!;\r\n        currentTarget.show();\r\n        transformerRef.show();\r\n        canvasRef.draw();\r\n      }\r\n    );\r\n  };\r\n\r\n  hideElements = (currentTarget: any) => {\r\n    currentTarget.hide();\r\n    const transformerRef = this.transformerRef.current!;\r\n    const canvasRef = this.props.canvasRef.current!;\r\n    currentTarget.hide();\r\n    transformerRef.hide();\r\n    canvasRef.draw();\r\n  };\r\n\r\n  onMouseDown = (evt: KonvaEventObject<MouseEvent>): void => {\r\n    const { onTextBlockSelected } = this.props;\r\n    evt.cancelBubble = true;\r\n    const currentTarget: any = evt.target;\r\n    const { id } = currentTarget.attrs;\r\n    onTextBlockSelected(id);\r\n  };\r\n\r\n  onDoubleClick = (evt: KonvaEventObject<MouseEvent>): void => {\r\n    const currentTarget: any = evt.currentTarget;\r\n    const transformerRef = this.transformerRef.current!;\r\n    const canvasRef = this.props.canvasRef.current!;\r\n    this.hideElements(currentTarget);\r\n\r\n    // We will create a textarea absolutely positioned over the canvas\r\n    // And we will render it on a portal\r\n    // first we need to find position for textarea\r\n\r\n    // At first lets find position of text node relative to the stage:\r\n    const { x, y } = currentTarget.absolutePosition();\r\n    const { left, top } = canvasRef.container().getBoundingClientRect();\r\n\r\n    // so position of textarea will be the sum of positions above:\r\n    const areaPosition = {\r\n      x: left + x,\r\n      y: top + y\r\n    };\r\n\r\n    // Create textarea styles to match text on canvas as close as possible\r\n    // (Text rendering on canvas and on the textarea can be different\r\n    // and sometimes it is hard to make it 100% the same)\r\n    const targetToRestore = [currentTarget, transformerRef];\r\n    const showEditTextArea = true;\r\n    const editTextAreaValue = currentTarget.text();\r\n    const editTextAreaProps = {\r\n      color: currentTarget.fill() + '',\r\n      fontFamily: currentTarget.fontFamily() + '',\r\n      fontSize: currentTarget.fontSize() + 'px',\r\n      height: currentTarget.height() + 'px',\r\n      left: areaPosition.x + 'px',\r\n      lineHeight: currentTarget.lineHeight() + '',\r\n      padding: currentTarget.padding() + 'px',\r\n      textAlign: currentTarget.align() + '',\r\n      top: areaPosition.y + 'px',\r\n      transformOrigin: 'left top',\r\n      width: currentTarget.width() + 5 + 'px'\r\n    };\r\n\r\n    const onTextAreaClosed = this.showElements(currentTarget);\r\n\r\n    this.setState({\r\n      editTextAreaProps,\r\n      editTextAreaValue,\r\n      onTextAreaClosed,\r\n      showEditTextArea,\r\n      targetToRestore\r\n    });\r\n  };\r\n\r\n  onMount = (ref : RefObject<any>) => {\r\n    this.transformerRef = ref;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      backgroundImage,\r\n      showEditTextArea,\r\n      editTextAreaProps,\r\n      onTextAreaClosed\r\n    } = this.state;\r\n    const { canvasTexts, onRef, onTextChanged, canvasHeight, canvasWidth, characteristics, formData } = this.props;\r\n    const { textBlocks, selectedTextBlock } = canvasTexts;\r\n    //const test = '<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"venus\" class=\"svg-inline--fa fa-venus fa-w-9\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 288 512\"><path fill=\"currentColor\" d=\"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z\"></path></svg>'\r\n    return (\r\n      <Card elevation={Elevation.ONE} css={canvasStyle}>\r\n        {process.browser && (\r\n          <Stage\r\n            ref={onRef}\r\n            width={canvasWidth}\r\n            height={canvasHeight}\r\n            onClick={this.handleStageMouseDown}\r\n          >\r\n            <BackgroundImage backgroundImage={backgroundImage} canvasHeight={canvasHeight} canvasWidth={canvasWidth} />\r\n            <Layer  >\r\n              {Object.values(textBlocks).map(textBlock => (\r\n                <CanvasText\r\n                  key={textBlock.id}\r\n                  {...textBlock}\r\n                  maxHeight={canvasHeight}\r\n                  maxWidth={canvasWidth}\r\n                  onClick={this.onTextClick}\r\n                  onDoubleClick={this.onDoubleClick}\r\n                  onMouseDown={this.onMouseDown}\r\n                />\r\n              ))}\r\n\r\n              <CharacteristicsLayer canvasHeight={canvasHeight} canvasWidth={canvasWidth} characteristics={characteristics} />\r\n\r\n              <ContactLayer canvasHeight={canvasHeight} canvasWidth={canvasWidth} formData={formData} />\r\n\r\n              {/*<TransformerComponent\r\n                resizeEnabled\r\n                rotateEnabled={true}\r\n                borderEnabled\r\n                onMount={this.onMount}\r\n                selectedShapeName={selectedTextBlock}\r\n              />*/}\r\n            </Layer>\r\n          </Stage>\r\n        )}\r\n        {/*showEditTextArea && textBlocks[selectedTextBlock].text && (\r\n          <EditTextArea\r\n            onTextAreaClosed={onTextAreaClosed}\r\n            onTextAreaChanged={onTextChanged}\r\n            selectedtextblockid={selectedTextBlock}\r\n            value={textBlocks[selectedTextBlock].text}\r\n            style={editTextAreaProps}\r\n            maxWidth={canvasWidth}\r\n            maxHeight={canvasHeight}\r\n          />\r\n        )*/}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import { css } from '@emotion/core';\r\n\r\nexport const canvasStyle = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 1rem;\r\n  width: 35rem;\r\n  justify-content: center;\r\n  & .konvajs-content {\r\n    background-color: white;\r\n    border: solid 1px lightgray;\r\n  }\r\n`;\r\n\r\nexport const testStyle = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport nanoid from 'nanoid';\r\nimport React, { Component, createRef } from 'react';\r\nimport Canvas from '../components/canvas';\r\nimport LeftSidebar from '../components/LeftSideBar';\r\nimport { ICharacteristicElement } from '../components/canvas/CharacteristicsLayer';\r\nimport Nav from '../components/Nav';\r\nimport { containerStyle, pageStyle } from './styles';\r\nimport * as icons from '../assets/icons';\r\nimport Konva from 'konva'\r\n\r\ninterface IHomeState {\r\n  canvasImage: HTMLImageElement | null;\r\n  canvasTexts: ICanvasTexts;\r\n  formValues: IAdoptionForm;\r\n  characteristics: ICharacteristics;\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n}\r\n\r\nexport interface ICanvasTexts {\r\n  selectedTextBlock: string; // TODO: Change this for a string union type\r\n  textBlocks: ITextBlocks\r\n}\r\n\r\ninterface ICharacteristics {\r\n  [priority: string] : ICharacteristicElement;\r\n}\r\n\r\ninterface ITextBlocks {\r\n    // TODO: Change keys on this objects also for a string uniion type.\r\n    // (Based on the types of TextBlocksCreator.buttonsKeys )\r\n    [s: string]: ITextBlockElement;\r\n}\r\n\r\nexport interface ITextBlockElement {\r\n  id: string;\r\n  text: string;\r\n  fontSize: 'small' | 'medium' | 'large';\r\n  color: 'black' | 'red' | 'green' | 'purple' | 'yellow' | 'white';\r\n  position: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  width?: number;\r\n  align?: 'left' | 'center' | 'right';\r\n  style?: 'normal' | 'bold' |  'italic';\r\n}\r\n\r\nexport interface IAdoptionForm {\r\n  'nombre-mascota': string;\r\n  'nombre-contacto': string;\r\n  'telefono-contacto': string;\r\n  'whatsapp-contacto': string;\r\n  'email-contacto': string;\r\n  'esterilizado': boolean;\r\n  'chip': boolean;\r\n  'vacunas': boolean;\r\n  'edad-mascota': string;\r\n  'informacion-extra-mascota'?: string;\r\n  'tamaño-mascota': string;\r\n  'caso-mascota': string;\r\n  'ciudad-contacto': string;\r\n  'sexo-mascota': string;\r\n  'años-mascota': string;\r\n  'meses-mascota': string;\r\n}\r\n\r\nclass Home extends Component<any, IHomeState> {\r\n  state = {\r\n    canvasImage: null,\r\n    canvasTexts: {\r\n      selectedTextBlock : '',\r\n      textBlocks: {} as ITextBlocks\r\n    },\r\n    formValues: {\r\n      chip: false,\r\n      'edad-mascota': '',\r\n      'email-contacto': '',\r\n      esterilizado: false,\r\n      'informacion-extra-mascota': '',\r\n      'nombre-contacto': '',\r\n      'nombre-mascota': '',\r\n      'tamaño-mascota': '',\r\n      'telefono-contacto': '+56 ',\r\n      vacunas: false,\r\n      'whatsapp-contacto': '',\r\n      'caso-mascota': '',\r\n      'ciudad-contacto': '',\r\n      'sexo-mascota': '',\r\n      'años-mascota': '',\r\n      'meses-mascota': ''\r\n    },\r\n    characteristics: {},\r\n    canvasHeight: 750,\r\n    canvasWidth: 500,\r\n  };\r\n\r\n  stageRef = createRef<any>();\r\n\r\n  componentDidMount() {\r\n    //this.addTextBlock();\r\n    console.log(window.devicePixelRatio);\r\n  }\r\n\r\n  setSelectedTextBlock = (selectedTextBlock: string) => {\r\n    const { canvasTexts } = this.state;\r\n    this.setState({\r\n      canvasTexts: {\r\n        ...canvasTexts,\r\n        selectedTextBlock\r\n      }\r\n    });\r\n  };\r\n\r\n  setCanvasImage = (image: HTMLImageElement) => {\r\n    this.setState({\r\n      canvasImage: image\r\n    });\r\n  };\r\n\r\n  onTextChanged = (key: string, value: string, id: string) => {\r\n    const { canvasTexts } = this.state;\r\n    const { textBlocks } = canvasTexts;\r\n    this.setState({\r\n      canvasTexts: {\r\n        ...canvasTexts,\r\n        textBlocks: {\r\n          ...textBlocks,\r\n          [id]: {\r\n            ...textBlocks[id],\r\n            [key]: value\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  onTextBlockChanged = (id: string, text: string) => {\r\n    const { canvasTexts } = this.state;\r\n    const { textBlocks } = canvasTexts;\r\n    this.setState(\r\n      {\r\n        canvasTexts: {\r\n          ...canvasTexts,\r\n          textBlocks: {\r\n            ...textBlocks,\r\n            [id]: {\r\n              ...textBlocks[id],\r\n              text\r\n            }\r\n          }\r\n        }\r\n      },\r\n      () => {\r\n        console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n\r\n  setAdoptionFormField = (key: keyof IAdoptionForm, value: any) => {\r\n    const { canvasTexts, canvasHeight, canvasWidth, characteristics, formValues } = this.state;\r\n    const { textBlocks } = canvasTexts;\r\n    const actualCharacteristics: ICharacteristics = characteristics;\r\n    let newTextBlock: ITextBlockElement = {\r\n      id: key,\r\n      color: 'black',\r\n      text: value,\r\n      fontSize: 'medium',\r\n      position: {x: 0, y: 0}\r\n    }\r\n    let characteristic: ICharacteristicElement = {\r\n      priority: '',\r\n      text: '',\r\n      icon: '',\r\n      scale: -1\r\n    }\r\n    let validator: '' | 'textBlock' | 'characteristic' | 'deletedCharacteristic'= '';\r\n    switch (key) {\r\n      case 'nombre-mascota' :\r\n        newTextBlock.align = 'center';\r\n        newTextBlock.width = canvasWidth;\r\n        newTextBlock.position.y = canvasHeight*0.1;\r\n        newTextBlock.style = 'bold';\r\n        newTextBlock.fontSize = 'large';\r\n        validator = 'textBlock';\r\n        break;\r\n      case 'caso-mascota' :\r\n        newTextBlock.align = 'center';\r\n        newTextBlock.width = canvasWidth;\r\n        newTextBlock.position.y = canvasHeight*0.2;\r\n        newTextBlock.text = value === '1' ? \"En adopción\" : 'Perdido';\r\n        validator = 'textBlock';\r\n        break;\r\n      case 'años-mascota' :\r\n        if (isNaN(value)) {\r\n          value = formValues['años-mascota'];\r\n        }\r\n        else {\r\n          const meses = formValues['meses-mascota'];\r\n          let edadString = ''\r\n          if (value !== '' && meses !== '') {\r\n            edadString = value+' años '+meses+' meses';\r\n          }\r\n          else if (value !== '') {\r\n            edadString = value+' años';\r\n          }\r\n          else if (meses !== '') {\r\n            edadString = meses+' meses';\r\n          }\r\n          characteristic = {\r\n            priority: '0',\r\n            icon: icons.birthday_cake,\r\n            text: edadString,\r\n            scale: 0.08\r\n          }\r\n          validator = 'characteristic';\r\n        }\r\n        break;\r\n      case 'meses-mascota' :\r\n        if (isNaN(value)) {\r\n          value = formValues['meses-mascota'];\r\n        }\r\n        else {\r\n          const años = formValues['años-mascota'];\r\n          let edadString2 = ''\r\n          if (value !== '' && años !== '') {\r\n            edadString2 = años+' años '+value+' meses';\r\n          }\r\n          else if (value !== '') {\r\n            edadString2 = value+' meses';\r\n          }\r\n          else if (años !== '') {\r\n            edadString2 = años+' años';\r\n          }\r\n          characteristic = {\r\n            priority: '0',\r\n            icon: icons.birthday_cake,\r\n            text: edadString2,\r\n            scale: 0.08\r\n          }\r\n          validator = 'characteristic';\r\n        }\r\n        break;\r\n      case 'sexo-mascota' :\r\n        characteristic = {\r\n          priority: '1',\r\n          icon: value === '1' ? icons.mars : icons.venus,\r\n          text: value === '1' ? 'Macho' : 'Hembra',\r\n          scale: 0.08\r\n        }\r\n        validator = 'characteristic';\r\n        break;\r\n      case 'tamaño-mascota' :\r\n        characteristic = {\r\n          priority: '3',\r\n          icon: icons.dog,\r\n          text: value === 's' ? 'Pequeño' : value === 'm' ? 'Mediano' : 'Grande',\r\n          scale:  value === 's' ? 0.04 : value === 'm' ? 0.06 : 0.08\r\n        }\r\n        validator = 'characteristic';\r\n        break;\r\n      case 'esterilizado' :\r\n        if(value) {\r\n          characteristic = {\r\n            priority: '4',\r\n            icon: icons.band_aid,\r\n            text: 'Esterilizado',\r\n            scale: 0.08\r\n          }\r\n          validator = 'characteristic';\r\n        }\r\n        else {\r\n          delete actualCharacteristics['4'];\r\n          validator = 'deletedCharacteristic';\r\n        }\r\n        break;\r\n      case 'chip' :\r\n        if(value) {\r\n          characteristic = {\r\n            priority: '5',\r\n            icon: icons.paw,\r\n            text: 'Con chip',\r\n            scale: 0.08\r\n          }\r\n          validator = 'characteristic';\r\n        }\r\n        else {\r\n          delete actualCharacteristics['5'];\r\n          validator = 'deletedCharacteristic';\r\n        }\r\n        break;\r\n      case 'vacunas' :\r\n        if(value) {\r\n          characteristic = {\r\n            priority: '6',\r\n            icon: icons.syringe,\r\n            text: 'Al día',\r\n            scale: 0.08\r\n          }\r\n          validator = 'characteristic';\r\n        }\r\n        else {\r\n          delete actualCharacteristics['6'];\r\n          validator = 'deletedCharacteristic';\r\n        }\r\n        break;\r\n      case 'telefono-contacto':\r\n        if (value.length < 4) {\r\n          value = '+56 ';\r\n        }\r\n        else if (isNaN(value.slice(4).trim())) {\r\n          value = formValues['telefono-contacto'];\r\n        }\r\n        break;\r\n      /*case 'nombre-contacto':\r\n        newTextBlock.fontSize = 'small';\r\n        newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7};\r\n        validator = 'textBlock';\r\n        break;\r\n      case 'telefono-contacto':\r\n        if (value.length < 4) {\r\n          value = '+56 ';\r\n        }\r\n        newTextBlock.fontSize = 'small';\r\n        newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7 + 30};\r\n        validator = 'textBlock';\r\n        break;\r\n        case 'email-contacto':\r\n          newTextBlock.fontSize = 'small';\r\n          newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7 + 60};\r\n          validator = 'textBlock';\r\n          break;\r\n        case 'ciudad-contacto':\r\n          newTextBlock.fontSize = 'small';\r\n          newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7 + 90};\r\n          validator = 'textBlock';\r\n          break;\r\n      */\r\n        default:\r\n\r\n    }\r\n    if(validator === 'textBlock') {\r\n      this.setState({\r\n        formValues: {\r\n          ...this.state.formValues,\r\n          [key]: value\r\n        },\r\n        canvasTexts: {\r\n          ...canvasTexts,\r\n          textBlocks: {\r\n            ...textBlocks,\r\n            [key]: newTextBlock\r\n          }\r\n        }\r\n      });\r\n    }\r\n    else if (validator === 'characteristic') {\r\n      this.setState({\r\n        formValues: {\r\n          ...this.state.formValues,\r\n          [key]: value\r\n        },\r\n        characteristics: {\r\n          ...characteristics,\r\n          [characteristic.priority]: characteristic\r\n        }\r\n      });\r\n    }\r\n    else if (validator = 'deletedCharacteristic') {\r\n      this.setState({\r\n        formValues: {\r\n          ...this.state.formValues,\r\n          [key]: value\r\n        },\r\n        characteristics: actualCharacteristics\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteCharacteristic = (characPriority: string) => {\r\n    const { characteristics } = this.state;\r\n    const actualCharacteristics: ICharacteristics = characteristics;\r\n    const updatePriority: ICharacteristics = {};\r\n    Object.keys(characteristics).forEach(priority => {\r\n      if (priority !== characPriority) {\r\n        updatePriority[priority] = actualCharacteristics[priority];\r\n      }\r\n    })\r\n  }\r\n\r\n  /*addTextBlock = () => {\r\n    const { canvasTexts } = this.state;\r\n    const { textBlocks } = canvasTexts;\r\n\r\n    const id = nanoid();\r\n    const newTextblock: ITextBlockElement = {\r\n      color: 'black',\r\n      fontSize: 'medium',\r\n      id,\r\n      text: ''\r\n    };\r\n\r\n    this.setState({\r\n      canvasTexts: {\r\n        ...canvasTexts,\r\n        textBlocks: {\r\n          ...textBlocks,\r\n          [id]: newTextblock\r\n        }\r\n      }\r\n    });\r\n  };*/\r\n\r\n  addTextBlockWithData = (newTextblock: ITextBlockElement) => {\r\n    const { canvasTexts } = this.state;\r\n    const { textBlocks } = canvasTexts;\r\n    const id = newTextblock.id;\r\n    this.setState({\r\n      canvasTexts: {\r\n        ...canvasTexts,\r\n        textBlocks: {\r\n          ...textBlocks,\r\n          [id]: newTextblock\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { canvasImage, canvasTexts, formValues, canvasHeight, canvasWidth, characteristics } = this.state;\r\n    const { selectedTextBlock, textBlocks } = canvasTexts;\r\n    return (\r\n      <div css={pageStyle}>\r\n        <Nav />\r\n        <section data-name=\"bodycontainer\" css={containerStyle}>\r\n          <LeftSidebar\r\n            canvasRef={this.stageRef}\r\n            formValues={formValues}\r\n            onTextBlockInteracted={this.setSelectedTextBlock}\r\n            selectedTextBlock={selectedTextBlock}\r\n            textBlocks={textBlocks}\r\n            onInputChanged={this.setAdoptionFormField}\r\n            onTextChanged={this.onTextChanged}\r\n            addTextBlockWithData={this.addTextBlockWithData}\r\n            onImageUploaded={this.setCanvasImage}\r\n          />\r\n          <Canvas\r\n            canvasRef={this.stageRef}\r\n            canvasTexts={canvasTexts}\r\n            currentCanvasText={textBlocks[selectedTextBlock]}\r\n            image={canvasImage}\r\n            onRef={this.stageRef}\r\n            onTextChanged={this.onTextBlockChanged}\r\n            onTextBlockSelected={this.setSelectedTextBlock}\r\n            canvasHeight={canvasHeight}\r\n            canvasWidth={canvasWidth}\r\n            characteristics={characteristics}\r\n            formData={formValues}\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n","import { css } from '@emotion/core';\r\n\r\nexport const containerStyle = css`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding-top: 1rem;\r\n  padding-bottom: 4rem;\r\n  width: 900px;\r\n`;\r\n\r\nexport const pageStyle = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n","module.exports = require(\"@blueprintjs/core\");","module.exports = require(\"@emotion/core\");","module.exports = require(\"react\");","module.exports = require(\"react-konva\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AAEA;AAOA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAhEA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAaA;AACA;AAEA;AAWA;AAGA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAdA;AAgBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AArBA;AAuBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA5BA;AA8BA;AACA;AACA;AAhCA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;AA0CA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAjDA;AACA;AAkDA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAlOA;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AAAA;AAMA;;;;AAAA;AAMA;;AAAA;AAIA;;;;;AAAA;AAOA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAVA;AACA;AAWA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AAIA;AACA;AACA;AAGA;AAsBA;AAGA;AAAA;AACA;AADA;AAEA;AADA;AACA;AAFA;AAMA;AACA;AACA;AARA;AAUA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAzBA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA7CA;AA+CA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAnDA;AAqDA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAYA;AACA;AA3EA;AA6EA;AACA;AACA;AADA;AAGA;AAjFA;AACA;AAkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAxGA;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAZA;AACA;AAaA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;;AAAA;AAOA;;AAAA;AAIA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAEA;AAQA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAzBA;;;;;;;;;;;;;;;;;;;;;;;ACfA;AAEA;AACA;AACA;AACA;AAgxDA;AACA;AA0DA;;;;;;;;;;;;;;;;;;;;;;;AChFA;AAEA;AACA;AACA;AACA;AASA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AA3DA;AACA;AA6DA;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AAEA;AACA;AACA;AAcA;AAAA;AAAA;AACA;AADA;AAoBA;AADA;AACA;AApBA;AACA;AADA;AA0BA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AApDA;AAsDA;AACA;AACA;AACA;AAFA;AAIA;AACA;AA5DA;AA8DA;AACA;AA/DA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AA7GA;AACA;AA8GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClIA;AACA;AACA;AAGA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAyBA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAFA;AACA;AADA;AAaA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAqCA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AApDA;AA8DA;AACA;AACA;AACA;AACA;AAlEA;AAoEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAKA;AACA;AAjGA;AAmGA;AAEA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAjHA;AAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1HA;AA4HA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAlIA;AAoIA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AArLA;AAuLA;AACA;AAxLA;AACA;AAoDA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA8HA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAwBA;AAyBA;AACA;AAvPA;AACA;AAwPA;;;;;;;;;;;;ACnSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;AAAA;AAaA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AA2DA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AA1BA;AACA;AAFA;AACA;AADA;AAsCA;AAAA;AAAA;AACA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AA9CA;AAgDA;AACA;AADA;AAGA;AACA;AApDA;AAsDA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AAFA;AAFA;AAFA;AADA;AAYA;AACA;AArEA;AAuEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AAEA;AAFA;AAFA;AAFA;AADA;AAaA;AACA;AAEA;AACA;AA3FA;AA6FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AAjKA;AACA;AAmKA;AACA;AACA;AAEA;AAFA;AAIA;AAEA;AAEA;AAFA;AAFA;AALA;AAaA;AAEA;AACA;AAEA;AAFA;AAIA;AAEA;AAFA;AALA;AAUA;AAEA;AACA;AAEA;AAFA;AAIA;AALA;AAOA;AACA;AACA;AAvTA;AAyTA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlUA;AA2VA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AADA;AASA;AAvWA;AACA;AA+BA;AACA;AACA;AACA;AACA;AAqUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AA5YA;AACA;AA6YA;;;;;;;;;;;;ACndA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;AAAA;AASA;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACXA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}