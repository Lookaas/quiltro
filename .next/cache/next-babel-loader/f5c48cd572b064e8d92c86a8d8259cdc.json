{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\quiltros\\\\components\\\\LeftSideBar\\\\TextBlocksCreator\\\\index.tsx\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { Button, Card, Elevation, FormGroup, H4 } from '@blueprintjs/core';\nimport { jsx } from '@emotion/core';\nimport React from 'react';\nimport TextBlocksConfigPanel from './panel';\nimport { sidebarContainerStyle } from './style';\n\nvar TextBlocksCreator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TextBlocksCreator, _React$Component);\n\n  function TextBlocksCreator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TextBlocksCreator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TextBlocksCreator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onTextBlockChanged\", function (textBlockId) {\n      return function (key, value) {\n        var _this$props = _this.props,\n            onTextChanged = _this$props.onTextChanged,\n            onTextBlockInteracted = _this$props.onTextBlockInteracted;\n        onTextBlockInteracted(key);\n        onTextChanged(key, value, textBlockId);\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(TextBlocksCreator, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          selectedTextBlock = _this$props2.selectedTextBlock,\n          onAddTextBlockClicked = _this$props2.onAddTextBlockClicked,\n          onTextBlockInteracted = _this$props2.onTextBlockInteracted,\n          textBlocks = _this$props2.textBlocks;\n      return jsx(Card, {\n        elevation: Elevation.ONE,\n        css: sidebarContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, jsx(H4, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Agregar Texto \", jsx(Button, {\n        icon: \"plus\",\n        onClick: onAddTextBlockClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), _Object$values(textBlocks).map(function (textBlock) {\n        return jsx(TextBlocksConfigPanel, _extends({\n          key: textBlock.id\n        }, textBlock, {\n          onMouseDown: function onMouseDown() {\n            return onTextBlockInteracted(textBlock.id);\n          },\n          onChange: _this2.onTextBlockChanged(textBlock.id),\n          isSelected: selectedTextBlock === textBlock.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return TextBlocksCreator;\n}(React.Component);\n\n_defineProperty(TextBlocksCreator, \"buttonsKeys\", ['alignment-top', 'align-center', 'alignment-bottom']);\n\nexport { TextBlocksCreator as default };","map":{"version":3,"sources":["C:/Users/Lucas/Documents/quiltros/components/LeftSideBar/TextBlocksCreator/index.tsx"],"names":["Button","Card","Elevation","FormGroup","H4","jsx","React","TextBlocksConfigPanel","sidebarContainerStyle","TextBlocksCreator","textBlockId","key","value","props","onTextChanged","onTextBlockInteracted","selectedTextBlock","onAddTextBlockClicked","textBlocks","ONE","map","textBlock","id","onTextBlockChanged","Component"],"mappings":";;;;;;;;;;;;AAAA;AACA,SACEA,MADF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,EANF,QAOO,mBAPP;AAQA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,qBAAP,MAAmE,SAAnE;AACA,SAASC,qBAAT,QAAsC,SAAtC;;IAcqBC,iB;;;;;;;;;;;;;;;;;;yEAKE,UAACC,WAAD;AAAA,aAAyB,UAACC,GAAD,EAAaC,KAAb,EAA8B;AAAA,0BACzB,MAAKC,KADoB;AAAA,YAClEC,aADkE,eAClEA,aADkE;AAAA,YACnDC,qBADmD,eACnDA,qBADmD;AAE1EA,QAAAA,qBAAqB,CAACJ,GAAD,CAArB;AACAG,QAAAA,aAAa,CAACH,GAAD,EAAMC,KAAN,EAAaF,WAAb,CAAb;AACD,OAJoB;AAAA,K;;;;;;;6BAMZ;AAAA;;AAAA,yBAMH,KAAKG,KANF;AAAA,UAELG,iBAFK,gBAELA,iBAFK;AAAA,UAGLC,qBAHK,gBAGLA,qBAHK;AAAA,UAILF,qBAJK,gBAILA,qBAJK;AAAA,UAKLG,UALK,gBAKLA,UALK;AAOP,aACE,IAAC,IAAD;AAAM,QAAA,SAAS,EAAEhB,SAAS,CAACiB,GAA3B;AAAgC,QAAA,GAAG,EAAEX,qBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,IAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,IAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACgB,IAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAES,qBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADhB,CADF,CADF,EAMG,eAAcC,UAAd,EAA0BE,GAA1B,CAA8B,UAAAC,SAAS;AAAA,eACtC,IAAC,qBAAD;AACE,UAAA,GAAG,EAAEA,SAAS,CAACC;AADjB,WAEMD,SAFN;AAGE,UAAA,WAAW,EAAE;AAAA,mBAAMN,qBAAqB,CAACM,SAAS,CAACC,EAAX,CAA3B;AAAA,WAHf;AAIE,UAAA,QAAQ,EAAE,MAAI,CAACC,kBAAL,CAAwBF,SAAS,CAACC,EAAlC,CAJZ;AAKE,UAAA,UAAU,EAAEN,iBAAiB,KAAKK,SAAS,CAACC,EAL9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADsC;AAAA,OAAvC,CANH,CADF;AAkBD;;;;EApC4ChB,KAAK,CAACkB,S;;gBAAhCf,iB,iBAIE,CAAC,eAAD,EAAkB,cAAlB,EAAkC,kBAAlC,C;;SAJFA,iB","sourcesContent":["/** @jsx jsx */\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Elevation,\r\n  FormGroup,\r\n  H4\r\n} from '@blueprintjs/core';\r\nimport { jsx } from '@emotion/core';\r\nimport React from 'react';\r\nimport { IAdoptionForm } from '../../../pages';\r\nimport TextBlocksConfigPanel, { ITextBlocksConfigPanelState } from './panel';\r\nimport { sidebarContainerStyle } from './style';\r\n\r\nexport interface ITextBlocksCreatorProps {\r\n  onTextChanged: (key: string, value: string, id: string) => void;\r\n  onChange: (key: keyof IAdoptionForm, value: any) => void;\r\n  onAddTextBlockClicked: () => void;\r\n  onTextBlockInteracted: (key: string) => void;\r\n  selectedTextBlock: string;\r\n  textBlocks: {\r\n    [id: string]: ITextBlocksConfigPanelState;\r\n  };\r\n  formValues: IAdoptionForm;\r\n}\r\n\r\nexport default class TextBlocksCreator extends React.Component<\r\n  ITextBlocksCreatorProps,\r\n  any\r\n> {\r\n  static buttonsKeys = ['alignment-top', 'align-center', 'alignment-bottom'];\r\n  onTextBlockChanged = (textBlockId: string) => (key:string, value:string) => {\r\n    const { onTextChanged, onTextBlockInteracted } = this.props;\r\n    onTextBlockInteracted(key);\r\n    onTextChanged(key, value, textBlockId);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedTextBlock,\r\n      onAddTextBlockClicked,\r\n      onTextBlockInteracted,\r\n      textBlocks\r\n    } = this.props;\r\n    return (\r\n      <Card elevation={Elevation.ONE} css={sidebarContainerStyle}>\r\n        <FormGroup>\r\n          <H4>\r\n            Agregar Texto <Button icon=\"plus\" onClick={onAddTextBlockClicked} />\r\n          </H4>\r\n        </FormGroup>\r\n        {Object.values(textBlocks).map(textBlock => (\r\n          <TextBlocksConfigPanel\r\n            key={textBlock.id}\r\n            {...textBlock}\r\n            onMouseDown={() => onTextBlockInteracted(textBlock.id)}\r\n            onChange={this.onTextBlockChanged(textBlock.id)}\r\n            isSelected={selectedTextBlock === textBlock.id}\r\n          />\r\n        ))}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}