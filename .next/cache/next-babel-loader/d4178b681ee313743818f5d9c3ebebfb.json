{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\quiltros\\\\components\\\\canvas\\\\TextArea\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { textaAreaStyle } from './style';\n\nvar EditTextArea =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditTextArea, _Component);\n\n  function EditTextArea() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditTextArea);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditTextArea)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      var _this$props = _this.props,\n          onTextAreaChanged = _this$props.onTextAreaChanged,\n          selectedtextblockid = _this$props.selectedtextblockid;\n      var currentTarget = e.currentTarget;\n      var height = _this.state.height;\n      var value = currentTarget.value,\n          scrollHeight = currentTarget.scrollHeight;\n      console.log(selectedtextblockid, value);\n      onTextAreaChanged(selectedtextblockid, value);\n\n      if (scrollHeight !== height) {\n        _this.setState({\n          height: scrollHeight\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (e) {\n      var onTextAreaClosed = _this.props.onTextAreaClosed;\n      var keyCode = e.keyCode,\n          shiftKey = e.shiftKey; // If key is 'enter' and shift key is pressed\n\n      if (keyCode === 13 && !shiftKey) {\n        // End editing\n        onTextAreaClosed();\n      } // If key is 'esc'\n\n\n      if (keyCode === 27) {\n        // End editing\n        onTextAreaClosed();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(EditTextArea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        height: this.props.style.height\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!document) {\n        return;\n      }\n\n      var domNode = document.querySelector('#portal_container');\n\n      if (!domNode) {\n        return;\n      }\n\n      var height = this.state.height;\n\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          maxWidth = _this$props2.maxWidth,\n          maxHeight = _this$props2.maxHeight,\n          onTextAreaClosed = _this$props2.onTextAreaClosed,\n          onTextAreaChanged = _this$props2.onTextAreaChanged,\n          restOfProps = _objectWithoutProperties(_this$props2, [\"style\", \"maxWidth\", \"maxHeight\", \"onTextAreaClosed\", \"onTextAreaChanged\"]);\n\n      var _ = style.height,\n          rest = _objectWithoutProperties(style, [\"height\"]);\n\n      return ReactDOM.createPortal(jsx(\"textarea\", _extends({\n        autoFocus: true,\n        css: textaAreaStyle,\n        onKeyDown: this.onKeyDown,\n        onChange: this.onChange,\n        style: _objectSpread({}, rest, {\n          height: height,\n          maxWeight: \"\".concat(maxHeight, \"px\"),\n          maxWidth: \"\".concat(maxWidth, \"px\")\n        })\n      }, restOfProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), domNode);\n    }\n  }]);\n\n  return EditTextArea;\n}(Component);\n\nexport default EditTextArea;","map":{"version":3,"sources":["C:/Users/Lucas/Documents/quiltros/components/canvas/TextArea/index.tsx"],"names":["jsx","Component","ReactDOM","textaAreaStyle","EditTextArea","height","e","props","onTextAreaChanged","selectedtextblockid","currentTarget","state","value","scrollHeight","console","log","setState","onTextAreaClosed","keyCode","shiftKey","style","document","domNode","querySelector","maxWidth","maxHeight","restOfProps","_","rest","createPortal","onKeyDown","onChange","maxWeight"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,eAApB;AACA,SACEC,SADF,QAIO,OAJP;AAKA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,cAAT,QAA+B,SAA/B;;IAYMC,Y;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,MAAM,EAAE;AADF,K;;+DAUG,UAACC,CAAD,EAA8C;AAAA,wBACJ,MAAKC,KADD;AAAA,UAC/CC,iBAD+C,eAC/CA,iBAD+C;AAAA,UAC5BC,mBAD4B,eAC5BA,mBAD4B;AAAA,UAE/CC,aAF+C,GAE7BJ,CAF6B,CAE/CI,aAF+C;AAAA,UAG/CL,MAH+C,GAGpC,MAAKM,KAH+B,CAG/CN,MAH+C;AAAA,UAI/CO,KAJ+C,GAIvBF,aAJuB,CAI/CE,KAJ+C;AAAA,UAIxCC,YAJwC,GAIvBH,aAJuB,CAIxCG,YAJwC;AAKvDC,MAAAA,OAAO,CAACC,GAAR,CAAYN,mBAAZ,EAAiCG,KAAjC;AACAJ,MAAAA,iBAAiB,CAACC,mBAAD,EAAsBG,KAAtB,CAAjB;;AACA,UAAIC,YAAY,KAAKR,MAArB,EAA6B;AAC3B,cAAKW,QAAL,CAAc;AACZX,UAAAA,MAAM,EAAEQ;AADI,SAAd;AAGD;AACF,K;;gEAEW,UAACP,CAAD,EAAkD;AAAA,UACpDW,gBADoD,GAC/B,MAAKV,KAD0B,CACpDU,gBADoD;AAAA,UAEpDC,OAFoD,GAE9BZ,CAF8B,CAEpDY,OAFoD;AAAA,UAE3CC,QAF2C,GAE9Bb,CAF8B,CAE3Ca,QAF2C,EAI5D;;AACA,UAAID,OAAO,KAAK,EAAZ,IAAkB,CAACC,QAAvB,EAAiC;AAC/B;AACAF,QAAAA,gBAAgB;AACjB,OAR2D,CAU5D;;;AACA,UAAIC,OAAO,KAAK,EAAhB,EAAoB;AAClB;AACAD,QAAAA,gBAAgB;AACjB;AACF,K;;;;;;;wCAnCmB;AAClB,WAAKD,QAAL,CAAc;AACZX,QAAAA,MAAM,EAAE,KAAKE,KAAL,CAAWa,KAAX,CAAiBf;AADb,OAAd;AAGD;;;6BAiCQ;AACP,UAAI,CAACgB,QAAL,EAAe;AACb;AACD;;AACD,UAAMC,OAAO,GAAGD,QAAQ,CAACE,aAAT,CAAuB,mBAAvB,CAAhB;;AACA,UAAI,CAACD,OAAL,EAAc;AACZ;AACD;;AAPM,UAQCjB,MARD,GAQY,KAAKM,KARjB,CAQCN,MARD;;AAAA,yBAgBH,KAAKE,KAhBF;AAAA,UAULa,KAVK,gBAULA,KAVK;AAAA,UAWLI,QAXK,gBAWLA,QAXK;AAAA,UAYLC,SAZK,gBAYLA,SAZK;AAAA,UAaLR,gBAbK,gBAaLA,gBAbK;AAAA,UAcLT,iBAdK,gBAcLA,iBAdK;AAAA,UAeFkB,WAfE;;AAAA,UAiBSC,CAjBT,GAiBwBP,KAjBxB,CAiBCf,MAjBD;AAAA,UAiBeuB,IAjBf,4BAiBwBR,KAjBxB;;AAkBP,aAAOlB,QAAQ,CAAC2B,YAAT,CACL;AACE,QAAA,SAAS,MADX;AAEE,QAAA,GAAG,EAAE1B,cAFP;AAGE,QAAA,SAAS,EAAE,KAAK2B,SAHlB;AAIE,QAAA,QAAQ,EAAE,KAAKC,QAJjB;AAKE,QAAA,KAAK,oBACAH,IADA;AAEHvB,UAAAA,MAAM,EAANA,MAFG;AAGH2B,UAAAA,SAAS,YAAKP,SAAL,OAHN;AAIHD,UAAAA,QAAQ,YAAKA,QAAL;AAJL;AALP,SAWME,WAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADK,EAcLJ,OAdK,CAAP;AAgBD;;;;EA5EwBrB,S;;AA+E3B,eAAeG,YAAf","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport React, {\r\n  Component,\r\n  FormEvent,\r\n  KeyboardEvent\r\n} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { textaAreaStyle } from './style';\r\n\r\nexport interface IEditTextArea {\r\n  maxWidth: number;\r\n  maxHeight: number;\r\n  selectedtextblockid: string;\r\n  onTextAreaChanged: (attr1: string, attr2: string) => void;\r\n  onTextAreaClosed: () => void;\r\n  value: string;\r\n  style: any;\r\n}\r\n\r\nclass EditTextArea extends Component<IEditTextArea> {\r\n  state = {\r\n    height: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      height: this.props.style.height\r\n    });\r\n  }\r\n\r\n  onChange = (e: FormEvent<HTMLTextAreaElement>) : void => {\r\n    const { onTextAreaChanged, selectedtextblockid } = this.props;\r\n    const { currentTarget } = e;\r\n    const { height } = this.state;\r\n    const { value, scrollHeight } = currentTarget;\r\n    console.log(selectedtextblockid, value);\r\n    onTextAreaChanged(selectedtextblockid, value);\r\n    if (scrollHeight !== height) {\r\n      this.setState({\r\n        height: scrollHeight\r\n      });\r\n    }\r\n  };\r\n\r\n  onKeyDown = (e: KeyboardEvent<HTMLTextAreaElement>) : void => {\r\n    const { onTextAreaClosed } = this.props;\r\n    const { keyCode, shiftKey } = e;\r\n\r\n    // If key is 'enter' and shift key is pressed\r\n    if (keyCode === 13 && !shiftKey) {\r\n      // End editing\r\n      onTextAreaClosed();\r\n    }\r\n\r\n    // If key is 'esc'\r\n    if (keyCode === 27) {\r\n      // End editing\r\n      onTextAreaClosed();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (!document) {\r\n      return;\r\n    }\r\n    const domNode = document.querySelector('#portal_container');\r\n    if (!domNode) {\r\n      return;\r\n    }\r\n    const { height } = this.state;\r\n    const {\r\n      style,\r\n      maxWidth,\r\n      maxHeight,\r\n      onTextAreaClosed,\r\n      onTextAreaChanged,\r\n      ...restOfProps\r\n    } = this.props;\r\n    const { height: _, ...rest } = style;\r\n    return ReactDOM.createPortal(\r\n      <textarea\r\n        autoFocus\r\n        css={textaAreaStyle}\r\n        onKeyDown={this.onKeyDown}\r\n        onChange={this.onChange}\r\n        style={{\r\n          ...rest,\r\n          height,\r\n          maxWeight: `${maxHeight}px`,\r\n          maxWidth: `${maxWidth}px`\r\n        }}\r\n        {...restOfProps}\r\n      />,\r\n      domNode\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTextArea;\r\n"]},"metadata":{},"sourceType":"module"}