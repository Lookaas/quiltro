{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\quiltros\\\\components\\\\Nav\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** @jsx jsx */\nimport { Alignment, Button, Navbar } from '@blueprintjs/core';\nimport { jsx } from '@emotion/core';\nimport { Component, createRef } from 'react';\nimport { fileUpload, navContainerStyle } from './styles';\n\nclass Nav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"inputFileRef\", createRef());\n\n    _defineProperty(this, \"openFile\", () => {\n      this.inputFileRef.current.click();\n    });\n\n    _defineProperty(this, \"loadImageOntoReader\", event => {\n      const img = new Image();\n      img.src = event.target.result;\n      img.addEventListener('load', () => {\n        this.props.onImageUploaded(img);\n      });\n    });\n\n    _defineProperty(this, \"onFileUploaded\", e => {\n      const reader = new FileReader();\n      reader.onload = this.loadImageOntoReader;\n      const file = e.currentTarget.files[0];\n\n      if (!file) {\n        console.error('!file', file, e);\n      }\n\n      reader.readAsDataURL(e.currentTarget.files[0]);\n    });\n  }\n\n  render() {\n    return jsx(Navbar, {\n      css: navContainerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, jsx(Navbar.Group, {\n      align: Alignment.LEFT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, jsx(Navbar.Heading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Quiltro\"), jsx(Navbar.Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), jsx(Navbar.Group, {\n      align: Alignment.RIGHT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, jsx(Navbar.Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), jsx(Button, {\n      intent: \"primary\",\n      rightIcon: \"upload\",\n      text: \"Subir Imagen\",\n      onClick: this.openFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), jsx(\"input\", {\n      ref: this.inputFileRef,\n      onChange: this.onFileUploaded,\n      type: \"file\",\n      css: fileUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Nav;","map":{"version":3,"sources":["C:/Users/Lucas/Documents/quiltros/components/Nav/index.tsx"],"names":["Alignment","Button","Navbar","jsx","Component","createRef","fileUpload","navContainerStyle","Nav","inputFileRef","current","click","event","img","Image","src","target","result","addEventListener","props","onImageUploaded","e","reader","FileReader","onload","loadImageOntoReader","file","currentTarget","files","console","error","readAsDataURL","render","LEFT","RIGHT","openFile","onFileUploaded"],"mappings":";;;;;;AAAA;AACA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,QAA0C,mBAA1C;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAAgBC,SAAhB,EAA2BC,SAA3B,QAAoE,OAApE;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,UAA9C;;AAKA,MAAMC,GAAN,SAAkBJ,SAAlB,CAAuC;AAAA;AAAA;;AAAA,0CACdC,SAAS,EADK;;AAAA,sCAG1B,MAAM;AACf,WAAKI,YAAL,CAAkBC,OAAlB,CAA2BC,KAA3B;AACD,KALoC;;AAAA,iDAOdC,KAAD,IAAsC;AAC1D,YAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,MAAAA,GAAG,CAACE,GAAJ,GAAUH,KAAK,CAACI,MAAN,CAAcC,MAAxB;AACAJ,MAAAA,GAAG,CAACK,gBAAJ,CAAqB,MAArB,EAA6B,MAAM;AACjC,aAAKC,KAAL,CAAWC,eAAX,CAA2BP,GAA3B;AACD,OAFD;AAGD,KAboC;;AAAA,4CAenBQ,CAAD,IAAoC;AACnD,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,KAAKC,mBAArB;AACA,YAAMC,IAAW,GAAGL,CAAC,CAACM,aAAF,CAAgBC,KAAhB,CAAuB,CAAvB,CAApB;;AACA,UAAI,CAACF,IAAL,EAAW;AACTG,QAAAA,OAAO,CAACC,KAAR,CAAc,OAAd,EAAuBJ,IAAvB,EAA6BL,CAA7B;AACD;;AACDC,MAAAA,MAAM,CAACS,aAAP,CAAqBV,CAAC,CAACM,aAAF,CAAgBC,KAAhB,CAAuB,CAAvB,CAArB;AACD,KAvBoC;AAAA;;AAyBrCI,EAAAA,MAAM,GAAG;AACP,WACE,IAAC,MAAD;AAAQ,MAAA,GAAG,EAAEzB,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,IAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,KAAK,EAAEP,SAAS,CAACiC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,IAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,IAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE,IAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,KAAK,EAAEjC,SAAS,CAACkC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,IAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,IAAC,MAAD;AACE,MAAA,MAAM,EAAC,SADT;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,IAAI,EAAC,cAHP;AAIE,MAAA,OAAO,EAAE,KAAKC,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQE;AACE,MAAA,GAAG,EAAE,KAAK1B,YADZ;AAEE,MAAA,QAAQ,EAAE,KAAK2B,cAFjB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,GAAG,EAAE9B,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CALF,CADF;AAuBD;;AAjDoC;;AAoDvC,eAAeE,GAAf","sourcesContent":["/** @jsx jsx */\r\nimport { Alignment, Button, Navbar } from '@blueprintjs/core';\r\nimport { jsx } from '@emotion/core';\r\nimport React, { Component, createRef, ChangeEvent, FormEvent } from 'react';\r\nimport { fileUpload, navContainerStyle } from './styles';\r\n\r\ninterface INavProps {\r\n  onImageUploaded: (prop1: HTMLImageElement) => void;\r\n}\r\nclass Nav extends Component<INavProps> {\r\n  private inputFileRef = createRef<HTMLInputElement>();\r\n\r\n  openFile = () => {\r\n    this.inputFileRef.current!.click();\r\n  };\r\n\r\n  loadImageOntoReader = (event: ProgressEvent<FileReader>) => {\r\n    const img = new Image();\r\n    img.src = event.target!.result as string;\r\n    img.addEventListener('load', () => {\r\n      this.props.onImageUploaded(img);\r\n    });\r\n  };\r\n\r\n  onFileUploaded = (e: FormEvent<HTMLInputElement>) => {\r\n    const reader = new FileReader();\r\n    reader.onload = this.loadImageOntoReader;\r\n    const file : File = e.currentTarget.files![0];\r\n    if (!file) {\r\n      console.error('!file', file, e);\r\n    }\r\n    reader.readAsDataURL(e.currentTarget.files![0]);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar css={navContainerStyle}>\r\n        <Navbar.Group align={Alignment.LEFT}>\r\n          <Navbar.Heading>Quiltro</Navbar.Heading>\r\n          <Navbar.Divider />\r\n        </Navbar.Group>\r\n        <Navbar.Group align={Alignment.RIGHT}>\r\n          <Navbar.Divider />\r\n          <Button\r\n            intent=\"primary\"\r\n            rightIcon=\"upload\"\r\n            text=\"Subir Imagen\"\r\n            onClick={this.openFile}\r\n          />\r\n          <input\r\n            ref={this.inputFileRef}\r\n            onChange={this.onFileUploaded}\r\n            type=\"file\"\r\n            css={fileUpload}\r\n          />\r\n        </Navbar.Group>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n"]},"metadata":{},"sourceType":"module"}