{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\quiltros\\\\components\\\\LeftSideBar\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport ContactInformation from './ContactInformation';\nimport PetInformation from './PetInformation';\nimport SubmitButton from './SubmitButton';\nimport TextBlocksCreator from './TextBlocksCreator';\n\nvar LeftSidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LeftSidebar, _Component);\n\n  function LeftSidebar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LeftSidebar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LeftSidebar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isFormValid: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDataByKey\", function (form, key) {\n      return form[key].toString();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getFormData\", function () {\n      var formData = new FormData();\n      var formValues = _this.props.formValues;\n\n      for (var _key2 in formValues) {\n        if (formValues.hasOwnProperty(_key2)) {\n          var element = _this.getDataByKey(formValues, _key2);\n\n          formData.append(_key2, element);\n        }\n      }\n\n      var imageBlob = _this.onExportImageClicked();\n\n      formData.append('image', imageBlob);\n      return {\n        formData: formData,\n        formJson: formValues\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dataURItoBlob\", function (dataURI) {\n      var byteString;\n      var mimestring;\n\n      if (dataURI.split(',')[0].indexOf('base64') !== -1) {\n        byteString = atob(dataURI.split(',')[1]);\n      } else {\n        byteString = decodeURI(dataURI.split(',')[1]);\n      }\n\n      mimestring = dataURI.split(',')[0].split(':')[1].split(';')[0];\n      var content = new Array();\n\n      for (var i = 0; i < byteString.length; i++) {\n        content[i] = byteString.charCodeAt(i);\n      }\n\n      return new Blob([new Uint8Array(content)], {\n        type: mimestring\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onExportImageClicked\", function () {\n      var imgB64 = _this.props.canvasRef.current.toDataURL({\n        pixelRatio: 2\n      });\n\n      var blob = _this.dataURItoBlob(imgB64);\n\n      return blob;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(e) {\n      var _this$getFormData, formData, formJson, response;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _this$getFormData = _this.getFormData(), formData = _this$getFormData.formData, formJson = _this$getFormData.formJson;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch('/api/image', {\n                body: formData,\n                method: 'POST'\n              }).then(function (r) {\n                return r.json();\n              }));\n\n            case 4:\n              response = _context.sent;\n              ReactGA.event(_objectSpread({\n                action: 'adoption-created',\n                category: 'User',\n                value: 1\n              }, formJson));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFormChange\", function (e) {\n      var isFormValid = e.currentTarget.checkValidity();\n\n      _this.setState({\n        isFormValid: isFormValid\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(LeftSidebar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onTextChanged = _this$props.onTextChanged,\n          formValues = _this$props.formValues,\n          onInputChanged = _this$props.onInputChanged,\n          onTextBlockInteracted = _this$props.onTextBlockInteracted,\n          selectedTextBlock = _this$props.selectedTextBlock,\n          addTextBlock = _this$props.addTextBlock,\n          textBlocks = _this$props.textBlocks;\n      return jsx(\"form\", {\n        onSubmit: this.onSubmit,\n        onChange: this.onFormChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, jsx(PetInformation, {\n        onChange: onInputChanged,\n        formValues: formValues,\n        addText: onTextChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), jsx(ContactInformation, {\n        onChange: onInputChanged,\n        formValues: formValues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), jsx(TextBlocksCreator, {\n        onAddTextBlockClicked: addTextBlock,\n        onTextBlockInteracted: onTextBlockInteracted,\n        onTextChanged: onTextChanged,\n        onChange: onInputChanged,\n        selectedTextBlock: selectedTextBlock,\n        textBlocks: textBlocks,\n        formValues: formValues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), jsx(SubmitButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LeftSidebar;\n}(Component);\n\nexport { LeftSidebar as default };","map":{"version":3,"sources":["C:/Users/Lucas/Documents/quiltros/components/LeftSideBar/index.tsx"],"names":["jsx","Component","ReactGA","ContactInformation","PetInformation","SubmitButton","TextBlocksCreator","LeftSidebar","isFormValid","form","key","toString","formData","FormData","formValues","props","hasOwnProperty","element","getDataByKey","append","imageBlob","onExportImageClicked","formJson","dataURI","byteString","mimestring","split","indexOf","atob","decodeURI","content","Array","i","length","charCodeAt","Blob","Uint8Array","type","imgB64","canvasRef","current","toDataURL","pixelRatio","blob","dataURItoBlob","e","preventDefault","getFormData","fetch","body","method","then","r","json","response","event","action","category","value","currentTarget","checkValidity","setState","onTextChanged","onInputChanged","onTextBlockInteracted","selectedTextBlock","addTextBlock","textBlocks","onSubmit","onFormChange"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,eAApB;AACA,SAAgBC,SAAhB,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,UAApB;AAGA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;IAqBqBC,W;;;;;;;;;;;;;;;;;;4DAIX;AACNC,MAAAA,WAAW,EAAE;AADP,K;;mEAIO,UAACC,IAAD,EAAsBC,GAAtB,EAAmD;AAChE,aAAOD,IAAI,CAACC,GAAD,CAAJ,CAAWC,QAAX,EAAP;AACD,K;;kEAEa,YAAgD;AAC5D,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAD4D,UAEpDC,UAFoD,GAErC,MAAKC,KAFgC,CAEpDD,UAFoD;;AAG5D,WAAK,IAAMJ,KAAX,IAAkBI,UAAlB,EAA8B;AAC5B,YAAIA,UAAU,CAACE,cAAX,CAA0BN,KAA1B,CAAJ,EAAoC;AAClC,cAAMO,OAAe,GAAG,MAAKC,YAAL,CAAkBJ,UAAlB,EAA8BJ,KAA9B,CAAxB;;AACAE,UAAAA,QAAQ,CAACO,MAAT,CAAgBT,KAAhB,EAAqBO,OAArB;AACD;AACF;;AACD,UAAMG,SAAS,GAAG,MAAKC,oBAAL,EAAlB;;AACAT,MAAAA,QAAQ,CAACO,MAAT,CAAgB,OAAhB,EAAyBC,SAAzB;AACA,aAAO;AACLR,QAAAA,QAAQ,EAARA,QADK;AAELU,QAAAA,QAAQ,EAAER;AAFL,OAAP;AAID,K;;oEAEe,UAACS,OAAD,EAAqB;AACnC,UAAIC,UAAJ;AACA,UAAIC,UAAJ;;AAEA,UAAIF,OAAO,CAACG,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBC,OAAtB,CAA8B,QAA9B,MAA4C,CAAC,CAAjD,EAAoD;AAClDH,QAAAA,UAAU,GAAGI,IAAI,CAACL,OAAO,CAACG,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAD,CAAjB;AACD,OAFD,MAEO;AACLF,QAAAA,UAAU,GAAGK,SAAS,CAACN,OAAO,CAACG,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAD,CAAtB;AACD;;AACDD,MAAAA,UAAU,GAAGF,OAAO,CACjBG,KADU,CACJ,GADI,EACC,CADD,EAEVA,KAFU,CAEJ,GAFI,EAEC,CAFD,EAGVA,KAHU,CAGJ,GAHI,EAGC,CAHD,CAAb;AAIA,UAAMI,OAAO,GAAG,IAAIC,KAAJ,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAAU,CAACS,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1CF,QAAAA,OAAO,CAACE,CAAD,CAAP,GAAaR,UAAU,CAACU,UAAX,CAAsBF,CAAtB,CAAb;AACD;;AACD,aAAO,IAAIG,IAAJ,CAAS,CAAC,IAAIC,UAAJ,CAAeN,OAAf,CAAD,CAAT,EAAoC;AAAEO,QAAAA,IAAI,EAAEZ;AAAR,OAApC,CAAP;AACD,K;;2EAEsB,YAAM;AAC3B,UAAMa,MAAM,GAAG,MAAKvB,KAAL,CAAWwB,SAAX,CAAqBC,OAArB,CAA8BC,SAA9B,CAAwC;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAxC,CAAf;;AACA,UAAMC,IAAI,GAAG,MAAKC,aAAL,CAAmBN,MAAnB,CAAb;;AACA,aAAOK,IAAP;AACD,K;;+DAEU,iBAAOE,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTA,cAAAA,CAAC,CAACC,cAAF;AADS,kCAGsB,MAAKC,WAAL,EAHtB,EAGDnC,QAHC,qBAGDA,QAHC,EAGSU,QAHT,qBAGSA,QAHT;AAAA;AAAA,+CAIc0B,KAAK,CAAC,YAAD,EAAe;AACzCC,gBAAAA,IAAI,EAAErC,QADmC;AAEzCsC,gBAAAA,MAAM,EAAE;AAFiC,eAAf,CAAL,CAGpBC,IAHoB,CAGf,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,eAHc,CAJd;;AAAA;AAIHC,cAAAA,QAJG;AASTpD,cAAAA,OAAO,CAACqD,KAAR;AACEC,gBAAAA,MAAM,EAAE,kBADV;AAEEC,gBAAAA,QAAQ,EAAE,MAFZ;AAGEC,gBAAAA,KAAK,EAAE;AAHT,iBAIKpC,QAJL;;AATS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;mEAiBI,UAACuB,CAAD,EAAmC;AAChD,UAAMrC,WAAW,GAAGqC,CAAC,CAACc,aAAF,CAAgBC,aAAhB,EAApB;;AACA,YAAKC,QAAL,CAAc;AACZrD,QAAAA,WAAW,EAAXA;AADY,OAAd;AAGD,K;;;;;;;6BAEQ;AAAA,wBASH,KAAKO,KATF;AAAA,UAEL+C,aAFK,eAELA,aAFK;AAAA,UAGLhD,UAHK,eAGLA,UAHK;AAAA,UAILiD,cAJK,eAILA,cAJK;AAAA,UAKLC,qBALK,eAKLA,qBALK;AAAA,UAMLC,iBANK,eAMLA,iBANK;AAAA,UAOLC,YAPK,eAOLA,YAPK;AAAA,UAQLC,UARK,eAQLA,UARK;AAUP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,QAAA,QAAQ,EAAE,KAAKC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,IAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEN,cAA1B;AAA0C,QAAA,UAAU,EAAEjD,UAAtD;AAAkE,QAAA,OAAO,EAAEgD,aAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,IAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAEC,cAA9B;AAA8C,QAAA,UAAU,EAAEjD,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,IAAC,iBAAD;AACE,QAAA,qBAAqB,EAAEoD,YADzB;AAEE,QAAA,qBAAqB,EAAEF,qBAFzB;AAGE,QAAA,aAAa,EAAEF,aAHjB;AAIE,QAAA,QAAQ,EAAEC,cAJZ;AAKE,QAAA,iBAAiB,EAAEE,iBALrB;AAME,QAAA,UAAU,EAAEE,UANd;AAOE,QAAA,UAAU,EAAErD,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAYE,IAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADF;AAgBD;;;;EAzGsCb,S;;SAApBM,W","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport React, { Component, FormEvent, RefObject } from 'react';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport { IAdoptionForm } from '../../pages';\r\nimport ContactInformation from './ContactInformation';\r\nimport PetInformation from './PetInformation';\r\nimport SubmitButton from './SubmitButton';\r\nimport TextBlocksCreator from './TextBlocksCreator';\r\nimport { ITextBlocksConfigPanelState } from './TextBlocksCreator/panel';\r\n\r\nexport interface ILeftSidebarProps {\r\n  canvasRef: RefObject<any>;\r\n  formValues: IAdoptionForm;\r\n  selectedTextBlock: string;\r\n  textBlocks: {\r\n    [id: string]: ITextBlocksConfigPanelState;\r\n  };\r\n  addTextBlock: () => void;\r\n  addTextBlockWithData: (id: string, value: string) => void;\r\n  onInputChanged: (key: keyof IAdoptionForm, value: any) => void;\r\n  onTextBlockInteracted: (key: string) => void;\r\n  onTextChanged: (key: string, value: string, id: string) => void;\r\n}\r\n\r\nexport interface ILeftSidebarState {\r\n  isFormValid: boolean;\r\n}\r\n\r\nexport default class LeftSidebar extends Component<\r\n  ILeftSidebarProps,\r\n  ILeftSidebarState\r\n> {\r\n  state = {\r\n    isFormValid: false\r\n  };\r\n\r\n  getDataByKey = (form: IAdoptionForm, key: keyof IAdoptionForm) => {\r\n    return form[key]!.toString();\r\n  }\r\n\r\n  getFormData = (): { formData: FormData; formJson: object } => {\r\n    const formData = new FormData();\r\n    const { formValues } = this.props;\r\n    for (const key in formValues) {\r\n      if (formValues.hasOwnProperty(key)) {\r\n        const element: string = this.getDataByKey(formValues, key as keyof IAdoptionForm);\r\n        formData.append(key, element);\r\n      }\r\n    }\r\n    const imageBlob = this.onExportImageClicked();\r\n    formData.append('image', imageBlob);\r\n    return {\r\n      formData,\r\n      formJson: formValues\r\n    };\r\n  };\r\n\r\n  dataURItoBlob = (dataURI: String) => {\r\n    let byteString;\r\n    let mimestring;\r\n\r\n    if (dataURI.split(',')[0].indexOf('base64') !== -1) {\r\n      byteString = atob(dataURI.split(',')[1]);\r\n    } else {\r\n      byteString = decodeURI(dataURI.split(',')[1]);\r\n    }\r\n    mimestring = dataURI\r\n      .split(',')[0]\r\n      .split(':')[1]\r\n      .split(';')[0];\r\n    const content = new Array();\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      content[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([new Uint8Array(content)], { type: mimestring });\r\n  };\r\n\r\n  onExportImageClicked = () => {\r\n    const imgB64 = this.props.canvasRef.current!.toDataURL({ pixelRatio: 2 });\r\n    const blob = this.dataURItoBlob(imgB64);\r\n    return blob;\r\n  };\r\n\r\n  onSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const { formData, formJson } = this.getFormData();\r\n    const response = await fetch('/api/image', {\r\n      body: formData,\r\n      method: 'POST'\r\n    }).then(r => r.json());\r\n\r\n    ReactGA.event({\r\n      action: 'adoption-created',\r\n      category: 'User',\r\n      value: 1,\r\n      ...formJson\r\n    });\r\n  };\r\n\r\n  onFormChange = (e: FormEvent<HTMLFormElement>) => {\r\n    const isFormValid = e.currentTarget.checkValidity();\r\n    this.setState({\r\n      isFormValid\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onTextChanged,\r\n      formValues,\r\n      onInputChanged,\r\n      onTextBlockInteracted,\r\n      selectedTextBlock,\r\n      addTextBlock,\r\n      textBlocks\r\n    } = this.props;\r\n    return (\r\n      <form onSubmit={this.onSubmit} onChange={this.onFormChange}>\r\n        <PetInformation onChange={onInputChanged} formValues={formValues} addText={onTextChanged} />\r\n        <ContactInformation onChange={onInputChanged} formValues={formValues} />\r\n        <TextBlocksCreator\r\n          onAddTextBlockClicked={addTextBlock}\r\n          onTextBlockInteracted={onTextBlockInteracted}\r\n          onTextChanged={onTextChanged}\r\n          onChange={onInputChanged}\r\n          selectedTextBlock={selectedTextBlock}\r\n          textBlocks={textBlocks}\r\n          formValues={formValues}\r\n        />\r\n        <SubmitButton />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}