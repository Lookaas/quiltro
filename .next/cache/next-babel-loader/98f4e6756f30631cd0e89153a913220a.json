{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\quiltros\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Component, createRef } from 'react';\nimport Canvas from '../components/canvas';\nimport LeftSidebar from '../components/LeftSideBar';\nimport Nav from '../components/Nav';\nimport { containerStyle, pageStyle } from './styles';\nimport * as icons from '../assets/icons';\nimport Konva from 'konva';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      canvasImage: null,\n      canvasTexts: {\n        selectedTextBlock: '',\n        textBlocks: {}\n      },\n      formValues: {\n        chip: false,\n        'edad-mascota': '',\n        'email-contacto': '',\n        esterilizado: false,\n        'informacion-extra-mascota': '',\n        'nombre-contacto': '',\n        'nombre-mascota': '',\n        'tamaño-mascota': '',\n        'telefono-contacto': '',\n        vacunas: false,\n        'whatsapp-contacto': '',\n        'caso-mascota': '',\n        'ciudad-contacto': '',\n        'sexo-mascota': ''\n      },\n      characteristics: {},\n      canvasHeight: 750,\n      canvasWidth: 500\n    });\n\n    _defineProperty(this, \"stageRef\", createRef());\n\n    _defineProperty(this, \"setSelectedTextBlock\", selectedTextBlock => {\n      const {\n        canvasTexts\n      } = this.state;\n      this.setState({\n        canvasTexts: _objectSpread({}, canvasTexts, {\n          selectedTextBlock\n        })\n      });\n    });\n\n    _defineProperty(this, \"setCanvasImage\", image => {\n      this.setState({\n        canvasImage: image\n      });\n    });\n\n    _defineProperty(this, \"onTextChanged\", (key, value, id) => {\n      const {\n        canvasTexts\n      } = this.state;\n      const {\n        textBlocks\n      } = canvasTexts;\n      this.setState({\n        canvasTexts: _objectSpread({}, canvasTexts, {\n          textBlocks: _objectSpread({}, textBlocks, {\n            [id]: _objectSpread({}, textBlocks[id], {\n              [key]: value\n            })\n          })\n        })\n      });\n    });\n\n    _defineProperty(this, \"onTextBlockChanged\", (id, text) => {\n      const {\n        canvasTexts\n      } = this.state;\n      const {\n        textBlocks\n      } = canvasTexts;\n      this.setState({\n        canvasTexts: _objectSpread({}, canvasTexts, {\n          textBlocks: _objectSpread({}, textBlocks, {\n            [id]: _objectSpread({}, textBlocks[id], {\n              text\n            })\n          })\n        })\n      }, () => {\n        console.log(this.state);\n      });\n    });\n\n    _defineProperty(this, \"setAdoptionFormField\", (key, value) => {\n      const {\n        canvasTexts,\n        canvasHeight,\n        canvasWidth,\n        characteristics\n      } = this.state;\n      const {\n        textBlocks\n      } = canvasTexts;\n      const actualCharacteristics = characteristics;\n      let newTextBlock = {\n        id: key,\n        color: 'black',\n        text: value,\n        fontSize: 'medium',\n        position: {\n          x: 0,\n          y: 0\n        }\n      };\n      let characteristic = {\n        priority: '',\n        text: '',\n        icon: ''\n      };\n      let validator = '';\n\n      switch (key) {\n        case 'nombre-mascota':\n          newTextBlock.align = 'center';\n          newTextBlock.width = canvasWidth;\n          newTextBlock.position.y = canvasHeight * 0.1;\n          newTextBlock.style = 'bold';\n          newTextBlock.fontSize = 'large';\n          validator = 'textBlock';\n          break;\n\n        case 'caso-mascota':\n          newTextBlock.align = 'center';\n          newTextBlock.width = canvasWidth;\n          newTextBlock.position.y = canvasHeight * 0.2;\n          newTextBlock.text = value === '1' ? \"En adopción\" : 'Perdido';\n          validator = 'textBlock';\n          break;\n\n        case 'edad-mascota':\n          characteristic = {\n            priority: '0',\n            icon: icons.birthday_cake,\n            text: value\n          };\n          validator = 'characteristic';\n          break;\n\n        case 'sexo-mascota':\n          characteristic = {\n            priority: '1',\n            icon: value === '1' ? icons.mars : icons.venus,\n            text: value === '1' ? 'Macho' : 'Hembra'\n          };\n          validator = 'characteristic';\n          break;\n\n        case 'tamaño-mascota':\n          characteristic = {\n            priority: '3',\n            icon: icons.dog,\n            text: value === 's' ? 'Pequeño' : value === 'm' ? 'Mediano' : 'Grande'\n          };\n          validator = 'characteristic';\n          break;\n\n        case 'esterilizado':\n          if (value) {\n            characteristic = {\n              priority: '4',\n              icon: icons.band_aid,\n              text: 'Esterilizado'\n            };\n            validator = 'characteristic';\n          } else {\n            delete actualCharacteristics['4'];\n            validator = 'deletedCharacteristic';\n          }\n\n          break;\n\n        case 'chip':\n          if (value) {\n            characteristic = {\n              priority: '5',\n              icon: icons.paw,\n              text: 'Con chip'\n            };\n            validator = 'characteristic';\n          } else {\n            delete actualCharacteristics['5'];\n            validator = 'deletedCharacteristic';\n          }\n\n          break;\n\n        case 'vacunas':\n          if (value) {\n            characteristic = {\n              priority: '6',\n              icon: icons.syringe,\n              text: 'Al día'\n            };\n            validator = 'characteristic';\n          } else {\n            delete actualCharacteristics['6'];\n            validator = 'deletedCharacteristic';\n          }\n\n          break;\n\n        case 'nombre-contacto':\n          newTextBlock.fontSize = 'small';\n          newTextBlock.position = {\n            x: canvasWidth * 0.8,\n            y: canvasHeight * 0.7\n          };\n          validator = 'textBlock';\n          break;\n\n        case 'telefono-contacto':\n          newTextBlock.fontSize = 'small';\n          newTextBlock.position = {\n            x: canvasWidth * 0.8,\n            y: canvasHeight * 0.7 + 20\n          };\n          validator = 'textBlock';\n          break;\n\n        case 'email-contacto':\n          newTextBlock.fontSize = 'small';\n          newTextBlock.position = {\n            x: canvasWidth * 0.8,\n            y: canvasHeight * 0.7 + 40\n          };\n          validator = 'textBlock';\n          break;\n\n        case 'ciudad-contacto':\n          newTextBlock.fontSize = 'small';\n          newTextBlock.position = {\n            x: canvasWidth * 0.8,\n            y: canvasHeight * 0.7 + 60\n          };\n          validator = 'textBlock';\n          break;\n      }\n\n      if (validator === 'textBlock') {\n        this.setState({\n          formValues: _objectSpread({}, this.state.formValues, {\n            [key]: value\n          }),\n          canvasTexts: _objectSpread({}, canvasTexts, {\n            textBlocks: _objectSpread({}, textBlocks, {\n              [key]: newTextBlock\n            })\n          })\n        });\n      } else if (validator === 'characteristic') {\n        this.setState({\n          formValues: _objectSpread({}, this.state.formValues, {\n            [key]: value\n          }),\n          characteristics: _objectSpread({}, characteristics, {\n            [characteristic.priority]: characteristic\n          })\n        });\n      } else if (validator = 'deletedCharacteristic') {\n        this.setState({\n          formValues: _objectSpread({}, this.state.formValues, {\n            [key]: value\n          }),\n          characteristics: actualCharacteristics\n        });\n      }\n    });\n\n    _defineProperty(this, \"deleteCharacteristic\", characPriority => {\n      const {\n        characteristics\n      } = this.state;\n      const actualCharacteristics = characteristics;\n      const updatePriority = {};\n      Object.keys(characteristics).forEach(priority => {\n        if (priority !== characPriority) {\n          updatePriority[priority] = actualCharacteristics[priority];\n        }\n      });\n    });\n\n    _defineProperty(this, \"addTextBlockWithData\", newTextblock => {\n      const {\n        canvasTexts\n      } = this.state;\n      const {\n        textBlocks\n      } = canvasTexts;\n      const id = newTextblock.id;\n      this.setState({\n        canvasTexts: _objectSpread({}, canvasTexts, {\n          textBlocks: _objectSpread({}, textBlocks, {\n            [id]: newTextblock\n          })\n        })\n      });\n    });\n  }\n\n  componentDidMount() {\n    //this.addTextBlock();\n    console.log(window.devicePixelRatio);\n  }\n\n  test() {\n    let stage = new Konva.Stage({\n      container: 'testcanvas',\n      width: 500,\n      height: 750\n    });\n    let layer = new Konva.Layer();\n    let layer2 = new Konva.Layer();\n    let layer3 = new Konva.Layer();\n    let layer4 = new Konva.Layer();\n    let text = new Konva.Text({\n      text: 'Perritu',\n      fontSize: 20,\n      width: 500,\n      align: 'center',\n      y: 50,\n      fontStyle: 'bold'\n    });\n    let text2 = new Konva.Text({\n      text: 'Aaaaaaaaa',\n      fontSize: 15,\n      width: 500,\n      align: 'center',\n      y: 150\n    });\n    let text3 = new Konva.Text({\n      text: 'uwu',\n      fontSize: 10,\n      y: 250,\n      x: 60\n    });\n    let text4 = new Konva.Text({\n      text: 'uwu',\n      fontSize: 10,\n      y: 450,\n      x: 90\n    }); // create label\n\n    var label = new Konva.Label({\n      x: 100,\n      y: 100,\n      draggable: true\n    }); // add a tag to the label\n\n    label.add(new Konva.Tag()); // add text to the label\n\n    label.add(new Konva.Text({\n      text: 'Hello World!',\n      fontSize: 20,\n      lineHeight: 1.2,\n      padding: 10,\n      fill: 'green'\n    }));\n    layer.add(label);\n    layer.add(text);\n    layer2.add(text2);\n    layer3.add(text3);\n    layer4.add(text4);\n    stage.add(layer);\n    stage.add(layer2);\n    stage.add(layer3);\n    stage.add(layer4);\n    const imgB64 = stage.toDataURL({\n      pixelRatio: 3,\n      quality: 1,\n      mimeType: 'image/png',\n      width: 500,\n      height: 750\n    }); //document.write('img src=\"'+imgB64+'\" />');\n\n    let link = document.createElement('a');\n    link.download = \"Test\";\n    link.href = imgB64;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  render() {\n    const {\n      canvasImage,\n      canvasTexts,\n      formValues,\n      canvasHeight,\n      canvasWidth,\n      characteristics\n    } = this.state;\n    const {\n      selectedTextBlock,\n      textBlocks\n    } = canvasTexts;\n    return jsx(\"div\", {\n      css: pageStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, jsx(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }), jsx(\"section\", {\n      \"data-name\": \"bodycontainer\",\n      css: containerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, jsx(LeftSidebar, {\n      canvasRef: this.stageRef,\n      formValues: formValues,\n      onTextBlockInteracted: this.setSelectedTextBlock,\n      selectedTextBlock: selectedTextBlock,\n      textBlocks: textBlocks,\n      onInputChanged: this.setAdoptionFormField,\n      onTextChanged: this.onTextChanged,\n      addTextBlockWithData: this.addTextBlockWithData,\n      onImageUploaded: this.setCanvasImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), jsx(Canvas, {\n      canvasRef: this.stageRef,\n      canvasTexts: canvasTexts,\n      currentCanvasText: textBlocks[selectedTextBlock],\n      image: canvasImage,\n      onRef: this.stageRef,\n      onTextChanged: this.onTextBlockChanged,\n      onTextBlockSelected: this.setSelectedTextBlock,\n      canvasHeight: canvasHeight,\n      canvasWidth: canvasWidth,\n      characteristics: characteristics,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    })), jsx(\"div\", {\n      id: \"testcanvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }), jsx(\"button\", {\n      onClick: this.test,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, \"Hola\"));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Lucas/Documents/quiltros/pages/index.tsx"],"names":["jsx","Component","createRef","Canvas","LeftSidebar","Nav","containerStyle","pageStyle","icons","Konva","Home","canvasImage","canvasTexts","selectedTextBlock","textBlocks","formValues","chip","esterilizado","vacunas","characteristics","canvasHeight","canvasWidth","state","setState","image","key","value","id","text","console","log","actualCharacteristics","newTextBlock","color","fontSize","position","x","y","characteristic","priority","icon","validator","align","width","style","birthday_cake","mars","venus","dog","band_aid","paw","syringe","characPriority","updatePriority","Object","keys","forEach","newTextblock","componentDidMount","window","devicePixelRatio","test","stage","Stage","container","height","layer","Layer","layer2","layer3","layer4","Text","fontStyle","text2","text3","text4","label","Label","draggable","add","Tag","lineHeight","padding","fill","imgB64","toDataURL","pixelRatio","quality","mimeType","link","document","createElement","download","href","body","appendChild","click","removeChild","render","stageRef","setSelectedTextBlock","setAdoptionFormField","onTextChanged","addTextBlockWithData","setCanvasImage","onTextBlockChanged"],"mappings":"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","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport nanoid from 'nanoid';\r\nimport React, { Component, createRef } from 'react';\r\nimport Canvas from '../components/canvas';\r\nimport LeftSidebar from '../components/LeftSideBar';\r\nimport { ICharacteristicElement } from '../components/canvas/CharacteristicsLayer';\r\nimport Nav from '../components/Nav';\r\nimport { containerStyle, pageStyle } from './styles';\r\nimport * as icons from '../assets/icons';\r\nimport Konva from 'konva'\r\n\r\ninterface IHomeState {\r\n  canvasImage: HTMLImageElement | null;\r\n  canvasTexts: ICanvasTexts;\r\n  formValues: IAdoptionForm;\r\n  characteristics: ICharacteristics;\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n}\r\n\r\nexport interface ICanvasTexts {\r\n  selectedTextBlock: string; // TODO: Change this for a string union type\r\n  textBlocks: ITextBlocks\r\n}\r\n\r\ninterface ICharacteristics {\r\n  [priority: string] : ICharacteristicElement;\r\n}\r\n\r\ninterface ITextBlocks {\r\n    // TODO: Change keys on this objects also for a string uniion type.\r\n    // (Based on the types of TextBlocksCreator.buttonsKeys )\r\n    [s: string]: ITextBlockElement;\r\n}\r\n\r\nexport interface ITextBlockElement {\r\n  id: string;\r\n  text: string;\r\n  fontSize: 'small' | 'medium' | 'large';\r\n  color: 'black' | 'red' | 'green' | 'purple' | 'yellow' | 'white';\r\n  position: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  width?: number;\r\n  align?: 'left' | 'center' | 'right';\r\n  style?: 'normal' | 'bold' |  'italic';\r\n}\r\n\r\nexport interface IAdoptionForm {\r\n  'nombre-mascota': string;\r\n  'nombre-contacto': string;\r\n  'telefono-contacto': string;\r\n  'whatsapp-contacto': string;\r\n  'email-contacto': string;\r\n  'esterilizado': boolean;\r\n  'chip': boolean;\r\n  'vacunas': boolean;\r\n  'edad-mascota': string;\r\n  'informacion-extra-mascota'?: string;\r\n  'tamaño-mascota': string;\r\n  'caso-mascota': string;\r\n  'ciudad-contacto': string;\r\n  'sexo-mascota': string;\r\n}\r\n\r\nclass Home extends Component<any, IHomeState> {\r\n  state = {\r\n    canvasImage: null,\r\n    canvasTexts: {\r\n      selectedTextBlock : '',\r\n      textBlocks: {} as ITextBlocks\r\n    },\r\n    formValues: {\r\n      chip: false,\r\n      'edad-mascota': '',\r\n      'email-contacto': '',\r\n      esterilizado: false,\r\n      'informacion-extra-mascota': '',\r\n      'nombre-contacto': '',\r\n      'nombre-mascota': '',\r\n      'tamaño-mascota': '',\r\n      'telefono-contacto': '',\r\n      vacunas: false,\r\n      'whatsapp-contacto': '',\r\n      'caso-mascota': '',\r\n      'ciudad-contacto': '',\r\n      'sexo-mascota': ''\r\n    },\r\n    characteristics: {},\r\n    canvasHeight: 750,\r\n    canvasWidth: 500,\r\n  };\r\n\r\n  stageRef = createRef<any>();\r\n\r\n  componentDidMount() {\r\n    //this.addTextBlock();\r\n    console.log(window.devicePixelRatio);\r\n  }\r\n\r\n  setSelectedTextBlock = (selectedTextBlock: string) => {\r\n    const { canvasTexts } = this.state;\r\n    this.setState({\r\n      canvasTexts: {\r\n        ...canvasTexts,\r\n        selectedTextBlock\r\n      }\r\n    });\r\n  };\r\n\r\n  setCanvasImage = (image: HTMLImageElement) => {\r\n    this.setState({\r\n      canvasImage: image\r\n    });\r\n  };\r\n\r\n  onTextChanged = (key: string, value: string, id: string) => {\r\n    const { canvasTexts } = this.state;\r\n    const { textBlocks } = canvasTexts;\r\n    this.setState({\r\n      canvasTexts: {\r\n        ...canvasTexts,\r\n        textBlocks: {\r\n          ...textBlocks,\r\n          [id]: {\r\n            ...textBlocks[id],\r\n            [key]: value\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  onTextBlockChanged = (id: string, text: string) => {\r\n    const { canvasTexts } = this.state;\r\n    const { textBlocks } = canvasTexts;\r\n    this.setState(\r\n      {\r\n        canvasTexts: {\r\n          ...canvasTexts,\r\n          textBlocks: {\r\n            ...textBlocks,\r\n            [id]: {\r\n              ...textBlocks[id],\r\n              text\r\n            }\r\n          }\r\n        }\r\n      },\r\n      () => {\r\n        console.log(this.state);\r\n      }\r\n    );\r\n  };\r\n\r\n  setAdoptionFormField = (key: keyof IAdoptionForm, value: any) => {\r\n    const { canvasTexts, canvasHeight, canvasWidth, characteristics } = this.state;\r\n    const { textBlocks } = canvasTexts;\r\n    const actualCharacteristics: ICharacteristics = characteristics;\r\n    let newTextBlock: ITextBlockElement = {\r\n      id: key,\r\n      color: 'black',\r\n      text: value,\r\n      fontSize: 'medium',\r\n      position: {x: 0, y: 0}\r\n    }\r\n    let characteristic: ICharacteristicElement = {\r\n      priority: '',\r\n      text: '',\r\n      icon: ''\r\n    }\r\n    let validator: '' | 'textBlock' | 'characteristic' | 'deletedCharacteristic'= '';\r\n    switch (key) {\r\n      case 'nombre-mascota' :\r\n        newTextBlock.align = 'center';\r\n        newTextBlock.width = canvasWidth;\r\n        newTextBlock.position.y = canvasHeight*0.1;\r\n        newTextBlock.style = 'bold';\r\n        newTextBlock.fontSize = 'large';\r\n        validator = 'textBlock';\r\n        break;\r\n      case 'caso-mascota' :\r\n        newTextBlock.align = 'center';\r\n        newTextBlock.width = canvasWidth;\r\n        newTextBlock.position.y = canvasHeight*0.2;\r\n        newTextBlock.text = value === '1' ? \"En adopción\" : 'Perdido';\r\n        validator = 'textBlock';\r\n        break;\r\n      case 'edad-mascota' :\r\n        characteristic = {\r\n          priority: '0',\r\n          icon: icons.birthday_cake,\r\n          text: value\r\n        }\r\n        validator = 'characteristic';\r\n        break;\r\n      case 'sexo-mascota' :\r\n        characteristic = {\r\n          priority: '1',\r\n          icon: value === '1' ? icons.mars : icons.venus,\r\n          text: value === '1' ? 'Macho' : 'Hembra'\r\n        }\r\n        validator = 'characteristic';\r\n        break;\r\n      case 'tamaño-mascota' :\r\n        characteristic = {\r\n          priority: '3',\r\n          icon: icons.dog,\r\n          text: value === 's' ? 'Pequeño' : value === 'm' ? 'Mediano' : 'Grande'\r\n        }\r\n        validator = 'characteristic';\r\n        break;\r\n      case 'esterilizado' :\r\n        if(value) {\r\n          characteristic = {\r\n            priority: '4',\r\n            icon: icons.band_aid,\r\n            text: 'Esterilizado'\r\n          }\r\n          validator = 'characteristic';\r\n        }\r\n        else {\r\n          delete actualCharacteristics['4'];\r\n          validator = 'deletedCharacteristic';\r\n        }\r\n        break;\r\n      case 'chip' :\r\n        if(value) {\r\n          characteristic = {\r\n            priority: '5',\r\n            icon: icons.paw,\r\n            text: 'Con chip'\r\n          }\r\n          validator = 'characteristic';\r\n        }\r\n        else {\r\n          delete actualCharacteristics['5'];\r\n          validator = 'deletedCharacteristic';\r\n        }\r\n        break;\r\n      case 'vacunas' :\r\n        if(value) {\r\n          characteristic = {\r\n            priority: '6',\r\n            icon: icons.syringe,\r\n            text: 'Al día'\r\n          }\r\n          validator = 'characteristic';\r\n        }\r\n        else {\r\n          delete actualCharacteristics['6'];\r\n          validator = 'deletedCharacteristic';\r\n        }\r\n        break;\r\n      case 'nombre-contacto':\r\n        newTextBlock.fontSize = 'small';\r\n        newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7};\r\n        validator = 'textBlock';\r\n        break;\r\n      case 'telefono-contacto':\r\n        newTextBlock.fontSize = 'small';\r\n        newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7 + 20};\r\n        validator = 'textBlock';\r\n        break;\r\n        case 'email-contacto':\r\n          newTextBlock.fontSize = 'small';\r\n          newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7 + 40};\r\n          validator = 'textBlock';\r\n          break;\r\n        case 'ciudad-contacto':\r\n          newTextBlock.fontSize = 'small';\r\n          newTextBlock.position = {x: canvasWidth*0.8, y: canvasHeight*0.7 + 60};\r\n          validator = 'textBlock';\r\n          break;\r\n\r\n    }\r\n    if(validator === 'textBlock') {\r\n      this.setState({\r\n        formValues: {\r\n          ...this.state.formValues,\r\n          [key]: value\r\n        },\r\n        canvasTexts: {\r\n          ...canvasTexts,\r\n          textBlocks: {\r\n            ...textBlocks,\r\n            [key]: newTextBlock\r\n          }\r\n        }\r\n      });\r\n    }\r\n    else if (validator === 'characteristic') {\r\n      this.setState({\r\n        formValues: {\r\n          ...this.state.formValues,\r\n          [key]: value\r\n        },\r\n        characteristics: {\r\n          ...characteristics,\r\n          [characteristic.priority]: characteristic\r\n        }\r\n      });\r\n    }\r\n    else if (validator = 'deletedCharacteristic') {\r\n      this.setState({\r\n        formValues: {\r\n          ...this.state.formValues,\r\n          [key]: value\r\n        },\r\n        characteristics: actualCharacteristics\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteCharacteristic = (characPriority: string) => {\r\n    const { characteristics } = this.state;\r\n    const actualCharacteristics: ICharacteristics = characteristics;\r\n    const updatePriority: ICharacteristics = {};\r\n    Object.keys(characteristics).forEach(priority => {\r\n      if (priority !== characPriority) {\r\n        updatePriority[priority] = actualCharacteristics[priority];\r\n      }\r\n    })\r\n  }\r\n\r\n  /*addTextBlock = () => {\r\n    const { canvasTexts } = this.state;\r\n    const { textBlocks } = canvasTexts;\r\n\r\n    const id = nanoid();\r\n    const newTextblock: ITextBlockElement = {\r\n      color: 'black',\r\n      fontSize: 'medium',\r\n      id,\r\n      text: ''\r\n    };\r\n\r\n    this.setState({\r\n      canvasTexts: {\r\n        ...canvasTexts,\r\n        textBlocks: {\r\n          ...textBlocks,\r\n          [id]: newTextblock\r\n        }\r\n      }\r\n    });\r\n  };*/\r\n\r\n  addTextBlockWithData = (newTextblock: ITextBlockElement) => {\r\n    const { canvasTexts } = this.state;\r\n    const { textBlocks } = canvasTexts;\r\n    const id = newTextblock.id;\r\n    this.setState({\r\n      canvasTexts: {\r\n        ...canvasTexts,\r\n        textBlocks: {\r\n          ...textBlocks,\r\n          [id]: newTextblock\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  test() {\r\n    let stage = new Konva.Stage({\r\n      container: 'testcanvas',\r\n      width: 500,\r\n      height: 750\r\n    });\r\n\r\n    let layer = new Konva.Layer();\r\n    let layer2 = new Konva.Layer();\r\n    let layer3 = new Konva.Layer();\r\n    let layer4 = new Konva.Layer();\r\n\r\n    let text = new Konva.Text({\r\n      text: 'Perritu',\r\n      fontSize: 20,\r\n      width: 500,\r\n      align: 'center',\r\n      y:50,\r\n      fontStyle: 'bold'\r\n    })\r\n\r\n    let text2 = new Konva.Text({\r\n      text: 'Aaaaaaaaa',\r\n      fontSize: 15,\r\n      width: 500,\r\n      align: 'center',\r\n      y:150\r\n    })\r\n\r\n    let text3 = new Konva.Text({\r\n      text: 'uwu',\r\n      fontSize: 10,\r\n      y:250,\r\n      x: 60\r\n    })\r\n\r\n    let text4 = new Konva.Text({\r\n      text: 'uwu',\r\n      fontSize: 10,\r\n      y:450,\r\n      x: 90\r\n    })\r\n\r\n    // create label\r\n    var label = new Konva.Label({\r\n      x: 100,\r\n      y: 100,\r\n      draggable: true\r\n    });\r\n\r\n    // add a tag to the label\r\n    label.add(new Konva.Tag());\r\n\r\n    // add text to the label\r\n    label.add(new Konva.Text({\r\n      text: 'Hello World!',\r\n      fontSize: 20,\r\n      lineHeight: 1.2,\r\n      padding: 10,\r\n      fill: 'green'\r\n    }));\r\n\r\n    layer.add(label);\r\n\r\n    layer.add(text);\r\n    layer2.add(text2);\r\n    layer3.add(text3);\r\n    layer4.add(text4);\r\n    stage.add(layer);\r\n    stage.add(layer2);\r\n    stage.add(layer3);\r\n    stage.add(layer4);\r\n\r\n    const imgB64 = stage.toDataURL({ pixelRatio: 3, quality:1, mimeType: 'image/png', width: 500, height: 750 });\r\n    //document.write('img src=\"'+imgB64+'\" />');\r\n    let link = document.createElement('a');\r\n    link.download = \"Test\";\r\n    link.href = imgB64;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  render() {\r\n    const { canvasImage, canvasTexts, formValues, canvasHeight, canvasWidth, characteristics } = this.state;\r\n    const { selectedTextBlock, textBlocks } = canvasTexts;\r\n    return (\r\n      <div css={pageStyle}>\r\n        <Nav />\r\n        <section data-name=\"bodycontainer\" css={containerStyle}>\r\n          <LeftSidebar\r\n            canvasRef={this.stageRef}\r\n            formValues={formValues}\r\n            onTextBlockInteracted={this.setSelectedTextBlock}\r\n            selectedTextBlock={selectedTextBlock}\r\n            textBlocks={textBlocks}\r\n            onInputChanged={this.setAdoptionFormField}\r\n            onTextChanged={this.onTextChanged}\r\n            addTextBlockWithData={this.addTextBlockWithData}\r\n            onImageUploaded={this.setCanvasImage}\r\n          />\r\n          <Canvas\r\n            canvasRef={this.stageRef}\r\n            canvasTexts={canvasTexts}\r\n            currentCanvasText={textBlocks[selectedTextBlock]}\r\n            image={canvasImage}\r\n            onRef={this.stageRef}\r\n            onTextChanged={this.onTextBlockChanged}\r\n            onTextBlockSelected={this.setSelectedTextBlock}\r\n            canvasHeight={canvasHeight}\r\n            canvasWidth={canvasWidth}\r\n            characteristics={characteristics}\r\n          />\r\n        </section>\r\n        <div id='testcanvas'></div>\r\n        <button onClick={this.test}>Hola</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n"]},"metadata":{},"sourceType":"module"}