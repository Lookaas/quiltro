{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\quiltros\\\\components\\\\LeftSideBar\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport { Component } from 'react';\nimport ContactInformation from './ContactInformation';\nimport PetInformation from './PetInformation';\nimport SubmitButton from './SubmitButton';\nimport { containerStyle } from './styles';\n\nvar LeftSidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LeftSidebar, _Component);\n\n  function LeftSidebar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LeftSidebar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LeftSidebar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isFormValid: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDataByKey\", function (form, key) {\n      return form[key].toString();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getFormData\", function () {\n      var formData = new FormData();\n      var formValues = _this.props.formValues;\n\n      for (var _key2 in formValues) {\n        if (formValues.hasOwnProperty(_key2)) {\n          var element = _this.getDataByKey(formValues, _key2);\n\n          formData.append(_key2, element);\n        }\n      }\n\n      var imageBlob = _this.onExportImageClicked();\n\n      formData.append('image', imageBlob);\n      return {\n        formData: formData,\n        formJson: formValues\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dataURItoBlob\", function (dataURI) {\n      var byteString;\n      var mimestring;\n\n      if (dataURI.split(',')[0].indexOf('base64') !== -1) {\n        byteString = atob(dataURI.split(',')[1]);\n      } else {\n        byteString = decodeURI(dataURI.split(',')[1]);\n      }\n\n      mimestring = dataURI.split(',')[0].split(':')[1].split(';')[0];\n      var content = new Array();\n\n      for (var i = 0; i < byteString.length; i++) {\n        content[i] = byteString.charCodeAt(i);\n      }\n\n      return new Blob([new Uint8Array(content)], {\n        type: mimestring\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onExportImageClicked\", function () {\n      var imgB64 = _this.props.canvasRef.current.toDataURL({\n        pixelRatio: 2\n      });\n\n      var blob = _this.dataURItoBlob(imgB64);\n\n      return blob;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(e) {\n      var imgB64;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              imgB64 = _this.props.canvasRef.current.getStage().toDataURL({\n                pixelRatio: 1,\n                quality: 1,\n                mimeType: 'image/png'\n              });\n              document.write('<img src=\"' + imgB64 + '\" />');\n              /*let link = document.createElement('a');\r\n              link.download = \"Test\";\r\n              link.href = imgB64;\r\n              document.body.appendChild(link);\r\n              link.click();\r\n              document.body.removeChild(link);\r\n              /*const { formData, formJson } = this.getFormData();\r\n              const response = await fetch('/api/image', {\r\n                body: formData,\r\n                method: 'POST'\r\n              }).then(r => r.json());\r\n                ReactGA.event({\r\n                action: 'adoption-created',\r\n                category: 'User',\r\n                value: 1,\r\n                ...formJson\r\n              });*/\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFormChange\", function (e) {\n      var isFormValid = e.currentTarget.checkValidity();\n\n      _this.setState({\n        isFormValid: isFormValid\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(LeftSidebar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onTextChanged = _this$props.onTextChanged,\n          formValues = _this$props.formValues,\n          onInputChanged = _this$props.onInputChanged,\n          onTextBlockInteracted = _this$props.onTextBlockInteracted,\n          selectedTextBlock = _this$props.selectedTextBlock,\n          textBlocks = _this$props.textBlocks,\n          addTextBlockWithData = _this$props.addTextBlockWithData,\n          onImageUploaded = _this$props.onImageUploaded;\n      return jsx(\"form\", {\n        onSubmit: this.onSubmit,\n        onChange: this.onFormChange,\n        css: containerStyle,\n        method: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, jsx(PetInformation, {\n        onChange: onInputChanged,\n        formValues: formValues,\n        addText: addTextBlockWithData,\n        onImageUploaded: onImageUploaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, jsx(ContactInformation, {\n        onChange: onInputChanged,\n        formValues: formValues,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), jsx(SubmitButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LeftSidebar;\n}(Component);\n\nexport { LeftSidebar as default };","map":{"version":3,"sources":["C:/Users/Lucas/Documents/quiltros/components/LeftSideBar/index.tsx"],"names":["jsx","Component","ContactInformation","PetInformation","SubmitButton","containerStyle","LeftSidebar","isFormValid","form","key","toString","formData","FormData","formValues","props","hasOwnProperty","element","getDataByKey","append","imageBlob","onExportImageClicked","formJson","dataURI","byteString","mimestring","split","indexOf","atob","decodeURI","content","Array","i","length","charCodeAt","Blob","Uint8Array","type","imgB64","canvasRef","current","toDataURL","pixelRatio","blob","dataURItoBlob","e","preventDefault","getStage","quality","mimeType","document","write","currentTarget","checkValidity","setState","onTextChanged","onInputChanged","onTextBlockInteracted","selectedTextBlock","textBlocks","addTextBlockWithData","onImageUploaded","onSubmit","onFormChange"],"mappings":"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","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport React, { Component, FormEvent, RefObject } from 'react';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport { IAdoptionForm, ITextBlockElement } from '../../pages';\r\nimport ContactInformation from './ContactInformation';\r\nimport PetInformation from './PetInformation';\r\nimport SubmitButton from './SubmitButton';\r\nimport TextBlocksCreator from './TextBlocksCreator';\r\nimport { ITextBlocksConfigPanelState } from './TextBlocksCreator/panel';\r\nimport { containerStyle } from './styles'\r\nimport { Stage } from 'konva/types/Stage';\r\n\r\nexport interface ILeftSidebarProps {\r\n  canvasRef: RefObject<Stage>;\r\n  formValues: IAdoptionForm;\r\n  selectedTextBlock: string;\r\n  textBlocks: {\r\n    [id: string]: ITextBlockElement;\r\n  };\r\n  //addTextBlock: () => void;\r\n  addTextBlockWithData: (textBlock: ITextBlockElement) => void;\r\n  onInputChanged: (key: keyof IAdoptionForm, value: any) => void;\r\n  onTextBlockInteracted: (key: string) => void;\r\n  onTextChanged: (key: string, value: string, id: string) => void;\r\n  onImageUploaded: (prop1: HTMLImageElement) => void;\r\n}\r\n\r\nexport interface ILeftSidebarState {\r\n  isFormValid: boolean;\r\n}\r\n\r\nexport default class LeftSidebar extends Component<\r\n  ILeftSidebarProps,\r\n  ILeftSidebarState\r\n> {\r\n  state = {\r\n    isFormValid: false\r\n  };\r\n\r\n  getDataByKey = (form: IAdoptionForm, key: keyof IAdoptionForm) => {\r\n    return form[key]!.toString();\r\n  }\r\n\r\n  getFormData = (): { formData: FormData; formJson: object } => {\r\n    const formData = new FormData();\r\n    const { formValues } = this.props;\r\n    for (const key in formValues) {\r\n      if (formValues.hasOwnProperty(key)) {\r\n        const element: string = this.getDataByKey(formValues, key as keyof IAdoptionForm);\r\n        formData.append(key, element);\r\n      }\r\n    }\r\n    const imageBlob = this.onExportImageClicked();\r\n    formData.append('image', imageBlob);\r\n    return {\r\n      formData,\r\n      formJson: formValues\r\n    };\r\n  };\r\n\r\n  dataURItoBlob = (dataURI: String) => {\r\n    let byteString;\r\n    let mimestring;\r\n\r\n    if (dataURI.split(',')[0].indexOf('base64') !== -1) {\r\n      byteString = atob(dataURI.split(',')[1]);\r\n    } else {\r\n      byteString = decodeURI(dataURI.split(',')[1]);\r\n    }\r\n    mimestring = dataURI\r\n      .split(',')[0]\r\n      .split(':')[1]\r\n      .split(';')[0];\r\n    const content = new Array();\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      content[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([new Uint8Array(content)], { type: mimestring });\r\n  };\r\n\r\n  onExportImageClicked = () => {\r\n    const imgB64 = this.props.canvasRef.current!.toDataURL({ pixelRatio: 2 });\r\n    const blob = this.dataURItoBlob(imgB64);\r\n    return blob;\r\n  };\r\n\r\n  onSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const imgB64 = this.props.canvasRef.current!.getStage().toDataURL({ pixelRatio: 1, quality:1, mimeType: 'image/png' });\r\n    document.write('<img src=\"'+imgB64+'\" />');\r\n    /*let link = document.createElement('a');\r\n    link.download = \"Test\";\r\n    link.href = imgB64;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    /*const { formData, formJson } = this.getFormData();\r\n    const response = await fetch('/api/image', {\r\n      body: formData,\r\n      method: 'POST'\r\n    }).then(r => r.json());\r\n\r\n    ReactGA.event({\r\n      action: 'adoption-created',\r\n      category: 'User',\r\n      value: 1,\r\n      ...formJson\r\n    });*/\r\n  };\r\n\r\n  onFormChange = (e: FormEvent<HTMLFormElement>) => {\r\n    const isFormValid = e.currentTarget.checkValidity();\r\n    this.setState({\r\n      isFormValid\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onTextChanged,\r\n      formValues,\r\n      onInputChanged,\r\n      onTextBlockInteracted,\r\n      selectedTextBlock,\r\n      textBlocks,\r\n      addTextBlockWithData,\r\n      onImageUploaded\r\n    } = this.props;\r\n    return (\r\n      <form onSubmit={this.onSubmit} onChange={this.onFormChange} css={containerStyle} method=\"post\">\r\n        <PetInformation onChange={onInputChanged} formValues={formValues} addText={addTextBlockWithData} onImageUploaded={onImageUploaded}/>\r\n        <div>\r\n          <ContactInformation onChange={onInputChanged} formValues={formValues} />\r\n          <SubmitButton />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}