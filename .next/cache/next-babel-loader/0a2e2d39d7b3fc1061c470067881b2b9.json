{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\quiltros\\\\components\\\\canvas\\\\BackgroundImage\\\\index.tsx\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport React from 'react';\nimport { Image as KonvaImage } from 'react-konva';\n\nvar BackgroundImage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BackgroundImage, _React$Component);\n\n  function BackgroundImage() {\n    _classCallCheck(this, BackgroundImage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BackgroundImage).apply(this, arguments));\n  }\n\n  _createClass(BackgroundImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          backgroundImage = _this$props.backgroundImage,\n          canvasHeight = _this$props.canvasHeight,\n          canvasWidth = _this$props.canvasWidth;\n\n      if (!backgroundImage) {\n        return null;\n      }\n\n      var height = backgroundImage.height,\n          width = backgroundImage.width;\n      var medianWidth = -(width / 2 - canvasWidth) / 2;\n      var medianHeight = -(height / 2 - canvasHeight) / 2;\n\n      if (backgroundImage) {\n        return jsx(KonvaImage, {\n          image: backgroundImage,\n          x: medianWidth,\n          y: medianHeight,\n          scaleX: 0.5,\n          scaleY: 0.5,\n          draggable: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      } else {\n        return;\n      }\n    }\n  }]);\n\n  return BackgroundImage;\n}(React.Component);\n\nexport { BackgroundImage as default };","map":{"version":3,"sources":["C:/Users/Lucas/Documents/quiltros/components/canvas/BackgroundImage/index.tsx"],"names":["jsx","React","Image","KonvaImage","BackgroundImage","props","backgroundImage","canvasHeight","canvasWidth","height","width","medianWidth","medianHeight","Component"],"mappings":";;;;;;;;AAAA;AACA,SAASA,GAAT,QAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAK,IAAIC,UAAlB,QAA2C,aAA3C;;IAQqBC,e;;;;;;;;;;;;;6BAIV;AAAA,wBACgD,KAAKC,KADrD;AAAA,UACCC,eADD,eACCA,eADD;AAAA,UACkBC,YADlB,eACkBA,YADlB;AAAA,UACgCC,WADhC,eACgCA,WADhC;;AAEP,UAAI,CAACF,eAAL,EAAsB;AACpB,eAAO,IAAP;AACD;;AAJM,UAKCG,MALD,GAKmBH,eALnB,CAKCG,MALD;AAAA,UAKSC,KALT,GAKmBJ,eALnB,CAKSI,KALT;AAMP,UAAMC,WAAW,GAAG,EAAGD,KAAK,GAAC,CAAP,GAAYF,WAAd,IAA6B,CAAjD;AACA,UAAMI,YAAY,GAAG,EAAGH,MAAM,GAAC,CAAR,GAAaF,YAAf,IAA+B,CAApD;;AACA,UAAID,eAAJ,EAAqB;AACnB,eACE,IAAC,UAAD;AACE,UAAA,KAAK,EAAEA,eADT;AAEE,UAAA,CAAC,EAAEK,WAFL;AAGE,UAAA,CAAC,EAAEC,YAHL;AAIE,UAAA,MAAM,EAAE,GAJV;AAKE,UAAA,MAAM,EAAE,GALV;AAME,UAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,OAXD,MAYK;AACH;AACD;AACF;;;;EA3B0CX,KAAK,CAACY,S;;SAA9BT,e","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport React from 'react';\r\n\r\nimport { Image as KonvaImage, Layer } from 'react-konva';\r\n\r\nexport interface IBackgroundImageProps {\r\n  backgroundImage: HTMLImageElement | null;\r\n  canvasHeight: number;\r\n  canvasWidth: number;\r\n}\r\n\r\nexport default class BackgroundImage extends React.Component<\r\n  IBackgroundImageProps,\r\n  any\r\n> {\r\n  render() {\r\n    const { backgroundImage, canvasHeight, canvasWidth } = this.props;\r\n    if (!backgroundImage) {\r\n      return null;\r\n    }\r\n    const { height, width } = backgroundImage;\r\n    const medianWidth = -((width/2) - canvasWidth) / 2;\r\n    const medianHeight = -((height/2) - canvasHeight) / 2;\r\n    if (backgroundImage) {\r\n      return (\r\n        <KonvaImage\r\n          image={backgroundImage}\r\n          x={medianWidth}\r\n          y={medianHeight}\r\n          scaleX={0.5}\r\n          scaleY={0.5}\r\n          draggable\r\n        />\r\n      )\r\n    }\r\n    else {\r\n      return\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}