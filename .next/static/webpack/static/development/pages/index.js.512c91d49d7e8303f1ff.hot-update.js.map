{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.512c91d49d7e8303f1ff.hot-update.js","sources":["webpack:///./components/LeftSideBar/index.tsx","webpack:///./node_modules/@blueprintjs/core/lib/esm/common/index.js","webpack:///./node_modules/@blueprintjs/core/lib/esm/index.js"],"sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport React, { Component, FormEvent, RefObject } from 'react';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport { IAdoptionForm } from '../../pages';\r\nimport ContactInformation from './ContactInformation';\r\nimport PetInformation from './PetInformation';\r\nimport SubmitButton from './SubmitButton';\r\nimport TextBlocksCreator from './TextBlocksCreator';\r\nimport { ITextBlocksConfigPanelState } from './TextBlocksCreator/panel';\r\nimport { containerStyle } from './styles'\r\n\r\nexport interface ILeftSidebarProps {\r\n  canvasRef: RefObject<any>;\r\n  formValues: IAdoptionForm;\r\n  selectedTextBlock: string;\r\n  textBlocks: {\r\n    [id: string]: ITextBlocksConfigPanelState;\r\n  };\r\n  addTextBlock: () => void;\r\n  addTextBlockWithData: (id: string, value: string) => void;\r\n  onInputChanged: (key: keyof IAdoptionForm, value: any) => void;\r\n  onTextBlockInteracted: (key: string) => void;\r\n  onTextChanged: (key: string, value: string, id: string) => void;\r\n}\r\n\r\nexport interface ILeftSidebarState {\r\n  isFormValid: boolean;\r\n}\r\n\r\nexport default class LeftSidebar extends Component<\r\n  ILeftSidebarProps,\r\n  ILeftSidebarState\r\n> {\r\n  state = {\r\n    isFormValid: false\r\n  };\r\n\r\n  getDataByKey = (form: IAdoptionForm, key: keyof IAdoptionForm) => {\r\n    return form[key]!.toString();\r\n  }\r\n\r\n  getFormData = (): { formData: FormData; formJson: object } => {\r\n    const formData = new FormData();\r\n    const { formValues } = this.props;\r\n    for (const key in formValues) {\r\n      if (formValues.hasOwnProperty(key)) {\r\n        const element: string = this.getDataByKey(formValues, key as keyof IAdoptionForm);\r\n        formData.append(key, element);\r\n      }\r\n    }\r\n    const imageBlob = this.onExportImageClicked();\r\n    formData.append('image', imageBlob);\r\n    return {\r\n      formData,\r\n      formJson: formValues\r\n    };\r\n  };\r\n\r\n  dataURItoBlob = (dataURI: String) => {\r\n    let byteString;\r\n    let mimestring;\r\n\r\n    if (dataURI.split(',')[0].indexOf('base64') !== -1) {\r\n      byteString = atob(dataURI.split(',')[1]);\r\n    } else {\r\n      byteString = decodeURI(dataURI.split(',')[1]);\r\n    }\r\n    mimestring = dataURI\r\n      .split(',')[0]\r\n      .split(':')[1]\r\n      .split(';')[0];\r\n    const content = new Array();\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      content[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([new Uint8Array(content)], { type: mimestring });\r\n  };\r\n\r\n  onExportImageClicked = () => {\r\n    const imgB64 = this.props.canvasRef.current!.toDataURL({ pixelRatio: 2 });\r\n    const blob = this.dataURItoBlob(imgB64);\r\n    return blob;\r\n  };\r\n\r\n  onSubmit = async (e: FormEvent) => {\r\n    //e.preventDefault();\r\n\r\n    console.log(\"Ahhhhh\");\r\n\r\n    /*const { formData, formJson } = this.getFormData();\r\n    const response = await fetch('/api/image', {\r\n      body: formData,\r\n      method: 'POST'\r\n    }).then(r => r.json());\r\n\r\n    ReactGA.event({\r\n      action: 'adoption-created',\r\n      category: 'User',\r\n      value: 1,\r\n      ...formJson\r\n    });*/\r\n  };\r\n\r\n  onFormChange = (e: FormEvent<HTMLFormElement>) => {\r\n    const isFormValid = e.currentTarget.checkValidity();\r\n    this.setState({\r\n      isFormValid\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onTextChanged,\r\n      formValues,\r\n      onInputChanged,\r\n      onTextBlockInteracted,\r\n      selectedTextBlock,\r\n      addTextBlock,\r\n      textBlocks,\r\n      addTextBlockWithData\r\n    } = this.props;\r\n    return (\r\n      <form onSubmit={this.onSubmit} onChange={this.onFormChange} css={containerStyle}>\r\n        <PetInformation onChange={onInputChanged} formValues={formValues} addText={addTextBlockWithData} />\r\n        <div>\r\n          <ContactInformation onChange={onInputChanged} formValues={formValues} />\r\n          <SubmitButton />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from \"./abstractComponent\";\nexport * from \"./abstractComponent2\";\nexport * from \"./abstractPureComponent\";\nexport * from \"./abstractPureComponent2\";\nexport * from \"./alignment\";\nexport * from \"./boundary\";\nexport * from \"./colors\";\nexport * from \"./elevation\";\nexport * from \"./intent\";\nexport * from \"./position\";\nexport * from \"./props\";\nimport * as Classes from \"./classes\";\nimport * as Keys from \"./keys\";\nimport * as Utils from \"./utils\";\nexport { Classes, Keys, Utils };\n// NOTE: Errors is not exported in public API\n//# sourceMappingURL=index.js.map","/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport * from \"./accessibility\";\nexport * from \"./common\";\nexport * from \"./components\";\n//# sourceMappingURL=index.js.map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AAIA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;;;;;;;;;;;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AArGA;AACA;;;;;;;;;;;;;AChsourceRoot":""}